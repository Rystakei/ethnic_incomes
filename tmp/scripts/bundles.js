/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	window.React = __webpack_require__(1);
	window.Select = __webpack_require__(158);
	window.ReactDOM = __webpack_require__(315);
	window.ChartistGraph = __webpack_require__(322);
	// window.Countries = JSON.stringify(require("world-countries"));
	window.Countries = JSON.parse(__webpack_require__(324));

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var ReactDOM = __webpack_require__(3);
	var ReactDOMServer = __webpack_require__(148);
	var ReactIsomorphic = __webpack_require__(152);

	var assign = __webpack_require__(39);
	var deprecated = __webpack_require__(157);

	// `version` will be added here by ReactIsomorphic.
	var React = {};

	assign(React, ReactIsomorphic);

	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});

	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactDOMTextComponent = __webpack_require__(6);
	var ReactDefaultInjection = __webpack_require__(71);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdates = __webpack_require__(54);
	var ReactVersion = __webpack_require__(146);

	var findDOMNode = __webpack_require__(91);
	var renderSubtreeIntoContainer = __webpack_require__(147);
	var warning = __webpack_require__(25);

	ReactDefaultInjection.inject();

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(9);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

	    // shams
	    Object.create, Object.freeze];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 4 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 5 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(7);
	var DOMPropertyOperations = __webpack_require__(22);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactMount = __webpack_require__(28);

	var assign = __webpack_require__(39);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var setTextContent = __webpack_require__(20);
	var validateDOMNesting = __webpack_require__(70);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },

	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(8);
	var ReactMultiChildUpdateTypes = __webpack_require__(16);
	var ReactPerf = __webpack_require__(18);

	var setInnerHTML = __webpack_require__(19);
	var setTextContent = __webpack_require__(20);
	var invariant = __webpack_require__(13);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.

	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

	  parentNode.insertBefore(childNode, beforeChild);
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var createNodesFromMarkup = __webpack_require__(10);
	var emptyFunction = __webpack_require__(15);
	var getMarkupWrap = __webpack_require__(14);
	var invariant = __webpack_require__(13);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var createArrayFromMixed = __webpack_require__(11);
	var getMarkupWrap = __webpack_require__(14);
	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	'use strict';

	var toArray = __webpack_require__(12);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	/*eslint-disable fb-www/unsafe-html */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var setInnerHTML = __webpack_require__(19);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ReactPerf = __webpack_require__(18);

	var quoteAttributeValueForBrowser = __webpack_require__(24);
	var warning = __webpack_require__(25);

	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }

	};

	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(21);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(15);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(27);
	var ReactMount = __webpack_require__(28);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(7);
	var DOMPropertyOperations = __webpack_require__(22);
	var ReactMount = __webpack_require__(28);
	var ReactPerf = __webpack_require__(18);

	var invariant = __webpack_require__(13);

	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactCurrentOwner = __webpack_require__(5);
	var ReactDOMFeatureFlags = __webpack_require__(41);
	var ReactElement = __webpack_require__(42);
	var ReactEmptyComponentRegistry = __webpack_require__(44);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactMarkupChecksum = __webpack_require__(48);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdateQueue = __webpack_require__(53);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var containsNode = __webpack_require__(59);
	var instantiateReactComponent = __webpack_require__(62);
	var invariant = __webpack_require__(13);
	var setInnerHTML = __webpack_require__(19);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var validateDOMNesting = __webpack_require__(70);
	var warning = __webpack_require__(25);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);
	var EventPluginRegistry = __webpack_require__(32);
	var ReactEventEmitterMixin = __webpack_require__(37);
	var ReactPerf = __webpack_require__(18);
	var ViewportMetrics = __webpack_require__(38);

	var assign = __webpack_require__(39);
	var isEventSupported = __webpack_require__(40);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(32);
	var EventPluginUtils = __webpack_require__(33);
	var ReactErrorUtils = __webpack_require__(34);

	var accumulateInto = __webpack_require__(35);
	var forEachAccumulated = __webpack_require__(36);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var ReactErrorUtils = __webpack_require__(34);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 36 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(31);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 41 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);

	var assign = __webpack_require__(39);
	var canDefineProperty = __webpack_require__(43);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 44 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */

	'use strict';

	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};

	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(46);

	var invariant = __webpack_require__(13);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;

/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(49);

	var TAG_END = /\/?>/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(51);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(52);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },

	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },

	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(55);
	var PooledClass = __webpack_require__(56);
	var ReactPerf = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(50);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	'use strict';

	var isTextNode = __webpack_require__(60);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;

	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}

	module.exports = containsNode;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	'use strict';

	var isNode = __webpack_require__(61);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(63);
	var ReactEmptyComponent = __webpack_require__(68);
	var ReactNativeComponent = __webpack_require__(69);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactPerf = __webpack_require__(18);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactReconciler = __webpack_require__(50);
	var ReactUpdateQueue = __webpack_require__(53);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var warning = __webpack_require__(25);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst;
	    var renderedElement;

	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);

	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }

	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;

	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(13);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(17);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 67 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactEmptyComponentRegistry = __webpack_require__(44);
	var ReactReconciler = __webpack_require__(50);

	var assign = __webpack_require__(39);

	var placeholderElement;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};

	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    ReactEmptyComponentRegistry.registerNullComponentID(rootID);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(25);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    parentTag: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.parentTag = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };

	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(72);
	var ChangeEventPlugin = __webpack_require__(80);
	var ClientReactRootIndex = __webpack_require__(83);
	var DefaultEventPluginOrder = __webpack_require__(84);
	var EnterLeaveEventPlugin = __webpack_require__(85);
	var ExecutionEnvironment = __webpack_require__(9);
	var HTMLDOMPropertyConfig = __webpack_require__(89);
	var ReactBrowserComponentMixin = __webpack_require__(90);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactDefaultBatchingStrategy = __webpack_require__(92);
	var ReactDOMComponent = __webpack_require__(93);
	var ReactDOMTextComponent = __webpack_require__(6);
	var ReactEventListener = __webpack_require__(118);
	var ReactInjection = __webpack_require__(121);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactReconcileTransaction = __webpack_require__(125);
	var SelectEventPlugin = __webpack_require__(130);
	var ServerReactRootIndex = __webpack_require__(131);
	var SimpleEventPlugin = __webpack_require__(132);
	var SVGDOMPropertyConfig = __webpack_require__(141);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(142);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var FallbackCompositionState = __webpack_require__(74);
	var SyntheticCompositionEvent = __webpack_require__(76);
	var SyntheticInputEvent = __webpack_require__(78);

	var keyOf = __webpack_require__(79);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);

	var warning = __webpack_require__(25);

	var accumulateInto = __webpack_require__(35);
	var forEachAccumulated = __webpack_require__(36);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var getTextContentAccessor = __webpack_require__(75);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(25);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	  this.target = nativeEventTarget;
	  this.currentTarget = nativeEventTarget;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPluginHub = __webpack_require__(31);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactUpdates = __webpack_require__(54);
	var SyntheticEvent = __webpack_require__(77);

	var getEventTarget = __webpack_require__(81);
	var isEventSupported = __webpack_require__(40);
	var isTextInputElement = __webpack_require__(82);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(79);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var SyntheticMouseEvent = __webpack_require__(86);

	var ReactMount = __webpack_require__(28);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);
	var ViewportMetrics = __webpack_require__(38);

	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	var getEventTarget = __webpack_require__(81);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 88 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ExecutionEnvironment = __webpack_require__(9);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,

	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var ReactInstanceMap = __webpack_require__(47);

	var findDOMNode = __webpack_require__(91);
	var warning = __webpack_require__(25);

	var didWarnKey = '_getDOMNodeDidWarn';

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactInstanceMap = __webpack_require__(47);
	var ReactMount = __webpack_require__(28);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(54);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var AutoFocusUtils = __webpack_require__(94);
	var CSSPropertyOperations = __webpack_require__(96);
	var DOMProperty = __webpack_require__(23);
	var DOMPropertyOperations = __webpack_require__(22);
	var EventConstants = __webpack_require__(30);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactComponentBrowserEnvironment = __webpack_require__(26);
	var ReactDOMButton = __webpack_require__(104);
	var ReactDOMInput = __webpack_require__(105);
	var ReactDOMOption = __webpack_require__(109);
	var ReactDOMSelect = __webpack_require__(112);
	var ReactDOMTextarea = __webpack_require__(113);
	var ReactMount = __webpack_require__(28);
	var ReactMultiChild = __webpack_require__(114);
	var ReactPerf = __webpack_require__(18);
	var ReactUpdateQueue = __webpack_require__(53);

	var assign = __webpack_require__(39);
	var canDefineProperty = __webpack_require__(43);
	var escapeTextContentForBrowser = __webpack_require__(21);
	var invariant = __webpack_require__(13);
	var isEventSupported = __webpack_require__(40);
	var keyOf = __webpack_require__(79);
	var setInnerHTML = __webpack_require__(19);
	var setTextContent = __webpack_require__(20);
	var shallowEqual = __webpack_require__(117);
	var validateDOMNesting = __webpack_require__(70);
	var warning = __webpack_require__(25);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });

	var ELEMENT_NODE_TYPE = 1;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}

	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}

	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}

	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}

	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}

	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}

	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}

	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function (element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }

	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }

	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },

	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);

	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;

	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }

	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactMount = __webpack_require__(28);

	var findDOMNode = __webpack_require__(91);
	var focusNode = __webpack_require__(95);

	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};

	var AutoFocusUtils = {
	  Mixin: Mixin,

	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactPerf = __webpack_require__(18);

	var camelizeStyleName = __webpack_require__(98);
	var dangerousStyleValue = __webpack_require__(100);
	var hyphenateStyleName = __webpack_require__(101);
	var memoizeStringOnly = __webpack_require__(103);
	var warning = __webpack_require__(25);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(99);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	"use strict";

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(102);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	'use strict';

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 104 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = ReactDOMButton;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(27);
	var LinkedValueUtils = __webpack_require__(106);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },

	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(107);
	var ReactPropTypeLocations = __webpack_require__(65);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocationNames = __webpack_require__(66);

	var emptyFunction = __webpack_require__(15);
	var getIteratorFn = __webpack_require__(108);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactChildren = __webpack_require__(110);
	var ReactDOMSelect = __webpack_require__(112);

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	var valueContextKey = ReactDOMSelect.valueContextKey;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }

	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];

	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });

	    nativeProps.children = content;
	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);
	var ReactElement = __webpack_require__(42);

	var emptyFunction = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(111);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceHandles = __webpack_require__(45);

	var getIteratorFn = __webpack_require__(108);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(106);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,

	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },

	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(106);
	var ReactDOMIDOperations = __webpack_require__(27);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);

	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactMultiChildUpdateTypes = __webpack_require__(16);

	var ReactCurrentOwner = __webpack_require__(5);
	var ReactReconciler = __webpack_require__(50);
	var ReactChildReconciler = __webpack_require__(115);

	var flattenChildren = __webpack_require__(116);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(50);

	var instantiateReactComponent = __webpack_require__(62);
	var shouldUpdateReactComponent = __webpack_require__(67);
	var traverseAllChildren = __webpack_require__(111);
	var warning = __webpack_require__(25);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(111);
	var warning = __webpack_require__(25);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(119);
	var ExecutionEnvironment = __webpack_require__(9);
	var PooledClass = __webpack_require__(56);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMount = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(54);

	var assign = __webpack_require__(39);
	var getEventTarget = __webpack_require__(81);
	var getUnboundedScrollPosition = __webpack_require__(120);

	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }

	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}

	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);

	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	'use strict';

	var emptyFunction = __webpack_require__(15);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function () {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 120 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var EventPluginHub = __webpack_require__(31);
	var ReactComponentEnvironment = __webpack_require__(64);
	var ReactClass = __webpack_require__(122);
	var ReactEmptyComponent = __webpack_require__(68);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactNativeComponent = __webpack_require__(69);
	var ReactPerf = __webpack_require__(18);
	var ReactRootIndex = __webpack_require__(46);
	var ReactUpdates = __webpack_require__(54);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(123);
	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactNoopUpdateQueue = __webpack_require__(124);

	var assign = __webpack_require__(39);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var keyMirror = __webpack_require__(17);
	var keyOf = __webpack_require__(79);
	var warning = __webpack_require__(25);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(124);

	var canDefineProperty = __webpack_require__(43);
	var emptyObject = __webpack_require__(58);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(25);

	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }

	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(55);
	var PooledClass = __webpack_require__(56);
	var ReactBrowserEventEmitter = __webpack_require__(29);
	var ReactDOMFeatureFlags = __webpack_require__(41);
	var ReactInputSelection = __webpack_require__(126);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(127);

	var containsNode = __webpack_require__(59);
	var focusNode = __webpack_require__(95);
	var getActiveElement = __webpack_require__(129);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var getNodeForCharacterOffset = __webpack_require__(128);
	var getTextContentAccessor = __webpack_require__(75);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 128 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventPropagators = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(9);
	var ReactInputSelection = __webpack_require__(126);
	var SyntheticEvent = __webpack_require__(77);

	var getActiveElement = __webpack_require__(129);
	var isTextInputElement = __webpack_require__(82);
	var keyOf = __webpack_require__(79);
	var shallowEqual = __webpack_require__(117);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(30);
	var EventListener = __webpack_require__(119);
	var EventPropagators = __webpack_require__(73);
	var ReactMount = __webpack_require__(28);
	var SyntheticClipboardEvent = __webpack_require__(133);
	var SyntheticEvent = __webpack_require__(77);
	var SyntheticFocusEvent = __webpack_require__(134);
	var SyntheticKeyboardEvent = __webpack_require__(135);
	var SyntheticMouseEvent = __webpack_require__(86);
	var SyntheticDragEvent = __webpack_require__(138);
	var SyntheticTouchEvent = __webpack_require__(139);
	var SyntheticUIEvent = __webpack_require__(87);
	var SyntheticWheelEvent = __webpack_require__(140);

	var emptyFunction = __webpack_require__(15);
	var getEventCharCode = __webpack_require__(136);
	var invariant = __webpack_require__(13);
	var keyOf = __webpack_require__(79);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(77);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	var getEventCharCode = __webpack_require__(136);
	var getEventKey = __webpack_require__(137);
	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(136);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(86);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(87);

	var getEventModifierState = __webpack_require__(88);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(86);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(23);
	var ReactDefaultPerfAnalysis = __webpack_require__(143);
	var ReactMount = __webpack_require__(28);
	var ReactPerf = __webpack_require__(18);

	var performanceNow = __webpack_require__(144);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {

	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	'use strict';

	var assign = __webpack_require__(39);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	'use strict';

	var performance = __webpack_require__(145);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(9);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 146 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '0.14.6';

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(28);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(71);
	var ReactServerRendering = __webpack_require__(149);
	var ReactVersion = __webpack_require__(146);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactDefaultBatchingStrategy = __webpack_require__(92);
	var ReactElement = __webpack_require__(42);
	var ReactInstanceHandles = __webpack_require__(45);
	var ReactMarkupChecksum = __webpack_require__(48);
	var ReactServerBatchingStrategy = __webpack_require__(150);
	var ReactServerRenderingTransaction = __webpack_require__(151);
	var ReactUpdates = __webpack_require__(54);

	var emptyObject = __webpack_require__(58);
	var instantiateReactComponent = __webpack_require__(62);
	var invariant = __webpack_require__(13);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(56);
	var CallbackQueue = __webpack_require__(55);
	var Transaction = __webpack_require__(57);

	var assign = __webpack_require__(39);
	var emptyFunction = __webpack_require__(15);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */

	'use strict';

	var ReactChildren = __webpack_require__(110);
	var ReactComponent = __webpack_require__(123);
	var ReactClass = __webpack_require__(122);
	var ReactDOMFactories = __webpack_require__(153);
	var ReactElement = __webpack_require__(42);
	var ReactElementValidator = __webpack_require__(154);
	var ReactPropTypes = __webpack_require__(107);
	var ReactVersion = __webpack_require__(146);

	var assign = __webpack_require__(39);
	var onlyChild = __webpack_require__(156);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactElementValidator = __webpack_require__(154);

	var mapObject = __webpack_require__(155);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(42);
	var ReactPropTypeLocations = __webpack_require__(65);
	var ReactPropTypeLocationNames = __webpack_require__(66);
	var ReactCurrentOwner = __webpack_require__(5);

	var canDefineProperty = __webpack_require__(43);
	var getIteratorFn = __webpack_require__(108);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(25);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 155 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(42);

	var invariant = __webpack_require__(13);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */

	'use strict';

	var assign = __webpack_require__(39);
	var warning = __webpack_require__(25);

	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }

	  return fn;
	}

	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(159);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(315);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactInputAutosize = __webpack_require__(316);

	var _reactInputAutosize2 = _interopRequireDefault(_reactInputAutosize);

	var _classnames = __webpack_require__(317);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _utilsStripDiacritics = __webpack_require__(318);

	var _utilsStripDiacritics2 = _interopRequireDefault(_utilsStripDiacritics);

	var _Async = __webpack_require__(319);

	var _Async2 = _interopRequireDefault(_Async);

	var _Option = __webpack_require__(320);

	var _Option2 = _interopRequireDefault(_Option);

	var _Value = __webpack_require__(321);

	var _Value2 = _interopRequireDefault(_Value);

	function stringifyValue(value) {
		if (typeof value === 'object') {
			return JSON.stringify(value);
		} else {
			return value;
		}
	}

	var Select = _react2['default'].createClass({

		statics: { Async: _Async2['default'] },

		displayName: 'Select',

		propTypes: {
			addLabelText: _react2['default'].PropTypes.string, // placeholder displayed when you want to add a label on a multi-value input
			allowCreate: _react2['default'].PropTypes.bool, // whether to allow creation of new entries
			autofocus: _react2['default'].PropTypes.bool, // autofocus the component on mount
			backspaceRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
			className: _react2['default'].PropTypes.string, // className for the outer element
			clearAllText: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]), // title for the "clear" control when multi: true
			clearValueText: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]), // title for the "clear" control
			clearable: _react2['default'].PropTypes.bool, // should it be possible to reset value
			delimiter: _react2['default'].PropTypes.string, // delimiter to use to join multiple values for the hidden field value
			disabled: _react2['default'].PropTypes.bool, // whether the Select is disabled or not
			escapeClearsValue: _react2['default'].PropTypes.bool, // whether escape clears the value when the menu is closed
			filterOption: _react2['default'].PropTypes.func, // method to filter a single option (option, filterString)
			filterOptions: _react2['default'].PropTypes.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
			ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering
			ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering
			inputProps: _react2['default'].PropTypes.object, // custom attributes for the Input
			isLoading: _react2['default'].PropTypes.bool, // whether the Select is loading externally or not (such as options being loaded)
			labelKey: _react2['default'].PropTypes.string, // path of the label value in option objects
			matchPos: _react2['default'].PropTypes.string, // (any|start) match the start or entire string when filtering
			matchProp: _react2['default'].PropTypes.string, // (any|label|value) which option property to filter on
			scrollMenuIntoView: _react2['default'].PropTypes.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
			menuBuffer: _react2['default'].PropTypes.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
			menuStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu
			menuContainerStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu container
			multi: _react2['default'].PropTypes.bool, // multi-value input
			name: _react2['default'].PropTypes.string, // generates a hidden <input /> tag with this field name for html forms
			newOptionCreator: _react2['default'].PropTypes.func, // factory to create new options when allowCreate set
			noResultsText: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]), // placeholder displayed when there are no matching search results
			onBlur: _react2['default'].PropTypes.func, // onBlur handler: function (event) {}
			onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
			onFocus: _react2['default'].PropTypes.func, // onFocus handler: function (event) {}
			onInputChange: _react2['default'].PropTypes.func, // onInputChange handler: function (inputValue) {}
			onValueClick: _react2['default'].PropTypes.func, // onClick handler for value labels: function (value, event) {}
			onMenuScrollToBottom: _react2['default'].PropTypes.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
			optionComponent: _react2['default'].PropTypes.func, // option component to render in dropdown
			optionRenderer: _react2['default'].PropTypes.func, // optionRenderer: function (option) {}
			options: _react2['default'].PropTypes.array, // array of options
			placeholder: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]), // field placeholder, displayed when there's no value
			searchable: _react2['default'].PropTypes.bool, // whether to enable searching feature or not
			simpleValue: _react2['default'].PropTypes.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
			style: _react2['default'].PropTypes.object, // optional style to apply to the control
			tabIndex: _react2['default'].PropTypes.string, // optional tab index of the control
			value: _react2['default'].PropTypes.any, // initial field value
			valueComponent: _react2['default'].PropTypes.func, // value component to render
			valueKey: _react2['default'].PropTypes.string, // path of the label value in option objects
			valueRenderer: _react2['default'].PropTypes.func, // valueRenderer: function (option) {}
			wrapperStyle: _react2['default'].PropTypes.object },

		// optional style to apply to the component wrapper
		getDefaultProps: function getDefaultProps() {
			return {
				addLabelText: 'Add "{label}"?',
				allowCreate: false,
				backspaceRemoves: true,
				clearAllText: 'Clear all',
				clearValueText: 'Clear value',
				clearable: true,
				delimiter: ',',
				disabled: false,
				escapeClearsValue: true,
				filterOptions: true,
				ignoreAccents: true,
				ignoreCase: true,
				inputProps: {},
				isLoading: false,
				labelKey: 'label',
				matchPos: 'any',
				matchProp: 'any',
				scrollMenuIntoView: true,
				menuBuffer: 0,
				multi: false,
				noResultsText: 'No results found',
				optionComponent: _Option2['default'],
				placeholder: 'Select...',
				searchable: true,
				simpleValue: false,
				valueComponent: _Value2['default'],
				valueKey: 'value'
			};
		},

		getInitialState: function getInitialState() {
			return {
				inputValue: '',
				isFocused: false,
				isLoading: false,
				isOpen: false,
				isPseudoFocused: false
			};
		},

		componentDidMount: function componentDidMount() {
			if (this.props.autofocus) {
				this.focus();
			}
		},

		componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
			if (prevState.inputValue !== this.state.inputValue && this.props.onInputChange) {
				this.props.onInputChange(this.state.inputValue);
			}
			if (this._scrollToFocusedOptionOnUpdate && this.refs.focused && this.refs.menu) {
				this._scrollToFocusedOptionOnUpdate = false;
				var focusedDOM = _reactDom2['default'].findDOMNode(this.refs.focused);
				var menuDOM = _reactDom2['default'].findDOMNode(this.refs.menu);
				var focusedRect = focusedDOM.getBoundingClientRect();
				var menuRect = menuDOM.getBoundingClientRect();
				if (focusedRect.bottom > menuRect.bottom || focusedRect.top < menuRect.top) {
					menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
				}
			}
			if (this.props.scrollMenuIntoView && this.refs.menuContainer) {
				var menuContainerRect = this.refs.menuContainer.getBoundingClientRect();
				if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
					window.scrollTo(0, window.scrollY + menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);
				}
			}
			if (prevProps.disabled !== this.props.disabled) {
				this.setState({ isFocused: false });
			}
		},

		focus: function focus() {
			if (!this.refs.input) return;
			this.refs.input.focus();
		},

		handleMouseDown: function handleMouseDown(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}

			// prevent default event handlers
			event.stopPropagation();
			event.preventDefault();

			// for the non-searchable select, toggle the menu
			if (!this.props.searchable) {
				this.focus();
				return this.setState({
					isOpen: !this.state.isOpen
				});
			}

			if (this.state.isFocused) {
				// if the input is focused, ensure the menu is open
				this.setState({
					isOpen: true,
					isPseudoFocused: false
				});
			} else {
				// otherwise, focus the input and open the menu
				this._openAfterFocus = true;
				this.focus();
			}
		},

		handleMouseDownOnArrow: function handleMouseDownOnArrow(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			// If the menu isn't open, let the event bubble to the main handleMouseDown
			if (!this.state.isOpen) {
				return;
			}
			// prevent default event handlers
			event.stopPropagation();
			event.preventDefault();
			// close the menu
			this.closeMenu();
		},

		closeMenu: function closeMenu() {
			this.setState({
				isOpen: false,
				isPseudoFocused: this.state.isFocused && !this.props.multi,
				inputValue: ''
			});
		},

		handleInputFocus: function handleInputFocus(event) {
			var isOpen = this.state.isOpen || this._openAfterFocus;
			if (this.props.onFocus) {
				this.props.onFocus(event);
			}
			this.setState({
				isFocused: true,
				isOpen: isOpen
			});
			this._openAfterFocus = false;
		},

		handleInputBlur: function handleInputBlur(event) {
			if (this.refs.menu && document.activeElement.isEqualNode(this.refs.menu)) {
				return;
			}

			if (this.props.onBlur) {
				this.props.onBlur(event);
			}
			this.setState({
				inputValue: '',
				isFocused: false,
				isOpen: false,
				isPseudoFocused: false
			});
		},

		handleInputChange: function handleInputChange(event) {
			this.setState({
				isOpen: true,
				isPseudoFocused: false,
				inputValue: event.target.value
			});
		},

		handleKeyDown: function handleKeyDown(event) {
			if (this.props.disabled) return;
			switch (event.keyCode) {
				case 8:
					// backspace
					if (!this.state.inputValue && this.props.backspaceRemoves) {
						event.preventDefault();
						this.popValue();
					}
					return;
				case 9:
					// tab
					if (event.shiftKey || !this.state.isOpen) {
						return;
					}
					this.selectFocusedOption();
					break;
				case 13:
					// enter
					if (!this.state.isOpen) return;
					this.selectFocusedOption();
					break;
				case 27:
					// escape
					if (this.state.isOpen) {
						this.closeMenu();
					} else if (this.props.clearable && this.props.escapeClearsValue) {
						this.clearValue(event);
					}
					break;
				case 38:
					// up
					this.focusPreviousOption();
					break;
				case 40:
					// down
					this.focusNextOption();
					break;
				// case 188: // ,
				// 	if (this.props.allowCreate && this.props.multi) {
				// 		event.preventDefault();
				// 		event.stopPropagation();
				// 		this.selectFocusedOption();
				// 	} else {
				// 		return;
				// 	}
				// break;
				default:
					return;
			}
			event.preventDefault();
		},

		handleValueClick: function handleValueClick(option, event) {
			if (!this.props.onValueClick) return;
			this.props.onValueClick(option, event);
		},

		handleMenuScroll: function handleMenuScroll(event) {
			if (!this.props.onMenuScrollToBottom) return;
			var target = event.target;

			if (target.scrollHeight > target.offsetHeight && !(target.scrollHeight - target.offsetHeight - target.scrollTop)) {
				this.props.onMenuScrollToBottom();
			}
		},

		getOptionLabel: function getOptionLabel(op) {
			return op[this.props.labelKey];
		},

		getValueArray: function getValueArray() {
			var value = this.props.value;
			if (this.props.multi) {
				if (typeof value === 'string') value = value.split(this.props.delimiter);
				if (!Array.isArray(value)) {
					if (value === null || value === undefined) return [];
					value = [value];
				}
				return value.map(this.expandValue).filter(function (i) {
					return i;
				});
			}
			var expandedValue = this.expandValue(value);
			return expandedValue ? [expandedValue] : [];
		},

		expandValue: function expandValue(value) {
			if (typeof value !== 'string' && typeof value !== 'number') return value;
			var _props = this.props;
			var options = _props.options;
			var valueKey = _props.valueKey;

			if (!options) return;
			for (var i = 0; i < options.length; i++) {
				if (options[i][valueKey] === value) return options[i];
			}
		},

		setValue: function setValue(value) {
			var _this = this;

			if (!this.props.onChange) return;
			if (this.props.simpleValue && value) {
				value = this.props.multi ? value.map(function (i) {
					return i[_this.props.valueKey];
				}).join(this.props.delimiter) : value[this.props.valueKey];
			}
			this.props.onChange(value);
		},

		selectValue: function selectValue(value) {
			if (this.props.multi) {
				this.addValue(value);
				this.setState({
					inputValue: ''
				});
			} else {
				this.setValue(value);
				this.setState({
					isOpen: false,
					inputValue: '',
					isPseudoFocused: this.state.isFocused
				});
			}
		},

		addValue: function addValue(value) {
			var valueArray = this.getValueArray();
			this.setValue(valueArray.concat(value));
		},

		popValue: function popValue() {
			var valueArray = this.getValueArray();
			if (!valueArray.length) return;
			if (valueArray[valueArray.length - 1].clearableValue === false) return;
			this.setValue(valueArray.slice(0, valueArray.length - 1));
		},

		removeValue: function removeValue(value) {
			var valueArray = this.getValueArray();
			this.setValue(valueArray.filter(function (i) {
				return i !== value;
			}));
			this.focus();
		},

		clearValue: function clearValue(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, ignore it.
			if (event && event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
			this.setValue(null);
			this.setState({
				isOpen: false,
				inputValue: ''
			}, this.focus);
		},

		focusOption: function focusOption(option) {
			this.setState({
				focusedOption: option
			});
		},

		focusNextOption: function focusNextOption() {
			this.focusAdjacentOption('next');
		},

		focusPreviousOption: function focusPreviousOption() {
			this.focusAdjacentOption('previous');
		},

		focusAdjacentOption: function focusAdjacentOption(dir) {
			var options = this._visibleOptions.filter(function (i) {
				return !i.disabled;
			});
			this._scrollToFocusedOptionOnUpdate = true;
			if (!this.state.isOpen) {
				this.setState({
					isOpen: true,
					inputValue: '',
					focusedOption: this._focusedOption || options[dir === 'next' ? 0 : options.length - 1]
				});
				return;
			}
			if (!options.length) return;
			var focusedIndex = -1;
			for (var i = 0; i < options.length; i++) {
				if (this._focusedOption === options[i]) {
					focusedIndex = i;
					break;
				}
			}
			var focusedOption = options[0];
			if (dir === 'next' && focusedIndex > -1 && focusedIndex < options.length - 1) {
				focusedOption = options[focusedIndex + 1];
			} else if (dir === 'previous') {
				if (focusedIndex > 0) {
					focusedOption = options[focusedIndex - 1];
				} else {
					focusedOption = options[options.length - 1];
				}
			}
			this.setState({
				focusedOption: focusedOption
			});
		},

		selectFocusedOption: function selectFocusedOption() {
			// if (this.props.allowCreate && !this.state.focusedOption) {
			// 	return this.selectValue(this.state.inputValue);
			// }
			if (this._focusedOption) {
				return this.selectValue(this._focusedOption);
			}
		},

		renderLoading: function renderLoading() {
			if (!this.props.isLoading) return;
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-loading-zone', 'aria-hidden': 'true' },
				_react2['default'].createElement('span', { className: 'Select-loading' })
			);
		},

		renderValue: function renderValue(valueArray, isOpen) {
			var _this2 = this;

			var renderLabel = this.props.valueRenderer || this.getOptionLabel;
			var ValueComponent = this.props.valueComponent;
			if (!valueArray.length) {
				return !this.state.inputValue ? _react2['default'].createElement(
					'div',
					{ className: 'Select-placeholder' },
					this.props.placeholder
				) : null;
			}
			var onClick = this.props.onValueClick ? this.handleValueClick : null;
			if (this.props.multi) {
				return valueArray.map(function (value, i) {
					return _react2['default'].createElement(
						ValueComponent,
						{
							disabled: _this2.props.disabled || value.clearableValue === false,
							key: 'value-' + i + '-' + value[_this2.props.valueKey],
							onClick: onClick,
							onRemove: _this2.removeValue,
							value: value
						},
						renderLabel(value)
					);
				});
			} else if (!this.state.inputValue) {
				if (isOpen) onClick = null;
				return _react2['default'].createElement(
					ValueComponent,
					{
						disabled: this.props.disabled,
						onClick: onClick,
						value: valueArray[0]
					},
					renderLabel(valueArray[0])
				);
			}
		},

		renderInput: function renderInput(valueArray) {
			var className = (0, _classnames2['default'])('Select-input', this.props.inputProps.className);
			if (this.props.disabled || !this.props.searchable) {
				return _react2['default'].createElement('div', _extends({}, this.props.inputProps, {
					className: className,
					tabIndex: this.props.tabIndex || 0,
					onBlur: this.handleInputBlur,
					onFocus: this.handleInputFocus,
					ref: 'input',
					style: { border: 0, width: 1, display: 'inline-block' } }));
			}
			return _react2['default'].createElement(_reactInputAutosize2['default'], _extends({}, this.props.inputProps, {
				className: className,
				tabIndex: this.props.tabIndex,
				onBlur: this.handleInputBlur,
				onChange: this.handleInputChange,
				onFocus: this.handleInputFocus,
				minWidth: '5',
				ref: 'input',
				value: this.state.inputValue
			}));
		},

		renderClear: function renderClear() {
			if (!this.props.clearable || !this.props.value || this.props.multi && !this.props.value.length || this.props.disabled || this.props.isLoading) return;
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-clear-zone', title: this.props.multi ? this.props.clearAllText : this.props.clearValueText, 'aria-label': this.props.multi ? this.props.clearAllText : this.props.clearValueText, onMouseDown: this.clearValue, onTouchEnd: this.clearValue },
				_react2['default'].createElement('span', { className: 'Select-clear', dangerouslySetInnerHTML: { __html: '&times;' } })
			);
		},

		renderArrow: function renderArrow() {
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-arrow-zone', onMouseDown: this.handleMouseDownOnArrow },
				_react2['default'].createElement('span', { className: 'Select-arrow', onMouseDown: this.handleMouseDownOnArrow })
			);
		},

		filterOptions: function filterOptions(excludeOptions) {
			var _this3 = this;

			var filterValue = this.state.inputValue;
			var options = this.props.options || [];
			if (typeof this.props.filterOptions === 'function') {
				return this.props.filterOptions.call(this, options, filterValue, excludeOptions);
			} else if (this.props.filterOptions) {
				if (this.props.ignoreAccents) {
					filterValue = (0, _utilsStripDiacritics2['default'])(filterValue);
				}
				if (this.props.ignoreCase) {
					filterValue = filterValue.toLowerCase();
				}
				if (excludeOptions) excludeOptions = excludeOptions.map(function (i) {
					return i[_this3.props.valueKey];
				});
				return options.filter(function (option) {
					if (excludeOptions && excludeOptions.indexOf(option[_this3.props.valueKey]) > -1) return false;
					if (_this3.props.filterOption) return _this3.props.filterOption.call(_this3, option, filterValue);
					if (!filterValue) return true;
					var valueTest = String(option[_this3.props.valueKey]);
					var labelTest = String(option[_this3.props.labelKey]);
					if (_this3.props.ignoreAccents) {
						if (_this3.props.matchProp !== 'label') valueTest = (0, _utilsStripDiacritics2['default'])(valueTest);
						if (_this3.props.matchProp !== 'value') labelTest = (0, _utilsStripDiacritics2['default'])(labelTest);
					}
					if (_this3.props.ignoreCase) {
						if (_this3.props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
						if (_this3.props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
					}
					return _this3.props.matchPos === 'start' ? _this3.props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || _this3.props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : _this3.props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || _this3.props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
				});
			} else {
				return options;
			}
		},

		renderMenu: function renderMenu(options, valueArray, focusedOption) {
			var _this4 = this;

			if (options && options.length) {
				var _ret = (function () {
					var Option = _this4.props.optionComponent;
					var renderLabel = _this4.props.optionRenderer || _this4.getOptionLabel;
					return {
						v: options.map(function (option, i) {
							var isSelected = valueArray && valueArray.indexOf(option) > -1;
							var isFocused = option === focusedOption;
							var optionRef = isFocused ? 'focused' : null;
							var optionClass = (0, _classnames2['default'])({
								'Select-option': true,
								'is-selected': isSelected,
								'is-focused': isFocused,
								'is-disabled': option.disabled
							});
							return _react2['default'].createElement(
								Option,
								{
									className: optionClass,
									isDisabled: option.disabled,
									isFocused: isFocused,
									key: 'option-' + i + '-' + option[_this4.props.valueKey],
									onSelect: _this4.selectValue,
									onFocus: _this4.focusOption,
									option: option,
									isSelected: isSelected,
									ref: optionRef
								},
								renderLabel(option)
							);
						})
					};
				})();

				if (typeof _ret === 'object') return _ret.v;
			} else {
				return _react2['default'].createElement(
					'div',
					{ className: 'Select-noresults' },
					this.props.noResultsText
				);
			}
		},

		renderHiddenField: function renderHiddenField(valueArray) {
			var _this5 = this;

			if (!this.props.name) return;
			var value = valueArray.map(function (i) {
				return stringifyValue(i[_this5.props.valueKey]);
			}).join(this.props.delimiter);
			return _react2['default'].createElement('input', { type: 'hidden', ref: 'value', name: this.props.name, value: value, disabled: this.props.disabled });
		},

		getFocusableOption: function getFocusableOption(selectedOption) {
			var options = this._visibleOptions;
			if (!options.length) return;
			var focusedOption = this.state.focusedOption || selectedOption;
			if (focusedOption && options.indexOf(focusedOption) > -1) return focusedOption;
			for (var i = 0; i < options.length; i++) {
				if (!options[i].disabled) return options[i];
			}
		},

		render: function render() {
			var valueArray = this.getValueArray();
			var options = this._visibleOptions = this.filterOptions(this.props.multi ? valueArray : null);
			var isOpen = this.state.isOpen;
			if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;
			var focusedOption = this._focusedOption = this.getFocusableOption(valueArray[0]);
			var className = (0, _classnames2['default'])('Select', this.props.className, {
				'Select--multi': this.props.multi,
				'is-disabled': this.props.disabled,
				'is-focused': this.state.isFocused,
				'is-loading': this.props.isLoading,
				'is-open': isOpen,
				'is-pseudo-focused': this.state.isPseudoFocused,
				'is-searchable': this.props.searchable,
				'has-value': valueArray.length
			});
			return _react2['default'].createElement(
				'div',
				{ ref: 'wrapper', className: className, style: this.props.wrapperStyle },
				this.renderHiddenField(valueArray),
				_react2['default'].createElement(
					'div',
					{ ref: 'control', className: 'Select-control', style: this.props.style, onKeyDown: this.handleKeyDown, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
					this.renderValue(valueArray, isOpen),
					this.renderInput(valueArray),
					this.renderLoading(),
					this.renderClear(),
					this.renderArrow()
				),
				isOpen ? _react2['default'].createElement(
					'div',
					{ ref: 'menuContainer', className: 'Select-menu-outer', style: this.props.menuContainerStyle },
					_react2['default'].createElement(
						'div',
						{ ref: 'menu', className: 'Select-menu', style: this.props.menuStyle, onScroll: this.handleMenuScroll, onMouseDown: this.handleMouseDownOnMenu },
						this.renderMenu(options, !this.props.multi ? valueArray : null, focusedOption)
					)
				) : null
			);
		}

	});

	exports['default'] = Select;
	module.exports = exports['default'];

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(160);


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var ReactDOM = __webpack_require__(161);
	var ReactDOMServer = __webpack_require__(305);
	var ReactIsomorphic = __webpack_require__(309);

	var assign = __webpack_require__(196);
	var deprecated = __webpack_require__(314);

	// `version` will be added here by ReactIsomorphic.
	var React = {};

	assign(React, ReactIsomorphic);

	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});

	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

	module.exports = React;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactCurrentOwner = __webpack_require__(162);
	var ReactDOMTextComponent = __webpack_require__(163);
	var ReactDefaultInjection = __webpack_require__(228);
	var ReactInstanceHandles = __webpack_require__(202);
	var ReactMount = __webpack_require__(185);
	var ReactPerf = __webpack_require__(175);
	var ReactReconciler = __webpack_require__(207);
	var ReactUpdates = __webpack_require__(211);
	var ReactVersion = __webpack_require__(303);

	var findDOMNode = __webpack_require__(248);
	var renderSubtreeIntoContainer = __webpack_require__(304);
	var warning = __webpack_require__(182);

	ReactDefaultInjection.inject();

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(166);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

	    // shams
	    Object.create, Object.freeze];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(164);
	var DOMPropertyOperations = __webpack_require__(179);
	var ReactComponentBrowserEnvironment = __webpack_require__(183);
	var ReactMount = __webpack_require__(185);

	var assign = __webpack_require__(196);
	var escapeTextContentForBrowser = __webpack_require__(178);
	var setTextContent = __webpack_require__(177);
	var validateDOMNesting = __webpack_require__(227);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },

	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(165);
	var ReactMultiChildUpdateTypes = __webpack_require__(173);
	var ReactPerf = __webpack_require__(175);

	var setInnerHTML = __webpack_require__(176);
	var setTextContent = __webpack_require__(177);
	var invariant = __webpack_require__(170);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.

	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

	  parentNode.insertBefore(childNode, beforeChild);
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var createNodesFromMarkup = __webpack_require__(167);
	var emptyFunction = __webpack_require__(172);
	var getMarkupWrap = __webpack_require__(171);
	var invariant = __webpack_require__(170);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 166 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var createArrayFromMixed = __webpack_require__(168);
	var getMarkupWrap = __webpack_require__(171);
	var invariant = __webpack_require__(170);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	'use strict';

	var toArray = __webpack_require__(169);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	/*eslint-disable fb-www/unsafe-html */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var invariant = __webpack_require__(170);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 172 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(174);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);
	var escapeTextContentForBrowser = __webpack_require__(178);
	var setInnerHTML = __webpack_require__(176);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 178 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);
	var ReactPerf = __webpack_require__(175);

	var quoteAttributeValueForBrowser = __webpack_require__(181);
	var warning = __webpack_require__(182);

	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }

	};

	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(178);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(172);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(184);
	var ReactMount = __webpack_require__(185);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(164);
	var DOMPropertyOperations = __webpack_require__(179);
	var ReactMount = __webpack_require__(185);
	var ReactPerf = __webpack_require__(175);

	var invariant = __webpack_require__(170);

	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);
	var ReactBrowserEventEmitter = __webpack_require__(186);
	var ReactCurrentOwner = __webpack_require__(162);
	var ReactDOMFeatureFlags = __webpack_require__(198);
	var ReactElement = __webpack_require__(199);
	var ReactEmptyComponentRegistry = __webpack_require__(201);
	var ReactInstanceHandles = __webpack_require__(202);
	var ReactInstanceMap = __webpack_require__(204);
	var ReactMarkupChecksum = __webpack_require__(205);
	var ReactPerf = __webpack_require__(175);
	var ReactReconciler = __webpack_require__(207);
	var ReactUpdateQueue = __webpack_require__(210);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var emptyObject = __webpack_require__(215);
	var containsNode = __webpack_require__(216);
	var instantiateReactComponent = __webpack_require__(219);
	var invariant = __webpack_require__(170);
	var setInnerHTML = __webpack_require__(176);
	var shouldUpdateReactComponent = __webpack_require__(224);
	var validateDOMNesting = __webpack_require__(227);
	var warning = __webpack_require__(182);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPluginHub = __webpack_require__(188);
	var EventPluginRegistry = __webpack_require__(189);
	var ReactEventEmitterMixin = __webpack_require__(194);
	var ReactPerf = __webpack_require__(175);
	var ViewportMetrics = __webpack_require__(195);

	var assign = __webpack_require__(196);
	var isEventSupported = __webpack_require__(197);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(174);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(189);
	var EventPluginUtils = __webpack_require__(190);
	var ReactErrorUtils = __webpack_require__(191);

	var accumulateInto = __webpack_require__(192);
	var forEachAccumulated = __webpack_require__(193);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var ReactErrorUtils = __webpack_require__(191);

	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 193 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(188);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 195 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 196 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 198 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(162);

	var assign = __webpack_require__(196);
	var canDefineProperty = __webpack_require__(200);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 201 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */

	'use strict';

	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};

	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(203);

	var invariant = __webpack_require__(170);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 203 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;

/***/ },
/* 204 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(206);

	var TAG_END = /\/?>/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 206 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(208);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(209);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(162);
	var ReactElement = __webpack_require__(199);
	var ReactInstanceMap = __webpack_require__(204);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },

	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },

	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(212);
	var PooledClass = __webpack_require__(213);
	var ReactPerf = __webpack_require__(175);
	var ReactReconciler = __webpack_require__(207);
	var Transaction = __webpack_require__(214);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(213);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	'use strict';

	var isTextNode = __webpack_require__(217);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;

	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}

	module.exports = containsNode;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	'use strict';

	var isNode = __webpack_require__(218);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 218 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(220);
	var ReactEmptyComponent = __webpack_require__(225);
	var ReactNativeComponent = __webpack_require__(226);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(221);
	var ReactCurrentOwner = __webpack_require__(162);
	var ReactElement = __webpack_require__(199);
	var ReactInstanceMap = __webpack_require__(204);
	var ReactPerf = __webpack_require__(175);
	var ReactPropTypeLocations = __webpack_require__(222);
	var ReactPropTypeLocationNames = __webpack_require__(223);
	var ReactReconciler = __webpack_require__(207);
	var ReactUpdateQueue = __webpack_require__(210);

	var assign = __webpack_require__(196);
	var emptyObject = __webpack_require__(215);
	var invariant = __webpack_require__(170);
	var shouldUpdateReactComponent = __webpack_require__(224);
	var warning = __webpack_require__(182);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst;
	    var renderedElement;

	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);

	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }

	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;

	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(170);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(174);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 224 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(199);
	var ReactEmptyComponentRegistry = __webpack_require__(201);
	var ReactReconciler = __webpack_require__(207);

	var assign = __webpack_require__(196);

	var placeholderElement;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};

	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    ReactEmptyComponentRegistry.registerNullComponentID(rootID);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var assign = __webpack_require__(196);
	var emptyFunction = __webpack_require__(172);
	var warning = __webpack_require__(182);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    parentTag: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.parentTag = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };

	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(229);
	var ChangeEventPlugin = __webpack_require__(237);
	var ClientReactRootIndex = __webpack_require__(240);
	var DefaultEventPluginOrder = __webpack_require__(241);
	var EnterLeaveEventPlugin = __webpack_require__(242);
	var ExecutionEnvironment = __webpack_require__(166);
	var HTMLDOMPropertyConfig = __webpack_require__(246);
	var ReactBrowserComponentMixin = __webpack_require__(247);
	var ReactComponentBrowserEnvironment = __webpack_require__(183);
	var ReactDefaultBatchingStrategy = __webpack_require__(249);
	var ReactDOMComponent = __webpack_require__(250);
	var ReactDOMTextComponent = __webpack_require__(163);
	var ReactEventListener = __webpack_require__(275);
	var ReactInjection = __webpack_require__(278);
	var ReactInstanceHandles = __webpack_require__(202);
	var ReactMount = __webpack_require__(185);
	var ReactReconcileTransaction = __webpack_require__(282);
	var SelectEventPlugin = __webpack_require__(287);
	var ServerReactRootIndex = __webpack_require__(288);
	var SimpleEventPlugin = __webpack_require__(289);
	var SVGDOMPropertyConfig = __webpack_require__(298);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(299);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPropagators = __webpack_require__(230);
	var ExecutionEnvironment = __webpack_require__(166);
	var FallbackCompositionState = __webpack_require__(231);
	var SyntheticCompositionEvent = __webpack_require__(233);
	var SyntheticInputEvent = __webpack_require__(235);

	var keyOf = __webpack_require__(236);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPluginHub = __webpack_require__(188);

	var warning = __webpack_require__(182);

	var accumulateInto = __webpack_require__(192);
	var forEachAccumulated = __webpack_require__(193);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(213);

	var assign = __webpack_require__(196);
	var getTextContentAccessor = __webpack_require__(232);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(234);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(213);

	var assign = __webpack_require__(196);
	var emptyFunction = __webpack_require__(172);
	var warning = __webpack_require__(182);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	  this.target = nativeEventTarget;
	  this.currentTarget = nativeEventTarget;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(234);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 236 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPluginHub = __webpack_require__(188);
	var EventPropagators = __webpack_require__(230);
	var ExecutionEnvironment = __webpack_require__(166);
	var ReactUpdates = __webpack_require__(211);
	var SyntheticEvent = __webpack_require__(234);

	var getEventTarget = __webpack_require__(238);
	var isEventSupported = __webpack_require__(197);
	var isTextInputElement = __webpack_require__(239);
	var keyOf = __webpack_require__(236);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 238 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 239 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ },
/* 240 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(236);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPropagators = __webpack_require__(230);
	var SyntheticMouseEvent = __webpack_require__(243);

	var ReactMount = __webpack_require__(185);
	var keyOf = __webpack_require__(236);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(244);
	var ViewportMetrics = __webpack_require__(195);

	var getEventModifierState = __webpack_require__(245);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(234);

	var getEventTarget = __webpack_require__(238);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 245 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);
	var ExecutionEnvironment = __webpack_require__(166);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,

	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var ReactInstanceMap = __webpack_require__(204);

	var findDOMNode = __webpack_require__(248);
	var warning = __webpack_require__(182);

	var didWarnKey = '_getDOMNodeDidWarn';

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(162);
	var ReactInstanceMap = __webpack_require__(204);
	var ReactMount = __webpack_require__(185);

	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(211);
	var Transaction = __webpack_require__(214);

	var assign = __webpack_require__(196);
	var emptyFunction = __webpack_require__(172);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var AutoFocusUtils = __webpack_require__(251);
	var CSSPropertyOperations = __webpack_require__(253);
	var DOMProperty = __webpack_require__(180);
	var DOMPropertyOperations = __webpack_require__(179);
	var EventConstants = __webpack_require__(187);
	var ReactBrowserEventEmitter = __webpack_require__(186);
	var ReactComponentBrowserEnvironment = __webpack_require__(183);
	var ReactDOMButton = __webpack_require__(261);
	var ReactDOMInput = __webpack_require__(262);
	var ReactDOMOption = __webpack_require__(266);
	var ReactDOMSelect = __webpack_require__(269);
	var ReactDOMTextarea = __webpack_require__(270);
	var ReactMount = __webpack_require__(185);
	var ReactMultiChild = __webpack_require__(271);
	var ReactPerf = __webpack_require__(175);
	var ReactUpdateQueue = __webpack_require__(210);

	var assign = __webpack_require__(196);
	var canDefineProperty = __webpack_require__(200);
	var escapeTextContentForBrowser = __webpack_require__(178);
	var invariant = __webpack_require__(170);
	var isEventSupported = __webpack_require__(197);
	var keyOf = __webpack_require__(236);
	var setInnerHTML = __webpack_require__(176);
	var setTextContent = __webpack_require__(177);
	var shallowEqual = __webpack_require__(274);
	var validateDOMNesting = __webpack_require__(227);
	var warning = __webpack_require__(182);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });

	var ELEMENT_NODE_TYPE = 1;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}

	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}

	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}

	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}

	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}

	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}

	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}

	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function (element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }

	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }

	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },

	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);

	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;

	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }

	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactMount = __webpack_require__(185);

	var findDOMNode = __webpack_require__(248);
	var focusNode = __webpack_require__(252);

	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};

	var AutoFocusUtils = {
	  Mixin: Mixin,

	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 252 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(254);
	var ExecutionEnvironment = __webpack_require__(166);
	var ReactPerf = __webpack_require__(175);

	var camelizeStyleName = __webpack_require__(255);
	var dangerousStyleValue = __webpack_require__(257);
	var hyphenateStyleName = __webpack_require__(258);
	var memoizeStringOnly = __webpack_require__(260);
	var warning = __webpack_require__(182);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 254 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(256);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 256 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	"use strict";

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(254);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(259);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 259 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	'use strict';

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 260 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 261 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = ReactDOMButton;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(184);
	var LinkedValueUtils = __webpack_require__(263);
	var ReactMount = __webpack_require__(185);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },

	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(264);
	var ReactPropTypeLocations = __webpack_require__(222);

	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(199);
	var ReactPropTypeLocationNames = __webpack_require__(223);

	var emptyFunction = __webpack_require__(172);
	var getIteratorFn = __webpack_require__(265);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 265 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactChildren = __webpack_require__(267);
	var ReactDOMSelect = __webpack_require__(269);

	var assign = __webpack_require__(196);
	var warning = __webpack_require__(182);

	var valueContextKey = ReactDOMSelect.valueContextKey;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }

	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];

	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });

	    nativeProps.children = content;
	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(213);
	var ReactElement = __webpack_require__(199);

	var emptyFunction = __webpack_require__(172);
	var traverseAllChildren = __webpack_require__(268);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(162);
	var ReactElement = __webpack_require__(199);
	var ReactInstanceHandles = __webpack_require__(202);

	var getIteratorFn = __webpack_require__(265);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(263);
	var ReactMount = __webpack_require__(185);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var warning = __webpack_require__(182);

	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,

	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },

	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(263);
	var ReactDOMIDOperations = __webpack_require__(184);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);

	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(221);
	var ReactMultiChildUpdateTypes = __webpack_require__(173);

	var ReactCurrentOwner = __webpack_require__(162);
	var ReactReconciler = __webpack_require__(207);
	var ReactChildReconciler = __webpack_require__(272);

	var flattenChildren = __webpack_require__(273);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(207);

	var instantiateReactComponent = __webpack_require__(219);
	var shouldUpdateReactComponent = __webpack_require__(224);
	var traverseAllChildren = __webpack_require__(268);
	var warning = __webpack_require__(182);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(268);
	var warning = __webpack_require__(182);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 274 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(276);
	var ExecutionEnvironment = __webpack_require__(166);
	var PooledClass = __webpack_require__(213);
	var ReactInstanceHandles = __webpack_require__(202);
	var ReactMount = __webpack_require__(185);
	var ReactUpdates = __webpack_require__(211);

	var assign = __webpack_require__(196);
	var getEventTarget = __webpack_require__(238);
	var getUnboundedScrollPosition = __webpack_require__(277);

	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }

	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}

	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);

	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	'use strict';

	var emptyFunction = __webpack_require__(172);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function () {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 277 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);
	var EventPluginHub = __webpack_require__(188);
	var ReactComponentEnvironment = __webpack_require__(221);
	var ReactClass = __webpack_require__(279);
	var ReactEmptyComponent = __webpack_require__(225);
	var ReactBrowserEventEmitter = __webpack_require__(186);
	var ReactNativeComponent = __webpack_require__(226);
	var ReactPerf = __webpack_require__(175);
	var ReactRootIndex = __webpack_require__(203);
	var ReactUpdates = __webpack_require__(211);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(280);
	var ReactElement = __webpack_require__(199);
	var ReactPropTypeLocations = __webpack_require__(222);
	var ReactPropTypeLocationNames = __webpack_require__(223);
	var ReactNoopUpdateQueue = __webpack_require__(281);

	var assign = __webpack_require__(196);
	var emptyObject = __webpack_require__(215);
	var invariant = __webpack_require__(170);
	var keyMirror = __webpack_require__(174);
	var keyOf = __webpack_require__(236);
	var warning = __webpack_require__(182);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(281);

	var canDefineProperty = __webpack_require__(200);
	var emptyObject = __webpack_require__(215);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(182);

	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }

	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(212);
	var PooledClass = __webpack_require__(213);
	var ReactBrowserEventEmitter = __webpack_require__(186);
	var ReactDOMFeatureFlags = __webpack_require__(198);
	var ReactInputSelection = __webpack_require__(283);
	var Transaction = __webpack_require__(214);

	var assign = __webpack_require__(196);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(284);

	var containsNode = __webpack_require__(216);
	var focusNode = __webpack_require__(252);
	var getActiveElement = __webpack_require__(286);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var getNodeForCharacterOffset = __webpack_require__(285);
	var getTextContentAccessor = __webpack_require__(232);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 285 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 286 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventPropagators = __webpack_require__(230);
	var ExecutionEnvironment = __webpack_require__(166);
	var ReactInputSelection = __webpack_require__(283);
	var SyntheticEvent = __webpack_require__(234);

	var getActiveElement = __webpack_require__(286);
	var isTextInputElement = __webpack_require__(239);
	var keyOf = __webpack_require__(236);
	var shallowEqual = __webpack_require__(274);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 288 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(187);
	var EventListener = __webpack_require__(276);
	var EventPropagators = __webpack_require__(230);
	var ReactMount = __webpack_require__(185);
	var SyntheticClipboardEvent = __webpack_require__(290);
	var SyntheticEvent = __webpack_require__(234);
	var SyntheticFocusEvent = __webpack_require__(291);
	var SyntheticKeyboardEvent = __webpack_require__(292);
	var SyntheticMouseEvent = __webpack_require__(243);
	var SyntheticDragEvent = __webpack_require__(295);
	var SyntheticTouchEvent = __webpack_require__(296);
	var SyntheticUIEvent = __webpack_require__(244);
	var SyntheticWheelEvent = __webpack_require__(297);

	var emptyFunction = __webpack_require__(172);
	var getEventCharCode = __webpack_require__(293);
	var invariant = __webpack_require__(170);
	var keyOf = __webpack_require__(236);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(234);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(244);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(244);

	var getEventCharCode = __webpack_require__(293);
	var getEventKey = __webpack_require__(294);
	var getEventModifierState = __webpack_require__(245);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 293 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(293);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(243);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(244);

	var getEventModifierState = __webpack_require__(245);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(243);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(180);
	var ReactDefaultPerfAnalysis = __webpack_require__(300);
	var ReactMount = __webpack_require__(185);
	var ReactPerf = __webpack_require__(175);

	var performanceNow = __webpack_require__(301);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {

	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	'use strict';

	var assign = __webpack_require__(196);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	'use strict';

	var performance = __webpack_require__(302);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(166);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 303 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '0.14.6';

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(185);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(228);
	var ReactServerRendering = __webpack_require__(306);
	var ReactVersion = __webpack_require__(303);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactDefaultBatchingStrategy = __webpack_require__(249);
	var ReactElement = __webpack_require__(199);
	var ReactInstanceHandles = __webpack_require__(202);
	var ReactMarkupChecksum = __webpack_require__(205);
	var ReactServerBatchingStrategy = __webpack_require__(307);
	var ReactServerRenderingTransaction = __webpack_require__(308);
	var ReactUpdates = __webpack_require__(211);

	var emptyObject = __webpack_require__(215);
	var instantiateReactComponent = __webpack_require__(219);
	var invariant = __webpack_require__(170);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 307 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(213);
	var CallbackQueue = __webpack_require__(212);
	var Transaction = __webpack_require__(214);

	var assign = __webpack_require__(196);
	var emptyFunction = __webpack_require__(172);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */

	'use strict';

	var ReactChildren = __webpack_require__(267);
	var ReactComponent = __webpack_require__(280);
	var ReactClass = __webpack_require__(279);
	var ReactDOMFactories = __webpack_require__(310);
	var ReactElement = __webpack_require__(199);
	var ReactElementValidator = __webpack_require__(311);
	var ReactPropTypes = __webpack_require__(264);
	var ReactVersion = __webpack_require__(303);

	var assign = __webpack_require__(196);
	var onlyChild = __webpack_require__(313);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(199);
	var ReactElementValidator = __webpack_require__(311);

	var mapObject = __webpack_require__(312);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(199);
	var ReactPropTypeLocations = __webpack_require__(222);
	var ReactPropTypeLocationNames = __webpack_require__(223);
	var ReactCurrentOwner = __webpack_require__(162);

	var canDefineProperty = __webpack_require__(200);
	var getIteratorFn = __webpack_require__(265);
	var invariant = __webpack_require__(170);
	var warning = __webpack_require__(182);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 312 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(199);

	var invariant = __webpack_require__(170);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */

	'use strict';

	var assign = __webpack_require__(196);
	var warning = __webpack_require__(182);

	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }

	  return fn;
	}

	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(159);

	var sizerStyle = { position: 'absolute', visibility: 'hidden', height: 0, width: 0, overflow: 'scroll', whiteSpace: 'nowrap' };

	var nextFrame = typeof window !== 'undefined' ? (function () {
		return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
			window.setTimeout(callback, 1000 / 60);
		};
	})().bind(window) : undefined; // If window is undefined, then we can't define a nextFrame function

	var AutosizeInput = React.createClass({
		displayName: 'AutosizeInput',

		propTypes: {
			value: React.PropTypes.any, // field value
			defaultValue: React.PropTypes.any, // default field value
			onChange: React.PropTypes.func, // onChange handler: function(newValue) {}
			style: React.PropTypes.object, // css styles for the outer element
			className: React.PropTypes.string, // className for the outer element
			minWidth: React.PropTypes.oneOfType([// minimum width for input element
			React.PropTypes.number, React.PropTypes.string]),
			inputStyle: React.PropTypes.object, // css styles for the input element
			inputClassName: React.PropTypes.string // className for the input element
		},
		getDefaultProps: function getDefaultProps() {
			return {
				minWidth: 1
			};
		},
		getInitialState: function getInitialState() {
			return {
				inputWidth: this.props.minWidth
			};
		},
		componentDidMount: function componentDidMount() {
			this.copyInputStyles();
			this.updateInputWidth();
		},
		componentDidUpdate: function componentDidUpdate() {
			this.queueUpdateInputWidth();
		},
		copyInputStyles: function copyInputStyles() {
			if (!this.isMounted() || !window.getComputedStyle) {
				return;
			}
			var inputStyle = window.getComputedStyle(this.refs.input);
			var widthNode = this.refs.sizer;
			widthNode.style.fontSize = inputStyle.fontSize;
			widthNode.style.fontFamily = inputStyle.fontFamily;
			widthNode.style.fontWeight = inputStyle.fontWeight;
			widthNode.style.fontStyle = inputStyle.fontStyle;
			widthNode.style.letterSpacing = inputStyle.letterSpacing;
			if (this.props.placeholder) {
				var placeholderNode = this.refs.placeholderSizer;
				placeholderNode.style.fontSize = inputStyle.fontSize;
				placeholderNode.style.fontFamily = inputStyle.fontFamily;
				placeholderNode.style.fontWeight = inputStyle.fontWeight;
				placeholderNode.style.fontStyle = inputStyle.fontStyle;
				placeholderNode.style.letterSpacing = inputStyle.letterSpacing;
			}
		},
		queueUpdateInputWidth: function queueUpdateInputWidth() {
			nextFrame(this.updateInputWidth);
		},
		updateInputWidth: function updateInputWidth() {
			if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {
				return;
			}
			var newInputWidth = undefined;
			if (this.props.placeholder) {
				newInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;
			} else {
				newInputWidth = this.refs.sizer.scrollWidth + 2;
			}
			if (newInputWidth < this.props.minWidth) {
				newInputWidth = this.props.minWidth;
			}
			if (newInputWidth !== this.state.inputWidth) {
				this.setState({
					inputWidth: newInputWidth
				});
			}
		},
		getInput: function getInput() {
			return this.refs.input;
		},
		focus: function focus() {
			this.refs.input.focus();
		},
		select: function select() {
			this.refs.input.select();
		},
		render: function render() {
			var escapedValue = (this.props.value || '').replace(/\&/g, '&amp;').replace(/ /g, '&nbsp;').replace(/\</g, '&lt;').replace(/\>/g, '&gt;');
			var wrapperStyle = this.props.style || {};
			if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
			var inputStyle = _extends({}, this.props.inputStyle);
			inputStyle.width = this.state.inputWidth;
			inputStyle.boxSizing = 'content-box';
			var placeholder = this.props.placeholder ? React.createElement(
				'div',
				{ ref: 'placeholderSizer', style: sizerStyle },
				this.props.placeholder
			) : null;
			return React.createElement(
				'div',
				{ className: this.props.className, style: wrapperStyle },
				React.createElement('input', _extends({}, this.props, { ref: 'input', className: this.props.inputClassName, style: inputStyle })),
				React.createElement('div', { ref: 'sizer', style: sizerStyle, dangerouslySetInnerHTML: { __html: escapedValue } }),
				placeholder
			);
		}
	});

	module.exports = AutosizeInput;

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 318 */
/***/ function(module, exports) {

	'use strict';

	var map = [{ 'base': 'A', 'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g }, { 'base': 'AA', 'letters': /[\uA732]/g }, { 'base': 'AE', 'letters': /[\u00C6\u01FC\u01E2]/g }, { 'base': 'AO', 'letters': /[\uA734]/g }, { 'base': 'AU', 'letters': /[\uA736]/g }, { 'base': 'AV', 'letters': /[\uA738\uA73A]/g }, { 'base': 'AY', 'letters': /[\uA73C]/g }, { 'base': 'B', 'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g }, { 'base': 'C', 'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g }, { 'base': 'D', 'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g }, { 'base': 'DZ', 'letters': /[\u01F1\u01C4]/g }, { 'base': 'Dz', 'letters': /[\u01F2\u01C5]/g }, { 'base': 'E', 'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g }, { 'base': 'F', 'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g }, { 'base': 'G', 'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g }, { 'base': 'H', 'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g }, { 'base': 'I', 'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g }, { 'base': 'J', 'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g }, { 'base': 'K', 'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g }, { 'base': 'L', 'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g }, { 'base': 'LJ', 'letters': /[\u01C7]/g }, { 'base': 'Lj', 'letters': /[\u01C8]/g }, { 'base': 'M', 'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g }, { 'base': 'N', 'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\u01CA]/g }, { 'base': 'Nj', 'letters': /[\u01CB]/g }, { 'base': 'O', 'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g }, { 'base': 'OI', 'letters': /[\u01A2]/g }, { 'base': 'OO', 'letters': /[\uA74E]/g }, { 'base': 'OU', 'letters': /[\u0222]/g }, { 'base': 'P', 'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g }, { 'base': 'Q', 'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g }, { 'base': 'R', 'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g }, { 'base': 'S', 'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g }, { 'base': 'T', 'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g }, { 'base': 'TZ', 'letters': /[\uA728]/g }, { 'base': 'U', 'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g }, { 'base': 'V', 'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g }, { 'base': 'VY', 'letters': /[\uA760]/g }, { 'base': 'W', 'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g }, { 'base': 'X', 'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g }, { 'base': 'Y', 'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g }, { 'base': 'Z', 'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g }, { 'base': 'a', 'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { 'base': 'aa', 'letters': /[\uA733]/g }, { 'base': 'ae', 'letters': /[\u00E6\u01FD\u01E3]/g }, { 'base': 'ao', 'letters': /[\uA735]/g }, { 'base': 'au', 'letters': /[\uA737]/g }, { 'base': 'av', 'letters': /[\uA739\uA73B]/g }, { 'base': 'ay', 'letters': /[\uA73D]/g }, { 'base': 'b', 'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { 'base': 'c', 'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { 'base': 'd', 'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { 'base': 'dz', 'letters': /[\u01F3\u01C6]/g }, { 'base': 'e', 'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { 'base': 'f', 'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { 'base': 'g', 'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { 'base': 'h', 'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { 'base': 'hv', 'letters': /[\u0195]/g }, { 'base': 'i', 'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { 'base': 'j', 'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { 'base': 'k', 'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { 'base': 'l', 'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { 'base': 'lj', 'letters': /[\u01C9]/g }, { 'base': 'm', 'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { 'base': 'n', 'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { 'base': 'nj', 'letters': /[\u01CC]/g }, { 'base': 'o', 'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { 'base': 'oi', 'letters': /[\u01A3]/g }, { 'base': 'ou', 'letters': /[\u0223]/g }, { 'base': 'oo', 'letters': /[\uA74F]/g }, { 'base': 'p', 'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { 'base': 'q', 'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { 'base': 'r', 'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { 'base': 's', 'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { 'base': 't', 'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { 'base': 'tz', 'letters': /[\uA729]/g }, { 'base': 'u', 'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { 'base': 'v', 'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { 'base': 'vy', 'letters': /[\uA761]/g }, { 'base': 'w', 'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { 'base': 'x', 'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { 'base': 'y', 'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { 'base': 'z', 'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];

	module.exports = function stripDiacritics(str) {
		for (var i = 0; i < map.length; i++) {
			str = str.replace(map[i].letters, map[i].base);
		}
		return str;
	};

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(159);

	var _react2 = _interopRequireDefault(_react);

	var _Select = __webpack_require__(158);

	var _Select2 = _interopRequireDefault(_Select);

	var _utilsStripDiacritics = __webpack_require__(318);

	var _utilsStripDiacritics2 = _interopRequireDefault(_utilsStripDiacritics);

	var requestId = 0;

	function initCache(cache) {
		if (cache && typeof cache !== 'object') {
			cache = {};
		}
		return cache ? cache : null;
	}

	function updateCache(cache, input, data) {
		if (!cache) return;
		cache[input] = data;
	}

	function getFromCache(cache, input) {
		if (!cache) return;
		for (var i = input.length; i >= 0; --i) {
			var cacheKey = input.slice(0, i);
			if (cache[cacheKey] && (input === cacheKey || cache[cacheKey].complete)) {
				return cache[cacheKey];
			}
		}
	}

	function thenPromise(promise, callback) {
		if (!promise || typeof promise.then !== 'function') return;
		return promise.then(function (data) {
			callback(null, data);
		}, function (err) {
			callback(err);
		});
	}

	var Async = _react2['default'].createClass({
		displayName: 'Async',

		propTypes: {
			cache: _react2['default'].PropTypes.any, // object to use to cache results, can be null to disable cache
			loadOptions: _react2['default'].PropTypes.func.isRequired, // function to call to load options asynchronously
			ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering (shared with Select)
			ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering (shared with Select)
			isLoading: _react2['default'].PropTypes.bool, // overrides the isLoading state when set to true
			loadingPlaceholder: _react2['default'].PropTypes.string, // replaces the placeholder while options are loading
			minimumInput: _react2['default'].PropTypes.number, // the minimum number of characters that trigger loadOptions
			noResultsText: _react2['default'].PropTypes.string, // placeholder displayed when there are no matching search results (shared with Select)
			placeholder: _react2['default'].PropTypes.oneOfType([// field placeholder, displayed when there's no value (shared with Select)
			_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]),
			searchingText: _react2['default'].PropTypes.string, // message to display while options are loading
			searchPromptText: _react2['default'].PropTypes.string },
		// label to prompt for search input
		getDefaultProps: function getDefaultProps() {
			return {
				cache: true,
				ignoreAccents: true,
				ignoreCase: true,
				loadingPlaceholder: 'Loading...',
				minimumInput: 0,
				searchingText: 'Searching...',
				searchPromptText: 'Type to search'
			};
		},
		getInitialState: function getInitialState() {
			return {
				cache: initCache(this.props.cache),
				isLoading: false,
				options: []
			};
		},
		componentWillMount: function componentWillMount() {
			this._lastInput = '';
		},
		componentDidMount: function componentDidMount() {
			this.loadOptions('');
		},
		componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
			if (nextProps.cache !== this.props.cache) {
				this.setState({
					cache: initCache(nextProps.cache)
				});
			}
		},
		focus: function focus() {
			this.refs.select.focus();
		},
		resetState: function resetState() {
			this._currentRequestId = -1;
			this.setState({
				isLoading: false,
				options: []
			});
		},
		getResponseHandler: function getResponseHandler(input) {
			var _this = this;

			var _requestId = this._currentRequestId = requestId++;
			return function (err, data) {
				if (err) throw err;
				if (!_this.isMounted()) return;
				updateCache(_this.state.cache, input, data);
				if (_requestId !== _this._currentRequestId) return;
				_this.setState({
					isLoading: false,
					options: data && data.options || []
				});
			};
		},
		loadOptions: function loadOptions(input) {
			if (this.props.ignoreAccents) input = (0, _utilsStripDiacritics2['default'])(input);
			if (this.props.ignoreCase) input = input.toLowerCase();
			this._lastInput = input;
			if (input.length < this.props.minimumInput) {
				return this.resetState();
			}
			var cacheResult = getFromCache(this.state.cache, input);
			if (cacheResult) {
				return this.setState({
					options: cacheResult.options
				});
			}
			this.setState({
				isLoading: true
			});
			var responseHandler = this.getResponseHandler(input);
			return thenPromise(this.props.loadOptions(input, responseHandler), responseHandler);
		},
		render: function render() {
			var noResultsText = this.props.noResultsText;
			var _state = this.state;
			var isLoading = _state.isLoading;
			var options = _state.options;

			if (this.props.isLoading) isLoading = true;
			var placeholder = isLoading ? this.props.loadingPlaceholder : this.props.placeholder;
			if (!options.length) {
				if (this._lastInput.length < this.props.minimumInput) noResultsText = this.props.searchPromptText;
				if (isLoading) noResultsText = this.props.searchingText;
			}
			return _react2['default'].createElement(_Select2['default'], _extends({}, this.props, {
				ref: 'select',
				isLoading: isLoading,
				noResultsText: noResultsText,
				onInputChange: this.loadOptions,
				options: options,
				placeholder: placeholder
			}));
		}
	});

	module.exports = Async;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(159);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(317);

	var _classnames2 = _interopRequireDefault(_classnames);

	var Option = _react2['default'].createClass({
		displayName: 'Option',

		propTypes: {
			className: _react2['default'].PropTypes.string, // className (based on mouse position)
			isDisabled: _react2['default'].PropTypes.bool, // the option is disabled
			isFocused: _react2['default'].PropTypes.bool, // the option is focused
			isSelected: _react2['default'].PropTypes.bool, // the option is selected
			onSelect: _react2['default'].PropTypes.func, // method to handle click on option element
			onFocus: _react2['default'].PropTypes.func, // method to handle mouseEnter on option element
			onUnfocus: _react2['default'].PropTypes.func, // method to handle mouseLeave on option element
			option: _react2['default'].PropTypes.object.isRequired },
		// object that is base for that option
		blockEvent: function blockEvent(event) {
			event.preventDefault();
			event.stopPropagation();
			if (event.target.tagName !== 'A' || !('href' in event.target)) {
				return;
			}
			if (event.target.target) {
				window.open(event.target.href, event.target.target);
			} else {
				window.location.href = event.target.href;
			}
		},
		handleMouseDown: function handleMouseDown(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onSelect(this.props.option, event);
		},
		handleMouseEnter: function handleMouseEnter(event) {
			this.props.onFocus(this.props.option, event);
		},
		handleMouseMove: function handleMouseMove(event) {
			if (this.props.focused) return;
			this.props.onFocus(this.props.option, event);
		},
		render: function render() {
			var option = this.props.option;

			var className = (0, _classnames2['default'])(this.props.className, option.className);

			return option.disabled ? _react2['default'].createElement(
				'div',
				{ className: className,
					onMouseDown: this.blockEvent,
					onClick: this.blockEvent },
				this.props.children
			) : _react2['default'].createElement(
				'div',
				{ className: className,
					style: option.style,
					onMouseDown: this.handleMouseDown,
					onMouseEnter: this.handleMouseEnter,
					onMouseMove: this.handleMouseMove,
					title: option.title },
				this.props.children
			);
		}
	});

	module.exports = Option;

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(159);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(317);

	var _classnames2 = _interopRequireDefault(_classnames);

	var Value = _react2['default'].createClass({

		displayName: 'Value',

		propTypes: {
			disabled: _react2['default'].PropTypes.bool, // disabled prop passed to ReactSelect
			onClick: _react2['default'].PropTypes.func, // method to handle click on value label
			onRemove: _react2['default'].PropTypes.func, // method to handle removal of the value
			value: _react2['default'].PropTypes.object.isRequired },

		// the option object for this value
		handleMouseDown: function handleMouseDown(event) {
			if (event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			if (this.props.onClick) {
				event.stopPropagation();
				this.props.onClick(this.props.value, event);
				return;
			}
			if (this.props.value.href) {
				event.stopPropagation();
			}
		},

		onRemove: function onRemove(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onRemove(this.props.value);
		},

		renderRemoveIcon: function renderRemoveIcon() {
			if (this.props.disabled || !this.props.onRemove) return;
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-value-icon',
					onMouseDown: this.onRemove,
					onTouchEnd: this.onRemove },
				'×'
			);
		},

		renderLabel: function renderLabel() {
			var className = 'Select-value-label';
			return this.props.onClick || this.props.value.href ? _react2['default'].createElement(
				'a',
				{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
				this.props.children
			) : _react2['default'].createElement(
				'span',
				{ className: className },
				this.props.children
			);
		},

		render: function render() {
			return _react2['default'].createElement(
				'div',
				{ className: (0, _classnames2['default'])('Select-value', this.props.value.className),
					style: this.props.value.style,
					title: this.props.value.title
				},
				this.renderRemoveIcon(),
				this.renderLabel()
			);
		}

	});

	module.exports = Value;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(315);

	var ChartistGraph = (function (_Component) {
	  _inherits(ChartistGraph, _Component);

	  function ChartistGraph() {
	    _classCallCheck(this, ChartistGraph);

	    _get(Object.getPrototypeOf(ChartistGraph.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ChartistGraph, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(newProps) {
	      this.updateChart(newProps);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.chartist) {
	        try {
	          this.chartist.detach();
	        } catch (err) {
	          throw new Error('Internal chartist error', err);
	        }
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateChart(this.props);
	    }
	  }, {
	    key: 'updateChart',
	    value: function updateChart(config) {
	      var Chartist = __webpack_require__(323);

	      var type = config.type;
	      var data = config.data;

	      var options = config.options || {};
	      var responsiveOptions = config.responsiveOptions || [];
	      var event = undefined;

	      if (this.chartist) {
	        this.chartist.update(data, options, responsiveOptions);
	      } else {
	        this.chartist = new Chartist[type]((0, _reactDom.findDOMNode)(this), data, options, responsiveOptions);

	        if (config.listener) {
	          for (event in config.listener) {
	            if (config.listener.hasOwnProperty(event)) {
	              this.chartist.on(event, config.listener[event]);
	            }
	          }
	        }
	      }

	      return this.chartist;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var className = this.props.className ? ' ' + this.props.className : '';
	      return _react2['default'].createElement('div', { className: 'ct-chart' + className });
	    }
	  }]);

	  return ChartistGraph;
	})(_react.Component);

	ChartistGraph.propTypes = {
	  type: _react2['default'].PropTypes.string.isRequired,
	  data: _react2['default'].PropTypes.object.isRequired,
	  className: _react2['default'].PropTypes.string,
	  options: _react2['default'].PropTypes.object,
	  responsiveOptions: _react2['default'].PropTypes.array
	};

	exports['default'] = ChartistGraph;
	module.exports = exports['default'];



/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module unless amdModuleId is set
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return (root['Chartist'] = factory());
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    // Node. Does not work with strict CommonJS, but
	    // only CommonJS-like environments that support module.exports,
	    // like Node.
	    module.exports = factory();
	  } else {
	    root['Chartist'] = factory();
	  }
	}(this, function () {

	/* Chartist.js 0.9.5
	 * Copyright © 2015 Gion Kunz
	 * Free to use under the WTFPL license.
	 * http://www.wtfpl.net/
	 */
	/**
	 * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.
	 *
	 * @module Chartist.Core
	 */
	var Chartist = {
	  version: '0.9.5'
	};

	(function (window, document, Chartist) {
	  'use strict';

	  /**
	   * Helps to simplify functional style code
	   *
	   * @memberof Chartist.Core
	   * @param {*} n This exact value will be returned by the noop function
	   * @return {*} The same value that was provided to the n parameter
	   */
	  Chartist.noop = function (n) {
	    return n;
	  };

	  /**
	   * Generates a-z from a number 0 to 26
	   *
	   * @memberof Chartist.Core
	   * @param {Number} n A number from 0 to 26 that will result in a letter a-z
	   * @return {String} A character from a-z based on the input number n
	   */
	  Chartist.alphaNumerate = function (n) {
	    // Limit to a-z
	    return String.fromCharCode(97 + n % 26);
	  };

	  /**
	   * Simple recursive object extend
	   *
	   * @memberof Chartist.Core
	   * @param {Object} target Target object where the source will be merged into
	   * @param {Object...} sources This object (objects) will be merged into target and then target is returned
	   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source
	   */
	  Chartist.extend = function (target) {
	    target = target || {};

	    var sources = Array.prototype.slice.call(arguments, 1);
	    sources.forEach(function(source) {
	      for (var prop in source) {
	        if (typeof source[prop] === 'object' && source[prop] !== null && !(source[prop] instanceof Array)) {
	          target[prop] = Chartist.extend({}, target[prop], source[prop]);
	        } else {
	          target[prop] = source[prop];
	        }
	      }
	    });

	    return target;
	  };

	  /**
	   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.
	   *
	   * @memberof Chartist.Core
	   * @param {String} str
	   * @param {String} subStr
	   * @param {String} newSubStr
	   * @return {String}
	   */
	  Chartist.replaceAll = function(str, subStr, newSubStr) {
	    return str.replace(new RegExp(subStr, 'g'), newSubStr);
	  };

	  /**
	   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.
	   *
	   * @memberof Chartist.Core
	   * @param {Number} value
	   * @param {String} unit
	   * @return {String} Returns the passed number value with unit.
	   */
	  Chartist.ensureUnit = function(value, unit) {
	    if(typeof value === 'number') {
	      value = value + unit;
	    }

	    return value;
	  };

	  /**
	   * Converts a number or string to a quantity object.
	   *
	   * @memberof Chartist.Core
	   * @param {String|Number} input
	   * @return {Object} Returns an object containing the value as number and the unit as string.
	   */
	  Chartist.quantity = function(input) {
	    if (typeof input === 'string') {
	      var match = (/^(\d+)\s*(.*)$/g).exec(input);
	      return {
	        value : +match[1],
	        unit: match[2] || undefined
	      };
	    }
	    return { value: input };
	  };

	  /**
	   * This is a wrapper around document.querySelector that will return the query if it's already of type Node
	   *
	   * @memberof Chartist.Core
	   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly
	   * @return {Node}
	   */
	  Chartist.querySelector = function(query) {
	    return query instanceof Node ? query : document.querySelector(query);
	  };

	  /**
	   * Functional style helper to produce array with given length initialized with undefined values
	   *
	   * @memberof Chartist.Core
	   * @param length
	   * @return {Array}
	   */
	  Chartist.times = function(length) {
	    return Array.apply(null, new Array(length));
	  };

	  /**
	   * Sum helper to be used in reduce functions
	   *
	   * @memberof Chartist.Core
	   * @param previous
	   * @param current
	   * @return {*}
	   */
	  Chartist.sum = function(previous, current) {
	    return previous + (current ? current : 0);
	  };

	  /**
	   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.
	   *
	   * @memberof Chartist.Core
	   * @param {Number} factor
	   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array
	   */
	  Chartist.mapMultiply = function(factor) {
	    return function(num) {
	      return num * factor;
	    };
	  };

	  /**
	   * Add helper to be used in `Array.map` for adding a addend to each value of an array.
	   *
	   * @memberof Chartist.Core
	   * @param {Number} addend
	   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array
	   */
	  Chartist.mapAdd = function(addend) {
	    return function(num) {
	      return num + addend;
	    };
	  };

	  /**
	   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).
	   *
	   * @memberof Chartist.Core
	   * @param arr
	   * @param cb
	   * @return {Array}
	   */
	  Chartist.serialMap = function(arr, cb) {
	    var result = [],
	        length = Math.max.apply(null, arr.map(function(e) {
	          return e.length;
	        }));

	    Chartist.times(length).forEach(function(e, index) {
	      var args = arr.map(function(e) {
	        return e[index];
	      });

	      result[index] = cb.apply(null, args);
	    });

	    return result;
	  };

	  /**
	   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.
	   *
	   * @memberof Chartist.Core
	   * @param {Number} value The value that should be rounded with precision
	   * @param {Number} [digits] The number of digits after decimal used to do the rounding
	   * @returns {number} Rounded value
	   */
	  Chartist.roundWithPrecision = function(value, digits) {
	    var precision = Math.pow(10, digits || Chartist.precision);
	    return Math.round(value * precision) / precision;
	  };

	  /**
	   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.
	   *
	   * @memberof Chartist.Core
	   * @type {number}
	   */
	  Chartist.precision = 8;

	  /**
	   * A map with characters to escape for strings to be safely used as attribute values.
	   *
	   * @memberof Chartist.Core
	   * @type {Object}
	   */
	  Chartist.escapingMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    '\'': '&#039;'
	  };

	  /**
	   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.
	   * If called with null or undefined the function will return immediately with null or undefined.
	   *
	   * @memberof Chartist.Core
	   * @param {Number|String|Object} data
	   * @return {String}
	   */
	  Chartist.serialize = function(data) {
	    if(data === null || data === undefined) {
	      return data;
	    } else if(typeof data === 'number') {
	      data = ''+data;
	    } else if(typeof data === 'object') {
	      data = JSON.stringify({data: data});
	    }

	    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {
	      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);
	    }, data);
	  };

	  /**
	   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.
	   *
	   * @memberof Chartist.Core
	   * @param {String} data
	   * @return {String|Number|Object}
	   */
	  Chartist.deserialize = function(data) {
	    if(typeof data !== 'string') {
	      return data;
	    }

	    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {
	      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);
	    }, data);

	    try {
	      data = JSON.parse(data);
	      data = data.data !== undefined ? data.data : data;
	    } catch(e) {}

	    return data;
	  };

	  /**
	   * Create or reinitialize the SVG element for the chart
	   *
	   * @memberof Chartist.Core
	   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element
	   * @param {String} width Set the width of the SVG element. Default is 100%
	   * @param {String} height Set the height of the SVG element. Default is 100%
	   * @param {String} className Specify a class to be added to the SVG element
	   * @return {Object} The created/reinitialized SVG element
	   */
	  Chartist.createSvg = function (container, width, height, className) {
	    var svg;

	    width = width || '100%';
	    height = height || '100%';

	    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it
	    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/
	    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {
	      return svg.getAttributeNS('http://www.w3.org/2000/xmlns/', Chartist.xmlNs.prefix);
	    }).forEach(function removePreviousElement(svg) {
	      container.removeChild(svg);
	    });

	    // Create svg object with width and height or use 100% as default
	    svg = new Chartist.Svg('svg').attr({
	      width: width,
	      height: height
	    }).addClass(className).attr({
	      style: 'width: ' + width + '; height: ' + height + ';'
	    });

	    // Add the DOM node to our container
	    container.appendChild(svg._node);

	    return svg;
	  };


	  /**
	   * Reverses the series, labels and series data arrays.
	   *
	   * @memberof Chartist.Core
	   * @param data
	   */
	  Chartist.reverseData = function(data) {
	    data.labels.reverse();
	    data.series.reverse();
	    for (var i = 0; i < data.series.length; i++) {
	      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {
	        data.series[i].data.reverse();
	      } else if(data.series[i] instanceof Array) {
	        data.series[i].reverse();
	      }
	    }
	  };

	  /**
	   * Convert data series into plain array
	   *
	   * @memberof Chartist.Core
	   * @param {Object} data The series object that contains the data to be visualized in the chart
	   * @param {Boolean} reverse If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.
	   * @param {Boolean} multi Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.
	   * @return {Array} A plain array that contains the data to be visualized in the chart
	   */
	  Chartist.getDataArray = function (data, reverse, multi) {
	    // If the data should be reversed but isn't we need to reverse it
	    // If it's reversed but it shouldn't we need to reverse it back
	    // That's required to handle data updates correctly and to reflect the responsive configurations
	    if(reverse && !data.reversed || !reverse && data.reversed) {
	      Chartist.reverseData(data);
	      data.reversed = !data.reversed;
	    }

	    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties
	    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values
	    function recursiveConvert(value) {
	      if(Chartist.isFalseyButZero(value)) {
	        // This is a hole in data and we should return undefined
	        return undefined;
	      } else if((value.data || value) instanceof Array) {
	        return (value.data || value).map(recursiveConvert);
	      } else if(value.hasOwnProperty('value')) {
	        return recursiveConvert(value.value);
	      } else {
	        if(multi) {
	          var multiValue = {};

	          // Single series value arrays are assumed to specify the Y-Axis value
	          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]
	          // If multi is a string then it's assumed that it specified which dimension should be filled as default
	          if(typeof multi === 'string') {
	            multiValue[multi] = Chartist.getNumberOrUndefined(value);
	          } else {
	            multiValue.y = Chartist.getNumberOrUndefined(value);
	          }

	          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;
	          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;

	          return multiValue;

	        } else {
	          return Chartist.getNumberOrUndefined(value);
	        }
	      }
	    }

	    return data.series.map(recursiveConvert);
	  };

	  /**
	   * Converts a number into a padding object.
	   *
	   * @memberof Chartist.Core
	   * @param {Object|Number} padding
	   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed
	   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.
	   */
	  Chartist.normalizePadding = function(padding, fallback) {
	    fallback = fallback || 0;

	    return typeof padding === 'number' ? {
	      top: padding,
	      right: padding,
	      bottom: padding,
	      left: padding
	    } : {
	      top: typeof padding.top === 'number' ? padding.top : fallback,
	      right: typeof padding.right === 'number' ? padding.right : fallback,
	      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,
	      left: typeof padding.left === 'number' ? padding.left : fallback
	    };
	  };

	  Chartist.getMetaData = function(series, index) {
	    var value = series.data ? series.data[index] : series[index];
	    return value ? Chartist.serialize(value.meta) : undefined;
	  };

	  /**
	   * Calculate the order of magnitude for the chart scale
	   *
	   * @memberof Chartist.Core
	   * @param {Number} value The value Range of the chart
	   * @return {Number} The order of magnitude
	   */
	  Chartist.orderOfMagnitude = function (value) {
	    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);
	  };

	  /**
	   * Project a data length into screen coordinates (pixels)
	   *
	   * @memberof Chartist.Core
	   * @param {Object} axisLength The svg element for the chart
	   * @param {Number} length Single data value from a series array
	   * @param {Object} bounds All the values to set the bounds of the chart
	   * @return {Number} The projected data length in pixels
	   */
	  Chartist.projectLength = function (axisLength, length, bounds) {
	    return length / bounds.range * axisLength;
	  };

	  /**
	   * Get the height of the area in the chart for the data series
	   *
	   * @memberof Chartist.Core
	   * @param {Object} svg The svg element for the chart
	   * @param {Object} options The Object that contains all the optional values for the chart
	   * @return {Number} The height of the area in the chart for the data series
	   */
	  Chartist.getAvailableHeight = function (svg, options) {
	    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);
	  };

	  /**
	   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.
	   *
	   * @memberof Chartist.Core
	   * @param {Array} data The array that contains the data to be visualized in the chart
	   * @param {Object} options The Object that contains the chart options
	   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration
	   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.
	   */
	  Chartist.getHighLow = function (data, options, dimension) {
	    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred
	    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});

	    var highLow = {
	        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,
	        low: options.low === undefined ? Number.MAX_VALUE : +options.low
	      };
	    var findHigh = options.high === undefined;
	    var findLow = options.low === undefined;

	    // Function to recursively walk through arrays and find highest and lowest number
	    function recursiveHighLow(data) {
	      if(data === undefined) {
	        return undefined;
	      } else if(data instanceof Array) {
	        for (var i = 0; i < data.length; i++) {
	          recursiveHighLow(data[i]);
	        }
	      } else {
	        var value = dimension ? +data[dimension] : +data;

	        if (findHigh && value > highLow.high) {
	          highLow.high = value;
	        }

	        if (findLow && value < highLow.low) {
	          highLow.low = value;
	        }
	      }
	    }

	    // Start to find highest and lowest number recursively
	    if(findHigh || findLow) {
	      recursiveHighLow(data);
	    }

	    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is
	    // used to generate the chart. This is useful when the chart always needs to contain the position of the
	    // invisible reference value in the view i.e. for bipolar scales.
	    if (options.referenceValue || options.referenceValue === 0) {
	      highLow.high = Math.max(options.referenceValue, highLow.high);
	      highLow.low = Math.min(options.referenceValue, highLow.low);
	    }

	    // If high and low are the same because of misconfiguration or flat data (only the same value) we need
	    // to set the high or low to 0 depending on the polarity
	    if (highLow.high <= highLow.low) {
	      // If both values are 0 we set high to 1
	      if (highLow.low === 0) {
	        highLow.high = 1;
	      } else if (highLow.low < 0) {
	        // If we have the same negative value for the bounds we set bounds.high to 0
	        highLow.high = 0;
	      } else {
	        // If we have the same positive value for the bounds we set bounds.low to 0
	        highLow.low = 0;
	      }
	    }

	    return highLow;
	  };

	  /**
	   * Checks if the value is a valid number or string with a number.
	   *
	   * @memberof Chartist.Core
	   * @param value
	   * @returns {Boolean}
	   */
	  Chartist.isNum = function(value) {
	    return !isNaN(value) && isFinite(value);
	  };

	  /**
	   * Returns true on all falsey values except the numeric value 0.
	   *
	   * @memberof Chartist.Core
	   * @param value
	   * @returns {boolean}
	   */
	  Chartist.isFalseyButZero = function(value) {
	    return !value && value !== 0;
	  };

	  /**
	   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.
	   *
	   * @memberof Chartist.Core
	   * @param value
	   * @returns {*}
	   */
	  Chartist.getNumberOrUndefined = function(value) {
	    return isNaN(+value) ? undefined : +value;
	  };

	  /**
	   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return undefined.
	   *
	   * @param value
	   * @param dimension
	   * @returns {*}
	   */
	  Chartist.getMultiValue = function(value, dimension) {
	    if(Chartist.isNum(value)) {
	      return +value;
	    } else if(value) {
	      return value[dimension || 'y'] || 0;
	    } else {
	      return 0;
	    }
	  };

	  /**
	   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.
	   *
	   * @memberof Chartist.Core
	   * @param {Number} num An integer number where the smallest factor should be searched for
	   * @returns {Number} The smallest integer factor of the parameter num.
	   */
	  Chartist.rho = function(num) {
	    if(num === 1) {
	      return num;
	    }

	    function gcd(p, q) {
	      if (p % q === 0) {
	        return q;
	      } else {
	        return gcd(q, p % q);
	      }
	    }

	    function f(x) {
	      return x * x + 1;
	    }

	    var x1 = 2, x2 = 2, divisor;
	    if (num % 2 === 0) {
	      return 2;
	    }

	    do {
	      x1 = f(x1) % num;
	      x2 = f(f(x2)) % num;
	      divisor = gcd(Math.abs(x1 - x2), num);
	    } while (divisor === 1);

	    return divisor;
	  };

	  /**
	   * Calculate and retrieve all the bounds for the chart and return them in one array
	   *
	   * @memberof Chartist.Core
	   * @param {Number} axisLength The length of the Axis used for
	   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.
	   * @param {Number} scaleMinSpace The minimum projected length a step should result in
	   * @param {Boolean} onlyInteger
	   * @return {Object} All the values to set the bounds of the chart
	   */
	  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {
	    var i,
	      optimizationCounter = 0,
	      newMin,
	      newMax,
	      bounds = {
	        high: highLow.high,
	        low: highLow.low
	      };

	    bounds.valueRange = bounds.high - bounds.low;
	    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);
	    bounds.step = Math.pow(10, bounds.oom);
	    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;
	    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;
	    bounds.range = bounds.max - bounds.min;
	    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);

	    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace
	    // If we are already below the scaleMinSpace value we will scale up
	    var length = Chartist.projectLength(axisLength, bounds.step, bounds);
	    var scaleUp = length < scaleMinSpace;
	    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;

	    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1
	    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {
	      bounds.step = 1;
	    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {
	      // If step 1 was too small, we can try the smallest factor of range
	      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor
	      // is larger than the scaleMinSpace we should go for it.
	      bounds.step = smallestFactor;
	    } else {
	      // Trying to divide or multiply by 2 and find the best step value
	      while (true) {
	        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {
	          bounds.step *= 2;
	        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {
	          bounds.step /= 2;
	          if(onlyInteger && bounds.step % 1 !== 0) {
	            bounds.step *= 2;
	            break;
	          }
	        } else {
	          break;
	        }

	        if(optimizationCounter++ > 1000) {
	          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');
	        }
	      }
	    }

	    // Narrow min and max based on new step
	    newMin = bounds.min;
	    newMax = bounds.max;
	    while(newMin + bounds.step <= bounds.low) {
	      newMin += bounds.step;
	    }
	    while(newMax - bounds.step >= bounds.high) {
	      newMax -= bounds.step;
	    }
	    bounds.min = newMin;
	    bounds.max = newMax;
	    bounds.range = bounds.max - bounds.min;

	    bounds.values = [];
	    for (i = bounds.min; i <= bounds.max; i += bounds.step) {
	      bounds.values.push(Chartist.roundWithPrecision(i));
	    }

	    return bounds;
	  };

	  /**
	   * Calculate cartesian coordinates of polar coordinates
	   *
	   * @memberof Chartist.Core
	   * @param {Number} centerX X-axis coordinates of center point of circle segment
	   * @param {Number} centerY X-axis coordinates of center point of circle segment
	   * @param {Number} radius Radius of circle segment
	   * @param {Number} angleInDegrees Angle of circle segment in degrees
	   * @return {{x:Number, y:Number}} Coordinates of point on circumference
	   */
	  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {
	    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;

	    return {
	      x: centerX + (radius * Math.cos(angleInRadians)),
	      y: centerY + (radius * Math.sin(angleInRadians))
	    };
	  };

	  /**
	   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right
	   *
	   * @memberof Chartist.Core
	   * @param {Object} svg The svg element for the chart
	   * @param {Object} options The Object that contains all the optional values for the chart
	   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used
	   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements
	   */
	  Chartist.createChartRect = function (svg, options, fallbackPadding) {
	    var hasAxis = !!(options.axisX || options.axisY);
	    var yAxisOffset = hasAxis ? options.axisY.offset : 0;
	    var xAxisOffset = hasAxis ? options.axisX.offset : 0;
	    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0
	    var width = svg.width() || Chartist.quantity(options.width).value || 0;
	    var height = svg.height() || Chartist.quantity(options.height).value || 0;
	    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);

	    // If settings were to small to cope with offset (legacy) and padding, we'll adjust
	    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);
	    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);

	    var chartRect = {
	      padding: normalizedPadding,
	      width: function () {
	        return this.x2 - this.x1;
	      },
	      height: function () {
	        return this.y1 - this.y2;
	      }
	    };

	    if(hasAxis) {
	      if (options.axisX.position === 'start') {
	        chartRect.y2 = normalizedPadding.top + xAxisOffset;
	        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);
	      } else {
	        chartRect.y2 = normalizedPadding.top;
	        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);
	      }

	      if (options.axisY.position === 'start') {
	        chartRect.x1 = normalizedPadding.left + yAxisOffset;
	        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);
	      } else {
	        chartRect.x1 = normalizedPadding.left;
	        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);
	      }
	    } else {
	      chartRect.x1 = normalizedPadding.left;
	      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);
	      chartRect.y2 = normalizedPadding.top;
	      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);
	    }

	    return chartRect;
	  };

	  /**
	   * Creates a grid line based on a projected value.
	   *
	   * @memberof Chartist.Core
	   * @param position
	   * @param index
	   * @param axis
	   * @param offset
	   * @param length
	   * @param group
	   * @param classes
	   * @param eventEmitter
	   */
	  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {
	    var positionalData = {};
	    positionalData[axis.units.pos + '1'] = position;
	    positionalData[axis.units.pos + '2'] = position;
	    positionalData[axis.counterUnits.pos + '1'] = offset;
	    positionalData[axis.counterUnits.pos + '2'] = offset + length;

	    var gridElement = group.elem('line', positionalData, classes.join(' '));

	    // Event for grid draw
	    eventEmitter.emit('draw',
	      Chartist.extend({
	        type: 'grid',
	        axis: axis,
	        index: index,
	        group: group,
	        element: gridElement
	      }, positionalData)
	    );
	  };

	  /**
	   * Creates a label based on a projected value and an axis.
	   *
	   * @memberof Chartist.Core
	   * @param position
	   * @param length
	   * @param index
	   * @param labels
	   * @param axis
	   * @param axisOffset
	   * @param labelOffset
	   * @param group
	   * @param classes
	   * @param useForeignObject
	   * @param eventEmitter
	   */
	  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {
	    var labelElement;
	    var positionalData = {};

	    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];
	    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];
	    positionalData[axis.units.len] = length;
	    positionalData[axis.counterUnits.len] = axisOffset - 10;

	    if(useForeignObject) {
	      // We need to set width and height explicitly to px as span will not expand with width and height being
	      // 100% in all browsers
	      var content = '<span class="' + classes.join(' ') + '" style="' +
	        axis.units.len + ': ' + Math.round(positionalData[axis.units.len]) + 'px; ' +
	        axis.counterUnits.len + ': ' + Math.round(positionalData[axis.counterUnits.len]) + 'px">' +
	        labels[index] + '</span>';

	      labelElement = group.foreignObject(content, Chartist.extend({
	        style: 'overflow: visible;'
	      }, positionalData));
	    } else {
	      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);
	    }

	    eventEmitter.emit('draw', Chartist.extend({
	      type: 'label',
	      axis: axis,
	      index: index,
	      group: group,
	      element: labelElement,
	      text: labels[index]
	    }, positionalData));
	  };

	  /**
	   * Helper to read series specific options from options object. It automatically falls back to the global option if
	   * there is no option in the series options.
	   *
	   * @param {Object} series Series object
	   * @param {Object} options Chartist options object
	   * @param {string} key The options key that should be used to obtain the options
	   * @returns {*}
	   */
	  Chartist.getSeriesOption = function(series, options, key) {
	    if(series.name && options.series && options.series[series.name]) {
	      var seriesOptions = options.series[series.name];
	      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];
	    } else {
	      return options[key];
	    }
	  };

	  /**
	   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches
	   *
	   * @memberof Chartist.Core
	   * @param {Object} options Options set by user
	   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart
	   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events
	   * @return {Object} The consolidated options object from the defaults, base and matching responsive options
	   */
	  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {
	    var baseOptions = Chartist.extend({}, options),
	      currentOptions,
	      mediaQueryListeners = [],
	      i;

	    function updateCurrentOptions(preventChangedEvent) {
	      var previousOptions = currentOptions;
	      currentOptions = Chartist.extend({}, baseOptions);

	      if (responsiveOptions) {
	        for (i = 0; i < responsiveOptions.length; i++) {
	          var mql = window.matchMedia(responsiveOptions[i][0]);
	          if (mql.matches) {
	            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);
	          }
	        }
	      }

	      if(eventEmitter && !preventChangedEvent) {
	        eventEmitter.emit('optionsChanged', {
	          previousOptions: previousOptions,
	          currentOptions: currentOptions
	        });
	      }
	    }

	    function removeMediaQueryListeners() {
	      mediaQueryListeners.forEach(function(mql) {
	        mql.removeListener(updateCurrentOptions);
	      });
	    }

	    if (!window.matchMedia) {
	      throw 'window.matchMedia not found! Make sure you\'re using a polyfill.';
	    } else if (responsiveOptions) {

	      for (i = 0; i < responsiveOptions.length; i++) {
	        var mql = window.matchMedia(responsiveOptions[i][0]);
	        mql.addListener(updateCurrentOptions);
	        mediaQueryListeners.push(mql);
	      }
	    }
	    // Execute initially so we get the correct options
	    updateCurrentOptions(true);

	    return {
	      removeMediaQueryListeners: removeMediaQueryListeners,
	      getCurrentOptions: function getCurrentOptions() {
	        return Chartist.extend({}, currentOptions);
	      }
	    };
	  };

	}(window, document, Chartist));
	;/**
	 * Chartist path interpolation functions.
	 *
	 * @module Chartist.Interpolation
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  Chartist.Interpolation = {};

	  /**
	   * This interpolation function does not smooth the path and the result is only containing lines and no curves.
	   *
	   * @example
	   * var chart = new Chartist.Line('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5],
	   *   series: [[1, 2, 8, 1, 7]]
	   * }, {
	   *   lineSmooth: Chartist.Interpolation.none({
	   *     fillHoles: false
	   *   })
	   * });
	   *
	   *
	   * @memberof Chartist.Interpolation
	   * @return {Function}
	   */
	  Chartist.Interpolation.none = function(options) {
	    var defaultOptions = {
	      fillHoles: false
	    };
	    options = Chartist.extend({}, defaultOptions, options);
	    return function none(pathCoordinates, valueData) {
	      var path = new Chartist.Svg.Path();
	      var hole = true;

	      for(var i = 0; i < pathCoordinates.length; i += 2) {
	        var currX = pathCoordinates[i];
	        var currY = pathCoordinates[i + 1];
	        var currData = valueData[i / 2];

	        if(currData.value !== undefined) {

	          if(hole) {
	            path.move(currX, currY, false, currData);
	          } else {
	            path.line(currX, currY, false, currData);
	          }

	          hole = false;
	        } else if(!options.fillHoles) {
	          hole = true;
	        }
	      }

	      return path;
	    };
	  };

	  /**
	   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.
	   *
	   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.
	   *
	   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.
	   *
	   * @example
	   * var chart = new Chartist.Line('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5],
	   *   series: [[1, 2, 8, 1, 7]]
	   * }, {
	   *   lineSmooth: Chartist.Interpolation.simple({
	   *     divisor: 2,
	   *     fillHoles: false
	   *   })
	   * });
	   *
	   *
	   * @memberof Chartist.Interpolation
	   * @param {Object} options The options of the simple interpolation factory function.
	   * @return {Function}
	   */
	  Chartist.Interpolation.simple = function(options) {
	    var defaultOptions = {
	      divisor: 2,
	      fillHoles: false
	    };
	    options = Chartist.extend({}, defaultOptions, options);

	    var d = 1 / Math.max(1, options.divisor);

	    return function simple(pathCoordinates, valueData) {
	      var path = new Chartist.Svg.Path();
	      var prevX, prevY, prevData;

	      for(var i = 0; i < pathCoordinates.length; i += 2) {
	        var currX = pathCoordinates[i];
	        var currY = pathCoordinates[i + 1];
	        var length = (currX - prevX) * d;
	        var currData = valueData[i / 2];

	        if(currData.value !== undefined) {

	          if(prevData === undefined) {
	            path.move(currX, currY, false, currData);
	          } else {
	            path.curve(
	              prevX + length,
	              prevY,
	              currX - length,
	              currY,
	              currX,
	              currY,
	              false,
	              currData
	            );
	          }

	          prevX = currX;
	          prevY = currY;
	          prevData = currData;
	        } else if(!options.fillHoles) {
	          prevX = currX = prevData = undefined;
	        }
	      }

	      return path;
	    };
	  };

	  /**
	   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.
	   *
	   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.
	   *
	   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.
	   *
	   * @example
	   * var chart = new Chartist.Line('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5],
	   *   series: [[1, 2, 8, 1, 7]]
	   * }, {
	   *   lineSmooth: Chartist.Interpolation.cardinal({
	   *     tension: 1,
	   *     fillHoles: false
	   *   })
	   * });
	   *
	   * @memberof Chartist.Interpolation
	   * @param {Object} options The options of the cardinal factory function.
	   * @return {Function}
	   */
	  Chartist.Interpolation.cardinal = function(options) {
	    var defaultOptions = {
	      tension: 1,
	      fillHoles: false
	    };

	    options = Chartist.extend({}, defaultOptions, options);

	    var t = Math.min(1, Math.max(0, options.tension)),
	      c = 1 - t;

	    // This function will help us to split pathCoordinates and valueData into segments that also contain pathCoordinates
	    // and valueData. This way the existing functions can be reused and the segment paths can be joined afterwards.
	    // This functionality is necessary to treat "holes" in the line charts
	    function splitIntoSegments(pathCoordinates, valueData) {
	      var segments = [];
	      var hole = true;

	      for(var i = 0; i < pathCoordinates.length; i += 2) {
	        // If this value is a "hole" we set the hole flag
	        if(valueData[i / 2].value === undefined) {
	          if(!options.fillHoles) {
	            hole = true;
	          }
	        } else {
	          // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment
	          if(hole) {
	            segments.push({
	              pathCoordinates: [],
	              valueData: []
	            });
	            // As we have a valid value now, we are not in a "hole" anymore
	            hole = false;
	          }

	          // Add to the segment pathCoordinates and valueData
	          segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);
	          segments[segments.length - 1].valueData.push(valueData[i / 2]);
	        }
	      }

	      return segments;
	    }

	    return function cardinal(pathCoordinates, valueData) {
	      // First we try to split the coordinates into segments
	      // This is necessary to treat "holes" in line charts
	      var segments = splitIntoSegments(pathCoordinates, valueData);

	      // If the split resulted in more that one segment we need to interpolate each segment individually and join them
	      // afterwards together into a single path.
	      if(segments.length > 1) {
	        var paths = [];
	        // For each segment we will recurse the cardinal function
	        segments.forEach(function(segment) {
	          paths.push(cardinal(segment.pathCoordinates, segment.valueData));
	        });
	        // Join the segment path data into a single path and return
	        return Chartist.Svg.Path.join(paths);
	      } else {
	        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first
	        // segment
	        pathCoordinates = segments[0].pathCoordinates;
	        valueData = segments[0].valueData;

	        // If less than two points we need to fallback to no smoothing
	        if(pathCoordinates.length <= 4) {
	          return Chartist.Interpolation.none()(pathCoordinates, valueData);
	        }

	        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),
	          z;

	        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {
	          var p = [
	            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},
	            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},
	            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},
	            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}
	          ];
	          if (z) {
	            if (!i) {
	              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};
	            } else if (iLen - 4 === i) {
	              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};
	            } else if (iLen - 2 === i) {
	              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};
	              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};
	            }
	          } else {
	            if (iLen - 4 === i) {
	              p[3] = p[2];
	            } else if (!i) {
	              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};
	            }
	          }

	          path.curve(
	            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),
	            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),
	            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),
	            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),
	            p[2].x,
	            p[2].y,
	            false,
	            valueData[(i + 2) / 2]
	          );
	        }

	        return path;
	      }
	    };
	  };

	  /**
	   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.
	   *
	   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.
	   *
	   * @example
	   * var chart = new Chartist.Line('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5],
	   *   series: [[1, 2, 8, 1, 7]]
	   * }, {
	   *   lineSmooth: Chartist.Interpolation.step({
	   *     postpone: true,
	   *     fillHoles: false
	   *   })
	   * });
	   *
	   * @memberof Chartist.Interpolation
	   * @param options
	   * @returns {Function}
	   */
	  Chartist.Interpolation.step = function(options) {
	    var defaultOptions = {
	      postpone: true,
	      fillHoles: false
	    };

	    options = Chartist.extend({}, defaultOptions, options);

	    return function step(pathCoordinates, valueData) {
	      var path = new Chartist.Svg.Path();

	      var prevX, prevY, prevData;

	      for (var i = 0; i < pathCoordinates.length; i += 2) {
	        var currX = pathCoordinates[i];
	        var currY = pathCoordinates[i + 1];
	        var currData = valueData[i / 2];

	        // If the current point is also not a hole we can draw the step lines
	        if(currData.value !== undefined) {
	          if(prevData === undefined) {
	            path.move(currX, currY, false, currData);
	          } else {
	            if(options.postpone) {
	              // If postponed we should draw the step line with the value of the previous value
	              path.line(currX, prevY, false, prevData);
	            } else {
	              // If not postponed we should draw the step line with the value of the current value
	              path.line(prevX, currY, false, currData);
	            }
	            // Line to the actual point (this should only be a Y-Axis movement
	            path.line(currX, currY, false, currData);
	          }

	          prevX = currX;
	          prevY = currY;
	          prevData = currData;
	        } else if(!options.fillHoles) {
	          prevX = prevY = prevData = undefined;
	        }
	      }

	      return path;
	    };
	  };

	}(window, document, Chartist));
	;/**
	 * A very basic event module that helps to generate and catch events.
	 *
	 * @module Chartist.Event
	 */
	/* global Chartist */
	(function (window, document, Chartist) {
	  'use strict';

	  Chartist.EventEmitter = function () {
	    var handlers = [];

	    /**
	     * Add an event handler for a specific event
	     *
	     * @memberof Chartist.Event
	     * @param {String} event The event name
	     * @param {Function} handler A event handler function
	     */
	    function addEventHandler(event, handler) {
	      handlers[event] = handlers[event] || [];
	      handlers[event].push(handler);
	    }

	    /**
	     * Remove an event handler of a specific event name or remove all event handlers for a specific event.
	     *
	     * @memberof Chartist.Event
	     * @param {String} event The event name where a specific or all handlers should be removed
	     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.
	     */
	    function removeEventHandler(event, handler) {
	      // Only do something if there are event handlers with this name existing
	      if(handlers[event]) {
	        // If handler is set we will look for a specific handler and only remove this
	        if(handler) {
	          handlers[event].splice(handlers[event].indexOf(handler), 1);
	          if(handlers[event].length === 0) {
	            delete handlers[event];
	          }
	        } else {
	          // If no handler is specified we remove all handlers for this event
	          delete handlers[event];
	        }
	      }
	    }

	    /**
	     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.
	     *
	     * @memberof Chartist.Event
	     * @param {String} event The event name that should be triggered
	     * @param {*} data Arbitrary data that will be passed to the event handler callback functions
	     */
	    function emit(event, data) {
	      // Only do something if there are event handlers with this name existing
	      if(handlers[event]) {
	        handlers[event].forEach(function(handler) {
	          handler(data);
	        });
	      }

	      // Emit event to star event handlers
	      if(handlers['*']) {
	        handlers['*'].forEach(function(starHandler) {
	          starHandler(event, data);
	        });
	      }
	    }

	    return {
	      addEventHandler: addEventHandler,
	      removeEventHandler: removeEventHandler,
	      emit: emit
	    };
	  };

	}(window, document, Chartist));
	;/**
	 * This module provides some basic prototype inheritance utilities.
	 *
	 * @module Chartist.Class
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  function listToArray(list) {
	    var arr = [];
	    if (list.length) {
	      for (var i = 0; i < list.length; i++) {
	        arr.push(list[i]);
	      }
	    }
	    return arr;
	  }

	  /**
	   * Method to extend from current prototype.
	   *
	   * @memberof Chartist.Class
	   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.
	   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.
	   * @return {Function} Constructor function of the new class
	   *
	   * @example
	   * var Fruit = Class.extend({
	     * color: undefined,
	     *   sugar: undefined,
	     *
	     *   constructor: function(color, sugar) {
	     *     this.color = color;
	     *     this.sugar = sugar;
	     *   },
	     *
	     *   eat: function() {
	     *     this.sugar = 0;
	     *     return this;
	     *   }
	     * });
	   *
	   * var Banana = Fruit.extend({
	     *   length: undefined,
	     *
	     *   constructor: function(length, sugar) {
	     *     Banana.super.constructor.call(this, 'Yellow', sugar);
	     *     this.length = length;
	     *   }
	     * });
	   *
	   * var banana = new Banana(20, 40);
	   * console.log('banana instanceof Fruit', banana instanceof Fruit);
	   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));
	   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);
	   * console.log(banana.sugar);
	   * console.log(banana.eat().sugar);
	   * console.log(banana.color);
	   */
	  function extend(properties, superProtoOverride) {
	    var superProto = superProtoOverride || this.prototype || Chartist.Class;
	    var proto = Object.create(superProto);

	    Chartist.Class.cloneDefinitions(proto, properties);

	    var constr = function() {
	      var fn = proto.constructor || function () {},
	        instance;

	      // If this is linked to the Chartist namespace the constructor was not called with new
	      // To provide a fallback we will instantiate here and return the instance
	      instance = this === Chartist ? Object.create(proto) : this;
	      fn.apply(instance, Array.prototype.slice.call(arguments, 0));

	      // If this constructor was not called with new we need to return the instance
	      // This will not harm when the constructor has been called with new as the returned value is ignored
	      return instance;
	    };

	    constr.prototype = proto;
	    constr.super = superProto;
	    constr.extend = this.extend;

	    return constr;
	  }

	  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]
	  function cloneDefinitions() {
	    var args = listToArray(arguments);
	    var target = args[0];

	    args.splice(1, args.length - 1).forEach(function (source) {
	      Object.getOwnPropertyNames(source).forEach(function (propName) {
	        // If this property already exist in target we delete it first
	        delete target[propName];
	        // Define the property with the descriptor from source
	        Object.defineProperty(target, propName,
	          Object.getOwnPropertyDescriptor(source, propName));
	      });
	    });

	    return target;
	  }

	  Chartist.Class = {
	    extend: extend,
	    cloneDefinitions: cloneDefinitions
	  };

	}(window, document, Chartist));
	;/**
	 * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.
	 *
	 * @module Chartist.Base
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.
	  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not
	  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.
	  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html
	  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj
	  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container
	  /**
	   * Updates the chart which currently does a full reconstruction of the SVG DOM
	   *
	   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.
	   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.
	   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base
	   * @memberof Chartist.Base
	   */
	  function update(data, options, override) {
	    if(data) {
	      this.data = data;
	      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts
	      this.eventEmitter.emit('data', {
	        type: 'update',
	        data: this.data
	      });
	    }

	    if(options) {
	      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);

	      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization
	      // Otherwise we re-create the optionsProvider at this point
	      if(!this.initializeTimeoutId) {
	        this.optionsProvider.removeMediaQueryListeners();
	        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);
	      }
	    }

	    // Only re-created the chart if it has been initialized yet
	    if(!this.initializeTimeoutId) {
	      this.createChart(this.optionsProvider.getCurrentOptions());
	    }

	    // Return a reference to the chart object to chain up calls
	    return this;
	  }

	  /**
	   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.
	   *
	   * @memberof Chartist.Base
	   */
	  function detach() {
	    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore
	    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout
	    if(!this.initializeTimeoutId) {
	      window.removeEventListener('resize', this.resizeListener);
	      this.optionsProvider.removeMediaQueryListeners();
	    } else {
	      window.clearTimeout(this.initializeTimeoutId);
	    }

	    return this;
	  }

	  /**
	   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.
	   *
	   * @memberof Chartist.Base
	   * @param {String} event Name of the event. Check the examples for supported events.
	   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.
	   */
	  function on(event, handler) {
	    this.eventEmitter.addEventHandler(event, handler);
	    return this;
	  }

	  /**
	   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.
	   *
	   * @memberof Chartist.Base
	   * @param {String} event Name of the event for which a handler should be removed
	   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.
	   */
	  function off(event, handler) {
	    this.eventEmitter.removeEventHandler(event, handler);
	    return this;
	  }

	  function initialize() {
	    // Add window resize listener that re-creates the chart
	    window.addEventListener('resize', this.resizeListener);

	    // Obtain current options based on matching media queries (if responsive options are given)
	    // This will also register a listener that is re-creating the chart based on media changes
	    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);
	    // Register options change listener that will trigger a chart update
	    this.eventEmitter.addEventHandler('optionsChanged', function() {
	      this.update();
	    }.bind(this));

	    // Before the first chart creation we need to register us with all plugins that are configured
	    // Initialize all relevant plugins with our chart object and the plugin options specified in the config
	    if(this.options.plugins) {
	      this.options.plugins.forEach(function(plugin) {
	        if(plugin instanceof Array) {
	          plugin[0](this, plugin[1]);
	        } else {
	          plugin(this);
	        }
	      }.bind(this));
	    }

	    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts
	    this.eventEmitter.emit('data', {
	      type: 'initial',
	      data: this.data
	    });

	    // Create the first chart
	    this.createChart(this.optionsProvider.getCurrentOptions());

	    // As chart is initialized from the event loop now we can reset our timeout reference
	    // This is important if the chart gets initialized on the same element twice
	    this.initializeTimeoutId = undefined;
	  }

	  /**
	   * Constructor of chart base class.
	   *
	   * @param query
	   * @param data
	   * @param defaultOptions
	   * @param options
	   * @param responsiveOptions
	   * @constructor
	   */
	  function Base(query, data, defaultOptions, options, responsiveOptions) {
	    this.container = Chartist.querySelector(query);
	    this.data = data;
	    this.defaultOptions = defaultOptions;
	    this.options = options;
	    this.responsiveOptions = responsiveOptions;
	    this.eventEmitter = Chartist.EventEmitter();
	    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');
	    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');
	    this.resizeListener = function resizeListener(){
	      this.update();
	    }.bind(this);

	    if(this.container) {
	      // If chartist was already initialized in this container we are detaching all event listeners first
	      if(this.container.__chartist__) {
	        this.container.__chartist__.detach();
	      }

	      this.container.__chartist__ = this;
	    }

	    // Using event loop for first draw to make it possible to register event listeners in the same call stack where
	    // the chart was created.
	    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);
	  }

	  // Creating the chart base class
	  Chartist.Base = Chartist.Class.extend({
	    constructor: Base,
	    optionsProvider: undefined,
	    container: undefined,
	    svg: undefined,
	    eventEmitter: undefined,
	    createChart: function() {
	      throw new Error('Base chart type can\'t be instantiated!');
	    },
	    update: update,
	    detach: detach,
	    on: on,
	    off: off,
	    version: Chartist.version,
	    supportsForeignObject: false
	  });

	}(window, document, Chartist));
	;/**
	 * Chartist SVG module for simple SVG DOM abstraction
	 *
	 * @module Chartist.Svg
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  var svgNs = 'http://www.w3.org/2000/svg',
	    xmlNs = 'http://www.w3.org/2000/xmlns/',
	    xhtmlNs = 'http://www.w3.org/1999/xhtml';

	  Chartist.xmlNs = {
	    qualifiedName: 'xmlns:ct',
	    prefix: 'ct',
	    uri: 'http://gionkunz.github.com/chartist-js/ct'
	  };

	  /**
	   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.
	   *
	   * @memberof Chartist.Svg
	   * @constructor
	   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg
	   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.
	   * @param {String} className This class or class list will be added to the SVG element
	   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child
	   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element
	   */
	  function Svg(name, attributes, className, parent, insertFirst) {
	    // If Svg is getting called with an SVG element we just return the wrapper
	    if(name instanceof Element) {
	      this._node = name;
	    } else {
	      this._node = document.createElementNS(svgNs, name);

	      // If this is an SVG element created then custom namespace
	      if(name === 'svg') {
	        this._node.setAttributeNS(xmlNs, Chartist.xmlNs.qualifiedName, Chartist.xmlNs.uri);
	      }
	    }

	    if(attributes) {
	      this.attr(attributes);
	    }

	    if(className) {
	      this.addClass(className);
	    }

	    if(parent) {
	      if (insertFirst && parent._node.firstChild) {
	        parent._node.insertBefore(this._node, parent._node.firstChild);
	      } else {
	        parent._node.appendChild(this._node);
	      }
	    }
	  }

	  /**
	   * Set attributes on the current SVG element of the wrapper you're currently working on.
	   *
	   * @memberof Chartist.Svg
	   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.
	   * @param {String} ns If specified, the attributes will be set as namespace attributes with ns as prefix.
	   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.
	   */
	  function attr(attributes, ns) {
	    if(typeof attributes === 'string') {
	      if(ns) {
	        return this._node.getAttributeNS(ns, attributes);
	      } else {
	        return this._node.getAttribute(attributes);
	      }
	    }

	    Object.keys(attributes).forEach(function(key) {
	      // If the attribute value is undefined we can skip this one
	      if(attributes[key] === undefined) {
	        return;
	      }

	      if(ns) {
	        this._node.setAttributeNS(ns, [Chartist.xmlNs.prefix, ':', key].join(''), attributes[key]);
	      } else {
	        this._node.setAttribute(key, attributes[key]);
	      }
	    }.bind(this));

	    return this;
	  }

	  /**
	   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper
	   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.
	   * @param {String} [className] This class or class list will be added to the SVG element
	   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element
	   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data
	   */
	  function elem(name, attributes, className, insertFirst) {
	    return new Chartist.Svg(name, attributes, className, this, insertFirst);
	  }

	  /**
	   * Returns the parent Chartist.SVG wrapper object
	   *
	   * @memberof Chartist.Svg
	   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.
	   */
	  function parent() {
	    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;
	  }

	  /**
	   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.
	   *
	   * @memberof Chartist.Svg
	   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element
	   */
	  function root() {
	    var node = this._node;
	    while(node.nodeName !== 'svg') {
	      node = node.parentNode;
	    }
	    return new Chartist.Svg(node);
	  }

	  /**
	   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} selector A CSS selector that is used to query for child SVG elements
	   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found
	   */
	  function querySelector(selector) {
	    var foundNode = this._node.querySelector(selector);
	    return foundNode ? new Chartist.Svg(foundNode) : null;
	  }

	  /**
	   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} selector A CSS selector that is used to query for child SVG elements
	   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found
	   */
	  function querySelectorAll(selector) {
	    var foundNodes = this._node.querySelectorAll(selector);
	    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;
	  }

	  /**
	   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.
	   *
	   * @memberof Chartist.Svg
	   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject
	   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.
	   * @param {String} [className] This class or class list will be added to the SVG element
	   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child
	   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element
	   */
	  function foreignObject(content, attributes, className, insertFirst) {
	    // If content is string then we convert it to DOM
	    // TODO: Handle case where content is not a string nor a DOM Node
	    if(typeof content === 'string') {
	      var container = document.createElement('div');
	      container.innerHTML = content;
	      content = container.firstChild;
	    }

	    // Adding namespace to content element
	    content.setAttribute('xmlns', xhtmlNs);

	    // Creating the foreignObject without required extension attribute (as described here
	    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)
	    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);

	    // Add content to foreignObjectElement
	    fnObj._node.appendChild(content);

	    return fnObj;
	  }

	  /**
	   * This method adds a new text element to the current Chartist.Svg wrapper.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} t The text that should be added to the text element that is created
	   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element
	   */
	  function text(t) {
	    this._node.appendChild(document.createTextNode(t));
	    return this;
	  }

	  /**
	   * This method will clear all child nodes of the current wrapper object.
	   *
	   * @memberof Chartist.Svg
	   * @return {Chartist.Svg} The same wrapper object that got emptied
	   */
	  function empty() {
	    while (this._node.firstChild) {
	      this._node.removeChild(this._node.firstChild);
	    }

	    return this;
	  }

	  /**
	   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.
	   *
	   * @memberof Chartist.Svg
	   * @return {Chartist.Svg} The parent wrapper object of the element that got removed
	   */
	  function remove() {
	    this._node.parentNode.removeChild(this._node);
	    return this.parent();
	  }

	  /**
	   * This method will replace the element with a new element that can be created outside of the current DOM.
	   *
	   * @memberof Chartist.Svg
	   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object
	   * @return {Chartist.Svg} The wrapper of the new element
	   */
	  function replace(newElement) {
	    this._node.parentNode.replaceChild(newElement._node, this._node);
	    return newElement;
	  }

	  /**
	   * This method will append an element to the current element as a child.
	   *
	   * @memberof Chartist.Svg
	   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child
	   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child
	   * @return {Chartist.Svg} The wrapper of the appended object
	   */
	  function append(element, insertFirst) {
	    if(insertFirst && this._node.firstChild) {
	      this._node.insertBefore(element._node, this._node.firstChild);
	    } else {
	      this._node.appendChild(element._node);
	    }

	    return this;
	  }

	  /**
	   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.
	   *
	   * @memberof Chartist.Svg
	   * @return {Array} A list of classes or an empty array if there are no classes on the current element
	   */
	  function classes() {
	    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\s+/) : [];
	  }

	  /**
	   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} names A white space separated list of class names
	   * @return {Chartist.Svg} The wrapper of the current element
	   */
	  function addClass(names) {
	    this._node.setAttribute('class',
	      this.classes(this._node)
	        .concat(names.trim().split(/\s+/))
	        .filter(function(elem, pos, self) {
	          return self.indexOf(elem) === pos;
	        }).join(' ')
	    );

	    return this;
	  }

	  /**
	   * Removes one or a space separated list of classes from the current element.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} names A white space separated list of class names
	   * @return {Chartist.Svg} The wrapper of the current element
	   */
	  function removeClass(names) {
	    var removedClasses = names.trim().split(/\s+/);

	    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {
	      return removedClasses.indexOf(name) === -1;
	    }).join(' '));

	    return this;
	  }

	  /**
	   * Removes all classes from the current element.
	   *
	   * @memberof Chartist.Svg
	   * @return {Chartist.Svg} The wrapper of the current element
	   */
	  function removeAllClasses() {
	    this._node.setAttribute('class', '');

	    return this;
	  }

	  /**
	   * "Save" way to get property value from svg BoundingBox.
	   * This is a workaround. Firefox throws an NS_ERROR_FAILURE error if getBBox() is called on an invisible node.
	   * See [NS_ERROR_FAILURE: Component returned failure code: 0x80004005](http://jsfiddle.net/sym3tri/kWWDK/)
	   *
	   * @memberof Chartist.Svg
	   * @param {SVGElement} node The svg node to
	   * @param {String} prop The property to fetch (ex.: height, width, ...)
	   * @returns {Number} The value of the given bbox property
	   */
	  function getBBoxProperty(node, prop) {
	    try {
	      return node.getBBox()[prop];
	    } catch(e) {}

	    return 0;
	  }

	  /**
	   * Get element height with fallback to svg BoundingBox or parent container dimensions:
	   * See [bugzilla.mozilla.org](https://bugzilla.mozilla.org/show_bug.cgi?id=530985)
	   *
	   * @memberof Chartist.Svg
	   * @return {Number} The elements height in pixels
	   */
	  function height() {
	    return this._node.clientHeight || Math.round(getBBoxProperty(this._node, 'height')) || this._node.parentNode.clientHeight;
	  }

	  /**
	   * Get element width with fallback to svg BoundingBox or parent container dimensions:
	   * See [bugzilla.mozilla.org](https://bugzilla.mozilla.org/show_bug.cgi?id=530985)
	   *
	   * @memberof Chartist.Core
	   * @return {Number} The elements width in pixels
	   */
	  function width() {
	    return this._node.clientWidth || Math.round(getBBoxProperty(this._node, 'width')) || this._node.parentNode.clientWidth;
	  }

	  /**
	   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.
	   * **An animations object could look like this:**
	   * ```javascript
	   * element.animate({
	   *   opacity: {
	   *     dur: 1000,
	   *     from: 0,
	   *     to: 1
	   *   },
	   *   x1: {
	   *     dur: '1000ms',
	   *     from: 100,
	   *     to: 200,
	   *     easing: 'easeOutQuart'
	   *   },
	   *   y1: {
	   *     dur: '2s',
	   *     from: 0,
	   *     to: 100
	   *   }
	   * });
	   * ```
	   * **Automatic unit conversion**
	   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.
	   * **Guided mode**
	   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill="freeze"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.
	   * If guided mode is enabled the following behavior is added:
	   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation
	   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)
	   * - The animate element will be forced to use `fill="freeze"`
	   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.
	   * - After the animation the element attribute value will be set to the `to` value of the animation
	   * - The animate element is deleted from the DOM
	   *
	   * @memberof Chartist.Svg
	   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.
	   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.
	   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.
	   * @return {Chartist.Svg} The current element where the animation was added
	   */
	  function animate(animations, guided, eventEmitter) {
	    if(guided === undefined) {
	      guided = true;
	    }

	    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {

	      function createAnimate(animationDefinition, guided) {
	        var attributeProperties = {},
	          animate,
	          timeout,
	          easing;

	        // Check if an easing is specified in the definition object and delete it from the object as it will not
	        // be part of the animate element attributes.
	        if(animationDefinition.easing) {
	          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object
	          easing = animationDefinition.easing instanceof Array ?
	            animationDefinition.easing :
	            Chartist.Svg.Easing[animationDefinition.easing];
	          delete animationDefinition.easing;
	        }

	        // If numeric dur or begin was provided we assume milli seconds
	        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');
	        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');

	        if(easing) {
	          animationDefinition.calcMode = 'spline';
	          animationDefinition.keySplines = easing.join(' ');
	          animationDefinition.keyTimes = '0;1';
	        }

	        // Adding "fill: freeze" if we are in guided mode and set initial attribute values
	        if(guided) {
	          animationDefinition.fill = 'freeze';
	          // Animated property on our element should already be set to the animation from value in guided mode
	          attributeProperties[attribute] = animationDefinition.from;
	          this.attr(attributeProperties);

	          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin
	          // which needs to be in ms aside
	          timeout = Chartist.quantity(animationDefinition.begin || 0).value;
	          animationDefinition.begin = 'indefinite';
	        }

	        animate = this.elem('animate', Chartist.extend({
	          attributeName: attribute
	        }, animationDefinition));

	        if(guided) {
	          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout
	          setTimeout(function() {
	            // If beginElement fails we set the animated attribute to the end position and remove the animate element
	            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in
	            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)
	            try {
	              animate._node.beginElement();
	            } catch(err) {
	              // Set animated attribute to current animated value
	              attributeProperties[attribute] = animationDefinition.to;
	              this.attr(attributeProperties);
	              // Remove the animate element as it's no longer required
	              animate.remove();
	            }
	          }.bind(this), timeout);
	        }

	        if(eventEmitter) {
	          animate._node.addEventListener('beginEvent', function handleBeginEvent() {
	            eventEmitter.emit('animationBegin', {
	              element: this,
	              animate: animate._node,
	              params: animationDefinition
	            });
	          }.bind(this));
	        }

	        animate._node.addEventListener('endEvent', function handleEndEvent() {
	          if(eventEmitter) {
	            eventEmitter.emit('animationEnd', {
	              element: this,
	              animate: animate._node,
	              params: animationDefinition
	            });
	          }

	          if(guided) {
	            // Set animated attribute to current animated value
	            attributeProperties[attribute] = animationDefinition.to;
	            this.attr(attributeProperties);
	            // Remove the animate element as it's no longer required
	            animate.remove();
	          }
	        }.bind(this));
	      }

	      // If current attribute is an array of definition objects we create an animate for each and disable guided mode
	      if(animations[attribute] instanceof Array) {
	        animations[attribute].forEach(function(animationDefinition) {
	          createAnimate.bind(this)(animationDefinition, false);
	        }.bind(this));
	      } else {
	        createAnimate.bind(this)(animations[attribute], guided);
	      }

	    }.bind(this));

	    return this;
	  }

	  Chartist.Svg = Chartist.Class.extend({
	    constructor: Svg,
	    attr: attr,
	    elem: elem,
	    parent: parent,
	    root: root,
	    querySelector: querySelector,
	    querySelectorAll: querySelectorAll,
	    foreignObject: foreignObject,
	    text: text,
	    empty: empty,
	    remove: remove,
	    replace: replace,
	    append: append,
	    classes: classes,
	    addClass: addClass,
	    removeClass: removeClass,
	    removeAllClasses: removeAllClasses,
	    height: height,
	    width: width,
	    animate: animate
	  });

	  /**
	   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.
	   *
	   * @memberof Chartist.Svg
	   * @param {String} feature The SVG 1.1 feature that should be checked for support.
	   * @return {Boolean} True of false if the feature is supported or not
	   */
	  Chartist.Svg.isSupported = function(feature) {
	    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');
	  };

	  /**
	   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.
	   *
	   * @memberof Chartist.Svg
	   */
	  var easingCubicBeziers = {
	    easeInSine: [0.47, 0, 0.745, 0.715],
	    easeOutSine: [0.39, 0.575, 0.565, 1],
	    easeInOutSine: [0.445, 0.05, 0.55, 0.95],
	    easeInQuad: [0.55, 0.085, 0.68, 0.53],
	    easeOutQuad: [0.25, 0.46, 0.45, 0.94],
	    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],
	    easeInCubic: [0.55, 0.055, 0.675, 0.19],
	    easeOutCubic: [0.215, 0.61, 0.355, 1],
	    easeInOutCubic: [0.645, 0.045, 0.355, 1],
	    easeInQuart: [0.895, 0.03, 0.685, 0.22],
	    easeOutQuart: [0.165, 0.84, 0.44, 1],
	    easeInOutQuart: [0.77, 0, 0.175, 1],
	    easeInQuint: [0.755, 0.05, 0.855, 0.06],
	    easeOutQuint: [0.23, 1, 0.32, 1],
	    easeInOutQuint: [0.86, 0, 0.07, 1],
	    easeInExpo: [0.95, 0.05, 0.795, 0.035],
	    easeOutExpo: [0.19, 1, 0.22, 1],
	    easeInOutExpo: [1, 0, 0, 1],
	    easeInCirc: [0.6, 0.04, 0.98, 0.335],
	    easeOutCirc: [0.075, 0.82, 0.165, 1],
	    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],
	    easeInBack: [0.6, -0.28, 0.735, 0.045],
	    easeOutBack: [0.175, 0.885, 0.32, 1.275],
	    easeInOutBack: [0.68, -0.55, 0.265, 1.55]
	  };

	  Chartist.Svg.Easing = easingCubicBeziers;

	  /**
	   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.
	   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.
	   *
	   * @memberof Chartist.Svg
	   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)
	   * @constructor
	   */
	  function SvgList(nodeList) {
	    var list = this;

	    this.svgElements = [];
	    for(var i = 0; i < nodeList.length; i++) {
	      this.svgElements.push(new Chartist.Svg(nodeList[i]));
	    }

	    // Add delegation methods for Chartist.Svg
	    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {
	      return ['constructor',
	          'parent',
	          'querySelector',
	          'querySelectorAll',
	          'replace',
	          'append',
	          'classes',
	          'height',
	          'width'].indexOf(prototypeProperty) === -1;
	    }).forEach(function(prototypeProperty) {
	      list[prototypeProperty] = function() {
	        var args = Array.prototype.slice.call(arguments, 0);
	        list.svgElements.forEach(function(element) {
	          Chartist.Svg.prototype[prototypeProperty].apply(element, args);
	        });
	        return list;
	      };
	    });
	  }

	  Chartist.Svg.List = Chartist.Class.extend({
	    constructor: SvgList
	  });
	}(window, document, Chartist));
	;/**
	 * Chartist SVG path module for SVG path description creation and modification.
	 *
	 * @module Chartist.Svg.Path
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  /**
	   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.
	   *
	   * @memberof Chartist.Svg.Path
	   * @type {Object}
	   */
	  var elementDescriptions = {
	    m: ['x', 'y'],
	    l: ['x', 'y'],
	    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],
	    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']
	  };

	  /**
	   * Default options for newly created SVG path objects.
	   *
	   * @memberof Chartist.Svg.Path
	   * @type {Object}
	   */
	  var defaultOptions = {
	    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.
	    accuracy: 3
	  };

	  function element(command, params, pathElements, pos, relative, data) {
	    var pathElement = Chartist.extend({
	      command: relative ? command.toLowerCase() : command.toUpperCase()
	    }, params, data ? { data: data } : {} );

	    pathElements.splice(pos, 0, pathElement);
	  }

	  function forEachParam(pathElements, cb) {
	    pathElements.forEach(function(pathElement, pathElementIndex) {
	      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {
	        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);
	      });
	    });
	  }

	  /**
	   * Used to construct a new path object.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)
	   * @param {Object} options Options object that overrides the default objects. See default options for more details.
	   * @constructor
	   */
	  function SvgPath(close, options) {
	    this.pathElements = [];
	    this.pos = 0;
	    this.close = close;
	    this.options = Chartist.extend({}, defaultOptions, options);
	  }

	  /**
	   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.
	   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.
	   */
	  function position(pos) {
	    if(pos !== undefined) {
	      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));
	      return this;
	    } else {
	      return this.pos;
	    }
	  }

	  /**
	   * Removes elements from the path starting at the current position.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} count Number of path elements that should be removed from the current position.
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function remove(count) {
	    this.pathElements.splice(this.pos, count);
	    return this;
	  }

	  /**
	   * Use this function to add a new move SVG path element.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} x The x coordinate for the move element.
	   * @param {Number} y The y coordinate for the move element.
	   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)
	   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function move(x, y, relative, data) {
	    element('M', {
	      x: +x,
	      y: +y
	    }, this.pathElements, this.pos++, relative, data);
	    return this;
	  }

	  /**
	   * Use this function to add a new line SVG path element.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} x The x coordinate for the line element.
	   * @param {Number} y The y coordinate for the line element.
	   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)
	   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function line(x, y, relative, data) {
	    element('L', {
	      x: +x,
	      y: +y
	    }, this.pathElements, this.pos++, relative, data);
	    return this;
	  }

	  /**
	   * Use this function to add a new curve SVG path element.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.
	   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.
	   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.
	   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.
	   * @param {Number} x The x coordinate for the target point of the curve element.
	   * @param {Number} y The y coordinate for the target point of the curve element.
	   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)
	   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function curve(x1, y1, x2, y2, x, y, relative, data) {
	    element('C', {
	      x1: +x1,
	      y1: +y1,
	      x2: +x2,
	      y2: +y2,
	      x: +x,
	      y: +y
	    }, this.pathElements, this.pos++, relative, data);
	    return this;
	  }

	  /**
	   * Use this function to add a new non-bezier curve SVG path element.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} rx The radius to be used for the x-axis of the arc.
	   * @param {Number} ry The radius to be used for the y-axis of the arc.
	   * @param {Number} xAr Defines the orientation of the arc
	   * @param {Number} lAf Large arc flag
	   * @param {Number} sf Sweep flag
	   * @param {Number} x The x coordinate for the target point of the curve element.
	   * @param {Number} y The y coordinate for the target point of the curve element.
	   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)
	   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {
	    element('A', {
	      rx: +rx,
	      ry: +ry,
	      xAr: +xAr,
	      lAf: +lAf,
	      sf: +sf,
	      x: +x,
	      y: +y
	    }, this.pathElements, this.pos++, relative, data);
	    return this;
	  }

	  /**
	   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function parse(path) {
	    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]
	    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')
	      .replace(/([0-9])([A-Za-z])/g, '$1 $2')
	      .split(/[\s,]+/)
	      .reduce(function(result, element) {
	        if(element.match(/[A-Za-z]/)) {
	          result.push([]);
	        }

	        result[result.length - 1].push(element);
	        return result;
	      }, []);

	    // If this is a closed path we remove the Z at the end because this is determined by the close option
	    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {
	      chunks.pop();
	    }

	    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters
	    // For example {command: 'M', x: '10', y: '10'}
	    var elements = chunks.map(function(chunk) {
	        var command = chunk.shift(),
	          description = elementDescriptions[command.toLowerCase()];

	        return Chartist.extend({
	          command: command
	        }, description.reduce(function(result, paramName, index) {
	          result[paramName] = +chunk[index];
	          return result;
	        }, {}));
	      });

	    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position
	    var spliceArgs = [this.pos, 0];
	    Array.prototype.push.apply(spliceArgs, elements);
	    Array.prototype.splice.apply(this.pathElements, spliceArgs);
	    // Increase the internal position by the element count
	    this.pos += elements.length;

	    return this;
	  }

	  /**
	   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.
	   *
	   * @memberof Chartist.Svg.Path
	   * @return {String}
	   */
	  function stringify() {
	    var accuracyMultiplier = Math.pow(10, this.options.accuracy);

	    return this.pathElements.reduce(function(path, pathElement) {
	        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {
	          return this.options.accuracy ?
	            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :
	            pathElement[paramName];
	        }.bind(this));

	        return path + pathElement.command + params.join(',');
	      }.bind(this), '') + (this.close ? 'Z' : '');
	  }

	  /**
	   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.
	   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function scale(x, y) {
	    forEachParam(this.pathElements, function(pathElement, paramName) {
	      pathElement[paramName] *= paramName[0] === 'x' ? x : y;
	    });
	    return this;
	  }

	  /**
	   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.
	   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function translate(x, y) {
	    forEachParam(this.pathElements, function(pathElement, paramName) {
	      pathElement[paramName] += paramName[0] === 'x' ? x : y;
	    });
	    return this;
	  }

	  /**
	   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.
	   * The method signature of the callback function looks like this:
	   * ```javascript
	   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)
	   * ```
	   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.
	   * @return {Chartist.Svg.Path} The current path object for easy call chaining.
	   */
	  function transform(transformFnc) {
	    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {
	      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);
	      if(transformed || transformed === 0) {
	        pathElement[paramName] = transformed;
	      }
	    });
	    return this;
	  }

	  /**
	   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.
	   * @return {Chartist.Svg.Path}
	   */
	  function clone(close) {
	    var c = new Chartist.Svg.Path(close || this.close);
	    c.pos = this.pos;
	    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {
	      return Chartist.extend({}, pathElement);
	    });
	    c.options = Chartist.extend({}, this.options);
	    return c;
	  }

	  /**
	   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {String} command The command you'd like to use to split the path
	   * @return {Array<Chartist.Svg.Path>}
	   */
	  function splitByCommand(command) {
	    var split = [
	      new Chartist.Svg.Path()
	    ];

	    this.pathElements.forEach(function(pathElement) {
	      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {
	        split.push(new Chartist.Svg.Path());
	      }

	      split[split.length - 1].pathElements.push(pathElement);
	    });

	    return split;
	  }

	  /**
	   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.
	   *
	   * @memberof Chartist.Svg.Path
	   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.
	   * @param {boolean} close If the newly created path should be a closed path
	   * @param {Object} options Path options for the newly created path.
	   * @return {Chartist.Svg.Path}
	   */

	  function join(paths, close, options) {
	    var joinedPath = new Chartist.Svg.Path(close, options);
	    for(var i = 0; i < paths.length; i++) {
	      var path = paths[i];
	      for(var j = 0; j < path.pathElements.length; j++) {
	        joinedPath.pathElements.push(path.pathElements[j]);
	      }
	    }
	    return joinedPath;
	  }

	  Chartist.Svg.Path = Chartist.Class.extend({
	    constructor: SvgPath,
	    position: position,
	    remove: remove,
	    move: move,
	    line: line,
	    curve: curve,
	    arc: arc,
	    scale: scale,
	    translate: translate,
	    transform: transform,
	    parse: parse,
	    stringify: stringify,
	    clone: clone,
	    splitByCommand: splitByCommand
	  });

	  Chartist.Svg.Path.elementDescriptions = elementDescriptions;
	  Chartist.Svg.Path.join = join;
	}(window, document, Chartist));
	;/* global Chartist */
	(function (window, document, Chartist) {
	  'use strict';

	  var axisUnits = {
	    x: {
	      pos: 'x',
	      len: 'width',
	      dir: 'horizontal',
	      rectStart: 'x1',
	      rectEnd: 'x2',
	      rectOffset: 'y2'
	    },
	    y: {
	      pos: 'y',
	      len: 'height',
	      dir: 'vertical',
	      rectStart: 'y2',
	      rectEnd: 'y1',
	      rectOffset: 'x1'
	    }
	  };

	  function Axis(units, chartRect, ticks, options) {
	    this.units = units;
	    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;
	    this.chartRect = chartRect;
	    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];
	    this.gridOffset = chartRect[units.rectOffset];
	    this.ticks = ticks;
	    this.options = options;
	  }

	  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {
	    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];
	    var projectedValues = this.ticks.map(this.projectValue.bind(this));
	    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);

	    projectedValues.forEach(function(projectedValue, index) {
	      var labelOffset = {
	        x: 0,
	        y: 0
	      };

	      // TODO: Find better solution for solving this problem
	      // Calculate how much space we have available for the label
	      var labelLength;
	      if(projectedValues[index + 1]) {
	        // If we still have one label ahead, we can calculate the distance to the next tick / label
	        labelLength = projectedValues[index + 1] - projectedValue;
	      } else {
	        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to
	        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will
	        // still be visible inside of the chart padding.
	        labelLength = Math.max(this.axisLength - projectedValue, 30);
	      }

	      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)
	      if(!labelValues[index] && labelValues[index] !== 0) {
	        return;
	      }

	      // Transform to global coordinates using the chartRect
	      // We also need to set the label offset for the createLabel function
	      if(this.units.pos === 'x') {
	        projectedValue = this.chartRect.x1 + projectedValue;
	        labelOffset.x = chartOptions.axisX.labelOffset.x;

	        // If the labels should be positioned in start position (top side for vertical axis) we need to set a
	        // different offset as for positioned with end (bottom)
	        if(chartOptions.axisX.position === 'start') {
	          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);
	        } else {
	          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);
	        }
	      } else {
	        projectedValue = this.chartRect.y1 - projectedValue;
	        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);

	        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a
	        // different offset as for positioned with end (right side)
	        if(chartOptions.axisY.position === 'start') {
	          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;
	        } else {
	          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;
	        }
	      }

	      if(axisOptions.showGrid) {
	        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [
	          chartOptions.classNames.grid,
	          chartOptions.classNames[this.units.dir]
	        ], eventEmitter);
	      }

	      if(axisOptions.showLabel) {
	        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [
	          chartOptions.classNames.label,
	          chartOptions.classNames[this.units.dir],
	          chartOptions.classNames[axisOptions.position]
	        ], useForeignObject, eventEmitter);
	      }
	    }.bind(this));
	  }

	  Chartist.Axis = Chartist.Class.extend({
	    constructor: Axis,
	    createGridAndLabels: createGridAndLabels,
	    projectValue: function(value, index, data) {
	      throw new Error('Base axis can\'t be instantiated!');
	    }
	  });

	  Chartist.Axis.units = axisUnits;

	}(window, document, Chartist));
	;/**
	 * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.
	 * **Options**
	 * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
	 * ```javascript
	 * var options = {
	 *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored
	 *   high: 100,
	 *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored
	 *   low: 0,
	 *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).
	 *   scaleMinSpace: 20,
	 *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.
	 *   onlyInteger: true,
	 *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.
	 *   referenceValue: 5
	 * };
	 * ```
	 *
	 * @module Chartist.AutoScaleAxis
	 */
	/* global Chartist */
	(function (window, document, Chartist) {
	  'use strict';

	  function AutoScaleAxis(axisUnit, data, chartRect, options) {
	    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options
	    var highLow = options.highLow || Chartist.getHighLow(data.normalized, options, axisUnit.pos);
	    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);
	    this.range = {
	      min: this.bounds.min,
	      max: this.bounds.max
	    };

	    Chartist.AutoScaleAxis.super.constructor.call(this,
	      axisUnit,
	      chartRect,
	      this.bounds.values,
	      options);
	  }

	  function projectValue(value) {
	    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;
	  }

	  Chartist.AutoScaleAxis = Chartist.Axis.extend({
	    constructor: AutoScaleAxis,
	    projectValue: projectValue
	  });

	}(window, document, Chartist));
	;/**
	 * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.
	 * **Options**
	 * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
	 * ```javascript
	 * var options = {
	 *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored
	 *   high: 100,
	 *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored
	 *   low: 0,
	 *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.
	 *   divisor: 4,
	 *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.
	 *   ticks: [1, 10, 20, 30]
	 * };
	 * ```
	 *
	 * @module Chartist.FixedScaleAxis
	 */
	/* global Chartist */
	(function (window, document, Chartist) {
	  'use strict';

	  function FixedScaleAxis(axisUnit, data, chartRect, options) {
	    var highLow = options.highLow || Chartist.getHighLow(data.normalized, options, axisUnit.pos);
	    this.divisor = options.divisor || 1;
	    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {
	      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;
	    }.bind(this));
	    this.ticks.sort(function(a, b) {
	      return a - b;
	    });
	    this.range = {
	      min: highLow.low,
	      max: highLow.high
	    };

	    Chartist.FixedScaleAxis.super.constructor.call(this,
	      axisUnit,
	      chartRect,
	      this.ticks,
	      options);

	    this.stepLength = this.axisLength / this.divisor;
	  }

	  function projectValue(value) {
	    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);
	  }

	  Chartist.FixedScaleAxis = Chartist.Axis.extend({
	    constructor: FixedScaleAxis,
	    projectValue: projectValue
	  });

	}(window, document, Chartist));
	;/**
	 * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.
	 * **Options**
	 * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
	 * ```javascript
	 * var options = {
	 *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.
	 *   ticks: ['One', 'Two', 'Three'],
	 *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.
	 *   stretch: true
	 * };
	 * ```
	 *
	 * @module Chartist.StepAxis
	 */
	/* global Chartist */
	(function (window, document, Chartist) {
	  'use strict';

	  function StepAxis(axisUnit, data, chartRect, options) {
	    Chartist.StepAxis.super.constructor.call(this,
	      axisUnit,
	      chartRect,
	      options.ticks,
	      options);

	    this.stepLength = this.axisLength / (options.ticks.length - (options.stretch ? 1 : 0));
	  }

	  function projectValue(value, index) {
	    return this.stepLength * index;
	  }

	  Chartist.StepAxis = Chartist.Axis.extend({
	    constructor: StepAxis,
	    projectValue: projectValue
	  });

	}(window, document, Chartist));
	;/**
	 * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.
	 *
	 * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.
	 *
	 * @module Chartist.Line
	 */
	/* global Chartist */
	(function(window, document, Chartist){
	  'use strict';

	  /**
	   * Default options in line charts. Expand the code view to see a detailed list of options with comments.
	   *
	   * @memberof Chartist.Line
	   */
	  var defaultOptions = {
	    // Options for X-Axis
	    axisX: {
	      // The offset of the labels to the chart area
	      offset: 30,
	      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
	      position: 'end',
	      // Allows you to correct label positioning on this axis by positive or negative x and y offset.
	      labelOffset: {
	        x: 0,
	        y: 0
	      },
	      // If labels should be shown or not
	      showLabel: true,
	      // If the axis grid should be drawn or not
	      showGrid: true,
	      // Interpolation function that allows you to intercept the value from the axis label
	      labelInterpolationFnc: Chartist.noop,
	      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.
	      type: undefined
	    },
	    // Options for Y-Axis
	    axisY: {
	      // The offset of the labels to the chart area
	      offset: 40,
	      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
	      position: 'start',
	      // Allows you to correct label positioning on this axis by positive or negative x and y offset.
	      labelOffset: {
	        x: 0,
	        y: 0
	      },
	      // If labels should be shown or not
	      showLabel: true,
	      // If the axis grid should be drawn or not
	      showGrid: true,
	      // Interpolation function that allows you to intercept the value from the axis label
	      labelInterpolationFnc: Chartist.noop,
	      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.
	      type: undefined,
	      // This value specifies the minimum height in pixel of the scale steps
	      scaleMinSpace: 20,
	      // Use only integer values (whole numbers) for the scale steps
	      onlyInteger: false
	    },
	    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
	    width: undefined,
	    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
	    height: undefined,
	    // If the line should be drawn or not
	    showLine: true,
	    // If dots should be drawn or not
	    showPoint: true,
	    // If the line chart should draw an area
	    showArea: false,
	    // The base for the area chart that will be used to close the area shape (is normally 0)
	    areaBase: 0,
	    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.
	    lineSmooth: true,
	    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value
	    low: undefined,
	    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value
	    high: undefined,
	    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
	    chartPadding: {
	      top: 15,
	      right: 15,
	      bottom: 5,
	      left: 10
	    },
	    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.
	    fullWidth: false,
	    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
	    reverseData: false,
	    // Override the class names that get used to generate the SVG structure of the chart
	    classNames: {
	      chart: 'ct-chart-line',
	      label: 'ct-label',
	      labelGroup: 'ct-labels',
	      series: 'ct-series',
	      line: 'ct-line',
	      point: 'ct-point',
	      area: 'ct-area',
	      grid: 'ct-grid',
	      gridGroup: 'ct-grids',
	      vertical: 'ct-vertical',
	      horizontal: 'ct-horizontal',
	      start: 'ct-start',
	      end: 'ct-end'
	    }
	  };

	  /**
	   * Creates a new chart
	   *
	   */
	  function createChart(options) {
	    var data = {
	      raw: this.data,
	      normalized: Chartist.getDataArray(this.data, options.reverseData, true)
	    };

	    // Create new svg object
	    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);
	    // Create groups for labels, grid and series
	    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);
	    var seriesGroup = this.svg.elem('g');
	    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);

	    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);
	    var axisX, axisY;

	    if(options.axisX.type === undefined) {
	      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data, chartRect, Chartist.extend({}, options.axisX, {
	        ticks: data.raw.labels,
	        stretch: options.fullWidth
	      }));
	    } else {
	      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data, chartRect, options.axisX);
	    }

	    if(options.axisY.type === undefined) {
	      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data, chartRect, Chartist.extend({}, options.axisY, {
	        high: Chartist.isNum(options.high) ? options.high : options.axisY.high,
	        low: Chartist.isNum(options.low) ? options.low : options.axisY.low
	      }));
	    } else {
	      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data, chartRect, options.axisY);
	    }

	    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);
	    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);

	    // Draw the series
	    data.raw.series.forEach(function(series, seriesIndex) {
	      var seriesElement = seriesGroup.elem('g');

	      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written
	      seriesElement.attr({
	        'series-name': series.name,
	        'meta': Chartist.serialize(series.meta)
	      }, Chartist.xmlNs.uri);

	      // Use series class from series data or if not set generate one
	      seriesElement.addClass([
	        options.classNames.series,
	        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))
	      ].join(' '));

	      var pathCoordinates = [],
	        pathData = [];

	      data.normalized[seriesIndex].forEach(function(value, valueIndex) {
	        var p = {
	          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized[seriesIndex]),
	          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized[seriesIndex])
	        };
	        pathCoordinates.push(p.x, p.y);
	        pathData.push({
	          value: value,
	          valueIndex: valueIndex,
	          meta: Chartist.getMetaData(series, valueIndex)
	        });
	      }.bind(this));

	      var seriesOptions = {
	        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),
	        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),
	        showLine: Chartist.getSeriesOption(series, options, 'showLine'),
	        showArea: Chartist.getSeriesOption(series, options, 'showArea'),
	        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')
	      };

	      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?
	        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.cardinal() : Chartist.Interpolation.none());
	      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original
	      // index, value and meta data
	      var path = smoothing(pathCoordinates, pathData);

	      // If we should show points we need to create them now to avoid secondary loop
	      // Points are drawn from the pathElements returned by the interpolation function
	      // Small offset for Firefox to render squares correctly
	      if (seriesOptions.showPoint) {

	        path.pathElements.forEach(function(pathElement) {
	          var point = seriesElement.elem('line', {
	            x1: pathElement.x,
	            y1: pathElement.y,
	            x2: pathElement.x + 0.01,
	            y2: pathElement.y
	          }, options.classNames.point).attr({
	            'value': [pathElement.data.value.x, pathElement.data.value.y].filter(function(v) {
	                return v;
	              }).join(','),
	            'meta': pathElement.data.meta
	          }, Chartist.xmlNs.uri);

	          this.eventEmitter.emit('draw', {
	            type: 'point',
	            value: pathElement.data.value,
	            index: pathElement.data.valueIndex,
	            meta: pathElement.data.meta,
	            series: series,
	            seriesIndex: seriesIndex,
	            axisX: axisX,
	            axisY: axisY,
	            group: seriesElement,
	            element: point,
	            x: pathElement.x,
	            y: pathElement.y
	          });
	        }.bind(this));
	      }

	      if(seriesOptions.showLine) {
	        var line = seriesElement.elem('path', {
	          d: path.stringify()
	        }, options.classNames.line, true);

	        this.eventEmitter.emit('draw', {
	          type: 'line',
	          values: data.normalized[seriesIndex],
	          path: path.clone(),
	          chartRect: chartRect,
	          index: seriesIndex,
	          series: series,
	          seriesIndex: seriesIndex,
	          axisX: axisX,
	          axisY: axisY,
	          group: seriesElement,
	          element: line
	        });
	      }

	      // Area currently only works with axes that support a range!
	      if(seriesOptions.showArea && axisY.range) {
	        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that
	        // the area is not drawn outside the chart area.
	        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);

	        // We project the areaBase value into screen coordinates
	        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);

	        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments
	        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {
	          // We filter only "solid" segments that contain more than one point. Otherwise there's no need for an area
	          return pathSegment.pathElements.length > 1;
	        }).map(function convertToArea(solidPathSegments) {
	          // Receiving the filtered solid path segments we can now convert those segments into fill areas
	          var firstElement = solidPathSegments.pathElements[0];
	          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];

	          // Cloning the solid path segment with closing option and removing the first move command from the clone
	          // We then insert a new move that should start at the area base and draw a straight line up or down
	          // at the end of the path we add an additional straight line to the projected area base value
	          // As the closing option is set our path will be automatically closed
	          return solidPathSegments.clone(true)
	            .position(0)
	            .remove(1)
	            .move(firstElement.x, areaBaseProjected)
	            .line(firstElement.x, firstElement.y)
	            .position(solidPathSegments.pathElements.length + 1)
	            .line(lastElement.x, areaBaseProjected);

	        }).forEach(function createArea(areaPath) {
	          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects
	          // and adding the created DOM elements to the correct series group
	          var area = seriesElement.elem('path', {
	            d: areaPath.stringify()
	          }, options.classNames.area, true).attr({
	            'values': data.normalized[seriesIndex]
	          }, Chartist.xmlNs.uri);

	          // Emit an event for each area that was drawn
	          this.eventEmitter.emit('draw', {
	            type: 'area',
	            values: data.normalized[seriesIndex],
	            path: areaPath.clone(),
	            series: series,
	            seriesIndex: seriesIndex,
	            axisX: axisX,
	            axisY: axisY,
	            chartRect: chartRect,
	            index: seriesIndex,
	            group: seriesElement,
	            element: area
	          });
	        }.bind(this));
	      }
	    }.bind(this));

	    this.eventEmitter.emit('created', {
	      bounds: axisY.bounds,
	      chartRect: chartRect,
	      axisX: axisX,
	      axisY: axisY,
	      svg: this.svg,
	      options: options
	    });
	  }

	  /**
	   * This method creates a new line chart.
	   *
	   * @memberof Chartist.Line
	   * @param {String|Node} query A selector query string or directly a DOM element
	   * @param {Object} data The data object that needs to consist of a labels and a series array
	   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
	   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
	   * @return {Object} An object which exposes the API for the created chart
	   *
	   * @example
	   * // Create a simple line chart
	   * var data = {
	   *   // A labels array that can contain any sort of values
	   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
	   *   // Our series array that contains series objects or in this case series data arrays
	   *   series: [
	   *     [5, 2, 4, 2, 0]
	   *   ]
	   * };
	   *
	   * // As options we currently only set a static size of 300x200 px
	   * var options = {
	   *   width: '300px',
	   *   height: '200px'
	   * };
	   *
	   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options
	   * new Chartist.Line('.ct-chart', data, options);
	   *
	   * @example
	   * // Use specific interpolation function with configuration from the Chartist.Interpolation module
	   *
	   * var chart = new Chartist.Line('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5],
	   *   series: [
	   *     [1, 1, 8, 1, 7]
	   *   ]
	   * }, {
	   *   lineSmooth: Chartist.Interpolation.cardinal({
	   *     tension: 0.2
	   *   })
	   * });
	   *
	   * @example
	   * // Create a line chart with responsive options
	   *
	   * var data = {
	   *   // A labels array that can contain any sort of values
	   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
	   *   // Our series array that contains series objects or in this case series data arrays
	   *   series: [
	   *     [5, 2, 4, 2, 0]
	   *   ]
	   * };
	   *
	   * // In adition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.
	   * var responsiveOptions = [
	   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {
	   *     showPoint: false,
	   *     axisX: {
	   *       labelInterpolationFnc: function(value) {
	   *         // Will return Mon, Tue, Wed etc. on medium screens
	   *         return value.slice(0, 3);
	   *       }
	   *     }
	   *   }],
	   *   ['screen and (max-width: 640px)', {
	   *     showLine: false,
	   *     axisX: {
	   *       labelInterpolationFnc: function(value) {
	   *         // Will return M, T, W etc. on small screens
	   *         return value[0];
	   *       }
	   *     }
	   *   }]
	   * ];
	   *
	   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);
	   *
	   */
	  function Line(query, data, options, responsiveOptions) {
	    Chartist.Line.super.constructor.call(this,
	      query,
	      data,
	      defaultOptions,
	      Chartist.extend({}, defaultOptions, options),
	      responsiveOptions);
	  }

	  // Creating line chart type in Chartist namespace
	  Chartist.Line = Chartist.Base.extend({
	    constructor: Line,
	    createChart: createChart
	  });

	}(window, document, Chartist));
	;/**
	 * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.
	 *
	 * @module Chartist.Bar
	 */
	/* global Chartist */
	(function(window, document, Chartist){
	  'use strict';

	  /**
	   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.
	   *
	   * @memberof Chartist.Bar
	   */
	  var defaultOptions = {
	    // Options for X-Axis
	    axisX: {
	      // The offset of the chart drawing area to the border of the container
	      offset: 30,
	      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
	      position: 'end',
	      // Allows you to correct label positioning on this axis by positive or negative x and y offset.
	      labelOffset: {
	        x: 0,
	        y: 0
	      },
	      // If labels should be shown or not
	      showLabel: true,
	      // If the axis grid should be drawn or not
	      showGrid: true,
	      // Interpolation function that allows you to intercept the value from the axis label
	      labelInterpolationFnc: Chartist.noop,
	      // This value specifies the minimum width in pixel of the scale steps
	      scaleMinSpace: 30,
	      // Use only integer values (whole numbers) for the scale steps
	      onlyInteger: false
	    },
	    // Options for Y-Axis
	    axisY: {
	      // The offset of the chart drawing area to the border of the container
	      offset: 40,
	      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
	      position: 'start',
	      // Allows you to correct label positioning on this axis by positive or negative x and y offset.
	      labelOffset: {
	        x: 0,
	        y: 0
	      },
	      // If labels should be shown or not
	      showLabel: true,
	      // If the axis grid should be drawn or not
	      showGrid: true,
	      // Interpolation function that allows you to intercept the value from the axis label
	      labelInterpolationFnc: Chartist.noop,
	      // This value specifies the minimum height in pixel of the scale steps
	      scaleMinSpace: 20,
	      // Use only integer values (whole numbers) for the scale steps
	      onlyInteger: false
	    },
	    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
	    width: undefined,
	    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
	    height: undefined,
	    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value
	    high: undefined,
	    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value
	    low: undefined,
	    // Use only integer values (whole numbers) for the scale steps
	    onlyInteger: false,
	    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
	    chartPadding: {
	      top: 15,
	      right: 15,
	      bottom: 5,
	      left: 10
	    },
	    // Specify the distance in pixel of bars in a group
	    seriesBarDistance: 15,
	    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.
	    stackBars: false,
	    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.
	    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.
	    stackMode: 'accumulate',
	    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.
	    horizontalBars: false,
	    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.
	    distributeSeries: false,
	    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
	    reverseData: false,
	    // Override the class names that get used to generate the SVG structure of the chart
	    classNames: {
	      chart: 'ct-chart-bar',
	      horizontalBars: 'ct-horizontal-bars',
	      label: 'ct-label',
	      labelGroup: 'ct-labels',
	      series: 'ct-series',
	      bar: 'ct-bar',
	      grid: 'ct-grid',
	      gridGroup: 'ct-grids',
	      vertical: 'ct-vertical',
	      horizontal: 'ct-horizontal',
	      start: 'ct-start',
	      end: 'ct-end'
	    }
	  };

	  /**
	   * Creates a new chart
	   *
	   */
	  function createChart(options) {
	    var data = {
	      raw: this.data,
	      normalized: options.distributeSeries ? Chartist.getDataArray(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y').map(function(value) {
	        return [value];
	      }) : Chartist.getDataArray(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y')
	    };

	    var highLow;

	    // Create new svg element
	    this.svg = Chartist.createSvg(
	      this.container,
	      options.width,
	      options.height,
	      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')
	    );

	    // Drawing groups in correct order
	    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);
	    var seriesGroup = this.svg.elem('g');
	    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);

	    if(options.stackBars) {
	      // If stacked bars we need to calculate the high low from stacked values from each series
	      var serialSums = Chartist.serialMap(data.normalized, function serialSums() {
	        return Array.prototype.slice.call(arguments).map(function(value) {
	          return value;
	        }).reduce(function(prev, curr) {
	          return {
	            x: prev.x + curr.x || 0,
	            y: prev.y + curr.y || 0
	          };
	        }, {x: 0, y: 0});
	      });

	      highLow = Chartist.getHighLow([serialSums], Chartist.extend({}, options, {
	        referenceValue: 0
	      }), options.horizontalBars ? 'x' : 'y');
	    } else {
	      highLow = Chartist.getHighLow(data.normalized, Chartist.extend({}, options, {
	        referenceValue: 0
	      }), options.horizontalBars ? 'x' : 'y');
	    }
	    // Overrides of high / low from settings
	    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);
	    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);

	    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);

	    var valueAxis,
	      labelAxisTicks,
	      labelAxis,
	      axisX,
	      axisY;

	    // We need to set step count based on some options combinations
	    if(options.distributeSeries && options.stackBars) {
	      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should
	      // use only the first label for the step axis
	      labelAxisTicks = data.raw.labels.slice(0, 1);
	    } else {
	      // If distributed series are enabled but stacked bars aren't, we should use the series labels
	      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array
	      // as the bars are normalized
	      labelAxisTicks = data.raw.labels;
	    }

	    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.
	    if(options.horizontalBars) {
	      if(options.axisX.type === undefined) {
	        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data, chartRect, Chartist.extend({}, options.axisX, {
	          highLow: highLow,
	          referenceValue: 0
	        }));
	      } else {
	        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data, chartRect, Chartist.extend({}, options.axisX, {
	          highLow: highLow,
	          referenceValue: 0
	        }));
	      }

	      if(options.axisY.type === undefined) {
	        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data, chartRect, {
	          ticks: labelAxisTicks
	        });
	      } else {
	        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data, chartRect, options.axisY);
	      }
	    } else {
	      if(options.axisX.type === undefined) {
	        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data, chartRect, {
	          ticks: labelAxisTicks
	        });
	      } else {
	        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data, chartRect, options.axisX);
	      }

	      if(options.axisY.type === undefined) {
	        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data, chartRect, Chartist.extend({}, options.axisY, {
	          highLow: highLow,
	          referenceValue: 0
	        }));
	      } else {
	        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data, chartRect, Chartist.extend({}, options.axisY, {
	          highLow: highLow,
	          referenceValue: 0
	        }));
	      }
	    }

	    // Projected 0 point
	    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));
	    // Used to track the screen coordinates of stacked bars
	    var stackedBarValues = [];

	    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);
	    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);

	    // Draw the series
	    data.raw.series.forEach(function(series, seriesIndex) {
	      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.
	      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;
	      // Half of the period width between vertical grid lines used to position bars
	      var periodHalfLength;
	      // Current series SVG element
	      var seriesElement;

	      // We need to set periodHalfLength based on some options combinations
	      if(options.distributeSeries && !options.stackBars) {
	        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array
	        // which is the series count and divide by 2
	        periodHalfLength = labelAxis.axisLength / data.normalized.length / 2;
	      } else if(options.distributeSeries && options.stackBars) {
	        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis
	        // length by 2
	        periodHalfLength = labelAxis.axisLength / 2;
	      } else {
	        // On regular bar charts we should just use the series length
	        periodHalfLength = labelAxis.axisLength / data.normalized[seriesIndex].length / 2;
	      }

	      // Adding the series group to the series element
	      seriesElement = seriesGroup.elem('g');

	      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written
	      seriesElement.attr({
	        'series-name': series.name,
	        'meta': Chartist.serialize(series.meta)
	      }, Chartist.xmlNs.uri);

	      // Use series class from series data or if not set generate one
	      seriesElement.addClass([
	        options.classNames.series,
	        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))
	      ].join(' '));

	      data.normalized[seriesIndex].forEach(function(value, valueIndex) {
	        var projected,
	          bar,
	          previousStack,
	          labelAxisValueIndex;

	        // We need to set labelAxisValueIndex based on some options combinations
	        if(options.distributeSeries && !options.stackBars) {
	          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection
	          // on the step axis for label positioning
	          labelAxisValueIndex = seriesIndex;
	        } else if(options.distributeSeries && options.stackBars) {
	          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use
	          // 0 for projection on the label step axis
	          labelAxisValueIndex = 0;
	        } else {
	          // On regular bar charts we just use the value index to project on the label step axis
	          labelAxisValueIndex = valueIndex;
	        }

	        // We need to transform coordinates differently based on the chart layout
	        if(options.horizontalBars) {
	          projected = {
	            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized[seriesIndex]),
	            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized[seriesIndex])
	          };
	        } else {
	          projected = {
	            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized[seriesIndex]),
	            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized[seriesIndex])
	          }
	        }

	        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using
	        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using
	        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not
	        // add any automated positioning.
	        if(labelAxis instanceof Chartist.StepAxis) {
	          // Offset to center bar between grid lines, but only if the step axis is not stretched
	          if(!labelAxis.options.stretch) {
	            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);
	          }
	          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used
	          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);
	        }

	        // Enter value in stacked bar values used to remember previous screen value for stacking up bars
	        previousStack = stackedBarValues[valueIndex] || zeroPoint;
	        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);

	        // Skip if value is undefined
	        if(value === undefined) {
	          return;
	        }

	        var positions = {};
	        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];
	        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];

	        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {
	          // Stack mode: accumulate (default)
	          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line
	          // We want backwards compatibility, so the expected fallback without the 'stackMode' option
	          // to be the original behaviour (accumulate)
	          positions[labelAxis.counterUnits.pos + '1'] = previousStack;
	          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];
	        } else {
	          // Draw from the zero line normally
	          // This is also the same code for Stack mode: overlap
	          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;
	          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];
	        }

	        // Limit x and y so that they are within the chart rect
	        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);
	        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);
	        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);
	        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);

	        // Create bar element
	        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({
	          'value': [value.x, value.y].filter(function(v) {
	            return v;
	          }).join(','),
	          'meta': Chartist.getMetaData(series, valueIndex)
	        }, Chartist.xmlNs.uri);

	        this.eventEmitter.emit('draw', Chartist.extend({
	          type: 'bar',
	          value: value,
	          index: valueIndex,
	          meta: Chartist.getMetaData(series, valueIndex),
	          series: series,
	          seriesIndex: seriesIndex,
	          axisX: axisX,
	          axisY: axisY,
	          chartRect: chartRect,
	          group: seriesElement,
	          element: bar
	        }, positions));
	      }.bind(this));
	    }.bind(this));

	    this.eventEmitter.emit('created', {
	      bounds: valueAxis.bounds,
	      chartRect: chartRect,
	      axisX: axisX,
	      axisY: axisY,
	      svg: this.svg,
	      options: options
	    });
	  }

	  /**
	   * This method creates a new bar chart and returns API object that you can use for later changes.
	   *
	   * @memberof Chartist.Bar
	   * @param {String|Node} query A selector query string or directly a DOM element
	   * @param {Object} data The data object that needs to consist of a labels and a series array
	   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
	   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
	   * @return {Object} An object which exposes the API for the created chart
	   *
	   * @example
	   * // Create a simple bar chart
	   * var data = {
	   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
	   *   series: [
	   *     [5, 2, 4, 2, 0]
	   *   ]
	   * };
	   *
	   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.
	   * new Chartist.Bar('.ct-chart', data);
	   *
	   * @example
	   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10
	   * new Chartist.Bar('.ct-chart', {
	   *   labels: [1, 2, 3, 4, 5, 6, 7],
	   *   series: [
	   *     [1, 3, 2, -5, -3, 1, -6],
	   *     [-5, -2, -4, -1, 2, -3, 1]
	   *   ]
	   * }, {
	   *   seriesBarDistance: 12,
	   *   low: -10,
	   *   high: 10
	   * });
	   *
	   */
	  function Bar(query, data, options, responsiveOptions) {
	    Chartist.Bar.super.constructor.call(this,
	      query,
	      data,
	      defaultOptions,
	      Chartist.extend({}, defaultOptions, options),
	      responsiveOptions);
	  }

	  // Creating bar chart type in Chartist namespace
	  Chartist.Bar = Chartist.Base.extend({
	    constructor: Bar,
	    createChart: createChart
	  });

	}(window, document, Chartist));
	;/**
	 * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts
	 *
	 * @module Chartist.Pie
	 */
	/* global Chartist */
	(function(window, document, Chartist) {
	  'use strict';

	  /**
	   * Default options in line charts. Expand the code view to see a detailed list of options with comments.
	   *
	   * @memberof Chartist.Pie
	   */
	  var defaultOptions = {
	    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
	    width: undefined,
	    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
	    height: undefined,
	    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
	    chartPadding: 5,
	    // Override the class names that are used to generate the SVG structure of the chart
	    classNames: {
	      chartPie: 'ct-chart-pie',
	      chartDonut: 'ct-chart-donut',
	      series: 'ct-series',
	      slicePie: 'ct-slice-pie',
	      sliceDonut: 'ct-slice-donut',
	      label: 'ct-label'
	    },
	    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.
	    startAngle: 0,
	    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.
	    total: undefined,
	    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.
	    donut: false,
	    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.
	    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').
	    donutWidth: 60,
	    // If a label should be shown or not
	    showLabel: true,
	    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.
	    labelOffset: 0,
	    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.
	    labelPosition: 'inside',
	    // An interpolation function for the label value
	    labelInterpolationFnc: Chartist.noop,
	    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.
	    labelDirection: 'neutral',
	    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
	    reverseData: false
	  };

	  /**
	   * Determines SVG anchor position based on direction and center parameter
	   *
	   * @param center
	   * @param label
	   * @param direction
	   * @return {string}
	   */
	  function determineAnchorPosition(center, label, direction) {
	    var toTheRight = label.x > center.x;

	    if(toTheRight && direction === 'explode' ||
	      !toTheRight && direction === 'implode') {
	      return 'start';
	    } else if(toTheRight && direction === 'implode' ||
	      !toTheRight && direction === 'explode') {
	      return 'end';
	    } else {
	      return 'middle';
	    }
	  }

	  /**
	   * Creates the pie chart
	   *
	   * @param options
	   */
	  function createChart(options) {
	    var seriesGroups = [],
	      labelsGroup,
	      chartRect,
	      radius,
	      labelRadius,
	      totalDataSum,
	      startAngle = options.startAngle,
	      dataArray = Chartist.getDataArray(this.data, options.reverseData);

	    // Create SVG.js draw
	    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);
	    // Calculate charting rect
	    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);
	    // Get biggest circle radius possible within chartRect
	    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);
	    // Calculate total of all series to get reference value or use total reference from optional options
	    totalDataSum = options.total || dataArray.reduce(function(previousValue, currentValue) {
	      return previousValue + currentValue;
	    }, 0);

	    var donutWidth = Chartist.quantity(options.donutWidth);
	    if (donutWidth.unit === '%') {
	      donutWidth.value *= radius / 100;
	    }

	    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside
	    // Unfortunately this is not possible with the current SVG Spec
	    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html
	    radius -= options.donut ? donutWidth.value / 2  : 0;

	    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,
	    // if regular pie chart it's half of the radius
	    if(options.labelPosition === 'outside' || options.donut) {
	      labelRadius = radius;
	    } else if(options.labelPosition === 'center') {
	      // If labelPosition is center we start with 0 and will later wait for the labelOffset
	      labelRadius = 0;
	    } else {
	      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie
	      // slice
	      labelRadius = radius / 2;
	    }
	    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart
	    labelRadius += options.labelOffset;

	    // Calculate end angle based on total sum and current data value and offset with padding
	    var center = {
	      x: chartRect.x1 + chartRect.width() / 2,
	      y: chartRect.y2 + chartRect.height() / 2
	    };

	    // Check if there is only one non-zero value in the series array.
	    var hasSingleValInSeries = this.data.series.filter(function(val) {
	      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;
	    }).length === 1;

	    //if we need to show labels we create the label group now
	    if(options.showLabel) {
	      labelsGroup = this.svg.elem('g', null, null, true);
	    }

	    // Draw the series
	    // initialize series groups
	    for (var i = 0; i < this.data.series.length; i++) {
	      var series = this.data.series[i];
	      seriesGroups[i] = this.svg.elem('g', null, null, true);

	      // If the series is an object and contains a name or meta data we add a custom attribute
	      seriesGroups[i].attr({
	        'series-name': series.name
	      }, Chartist.xmlNs.uri);

	      // Use series class from series data or if not set generate one
	      seriesGroups[i].addClass([
	        options.classNames.series,
	        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(i))
	      ].join(' '));

	      var endAngle = startAngle + dataArray[i] / totalDataSum * 360;
	      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle
	      // with Z and use 359.99 degrees
	      if(endAngle - startAngle === 360) {
	        endAngle -= 0.01;
	      }

	      var start = Chartist.polarToCartesian(center.x, center.y, radius, startAngle - (i === 0 || hasSingleValInSeries ? 0 : 0.2)),
	        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);

	      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke
	      var path = new Chartist.Svg.Path(!options.donut)
	        .move(end.x, end.y)
	        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);

	      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie
	      if(!options.donut) {
	        path.line(center.x, center.y);
	      }

	      // Create the SVG path
	      // If this is a donut chart we add the donut class, otherwise just a regular slice
	      var pathElement = seriesGroups[i].elem('path', {
	        d: path.stringify()
	      }, options.donut ? options.classNames.sliceDonut : options.classNames.slicePie);

	      // Adding the pie series value to the path
	      pathElement.attr({
	        'value': dataArray[i],
	        'meta': Chartist.serialize(series.meta)
	      }, Chartist.xmlNs.uri);

	      // If this is a donut, we add the stroke-width as style attribute
	      if(options.donut) {
	        pathElement.attr({
	          'style': 'stroke-width: ' + donutWidth.value + 'px'
	        });
	      }

	      // Fire off draw event
	      this.eventEmitter.emit('draw', {
	        type: 'slice',
	        value: dataArray[i],
	        totalDataSum: totalDataSum,
	        index: i,
	        meta: series.meta,
	        series: series,
	        group: seriesGroups[i],
	        element: pathElement,
	        path: path.clone(),
	        center: center,
	        radius: radius,
	        startAngle: startAngle,
	        endAngle: endAngle
	      });

	      // If we need to show labels we need to add the label for this slice now
	      if(options.showLabel) {
	        // Position at the labelRadius distance from center and between start and end angle
	        var labelPosition = Chartist.polarToCartesian(center.x, center.y, labelRadius, startAngle + (endAngle - startAngle) / 2),
	          interpolatedValue = options.labelInterpolationFnc(this.data.labels ? this.data.labels[i] : dataArray[i], i);

	        if(interpolatedValue || interpolatedValue === 0) {
	          var labelElement = labelsGroup.elem('text', {
	            dx: labelPosition.x,
	            dy: labelPosition.y,
	            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)
	          }, options.classNames.label).text('' + interpolatedValue);

	          // Fire off draw event
	          this.eventEmitter.emit('draw', {
	            type: 'label',
	            index: i,
	            group: labelsGroup,
	            element: labelElement,
	            text: '' + interpolatedValue,
	            x: labelPosition.x,
	            y: labelPosition.y
	          });
	        }
	      }

	      // Set next startAngle to current endAngle. Use slight offset so there are no transparent hairline issues
	      // (except for last slice)
	      startAngle = endAngle;
	    }

	    this.eventEmitter.emit('created', {
	      chartRect: chartRect,
	      svg: this.svg,
	      options: options
	    });
	  }

	  /**
	   * This method creates a new pie chart and returns an object that can be used to redraw the chart.
	   *
	   * @memberof Chartist.Pie
	   * @param {String|Node} query A selector query string or directly a DOM element
	   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.
	   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
	   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
	   * @return {Object} An object with a version and an update method to manually redraw the chart
	   *
	   * @example
	   * // Simple pie chart example with four series
	   * new Chartist.Pie('.ct-chart', {
	   *   series: [10, 2, 4, 3]
	   * });
	   *
	   * @example
	   * // Drawing a donut chart
	   * new Chartist.Pie('.ct-chart', {
	   *   series: [10, 2, 4, 3]
	   * }, {
	   *   donut: true
	   * });
	   *
	   * @example
	   * // Using donut, startAngle and total to draw a gauge chart
	   * new Chartist.Pie('.ct-chart', {
	   *   series: [20, 10, 30, 40]
	   * }, {
	   *   donut: true,
	   *   donutWidth: 20,
	   *   startAngle: 270,
	   *   total: 200
	   * });
	   *
	   * @example
	   * // Drawing a pie chart with padding and labels that are outside the pie
	   * new Chartist.Pie('.ct-chart', {
	   *   series: [20, 10, 30, 40]
	   * }, {
	   *   chartPadding: 30,
	   *   labelOffset: 50,
	   *   labelDirection: 'explode'
	   * });
	   *
	   * @example
	   * // Overriding the class names for individual series as well as a name and meta data.
	   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written
	   * // to a ct:meta attribute.
	   * new Chartist.Pie('.ct-chart', {
	   *   series: [{
	   *     value: 20,
	   *     name: 'Series 1',
	   *     className: 'my-custom-class-one',
	   *     meta: 'Meta One'
	   *   }, {
	   *     value: 10,
	   *     name: 'Series 2',
	   *     className: 'my-custom-class-two',
	   *     meta: 'Meta Two'
	   *   }, {
	   *     value: 70,
	   *     name: 'Series 3',
	   *     className: 'my-custom-class-three',
	   *     meta: 'Meta Three'
	   *   }]
	   * });
	   */
	  function Pie(query, data, options, responsiveOptions) {
	    Chartist.Pie.super.constructor.call(this,
	      query,
	      data,
	      defaultOptions,
	      Chartist.extend({}, defaultOptions, options),
	      responsiveOptions);
	  }

	  // Creating pie chart type in Chartist namespace
	  Chartist.Pie = Chartist.Base.extend({
	    constructor: Pie,
	    createChart: createChart,
	    determineAnchorPosition: determineAnchorPosition
	  });

	}(window, document, Chartist));

	return Chartist;

	}));


/***/ },
/* 324 */
/***/ function(module, exports) {

	module.exports = "[\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Aruba\",\n\t\t\t\"official\": \"Aruba\",\n\t\t\t\"native\": {\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Aruba\",\n\t\t\t\t\t\"common\": \"Aruba\"\n\t\t\t\t},\n\t\t\t\t\"pap\": {\n\t\t\t\t\t\"official\": \"Aruba\",\n\t\t\t\t\t\"common\": \"Aruba\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".aw\"],\n\t\t\"cca2\": \"AW\",\n\t\t\"ccn3\": \"533\",\n\t\t\"cca3\": \"ABW\",\n\t\t\"cioc\": \"ARU\",\n\t\t\"currency\": [\"AWG\"],\n\t\t\"callingCode\": [\"297\"],\n\t\t\"capital\": \"Oranjestad\",\n\t\t\"altSpellings\": [\"AW\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"nld\": \"Dutch\",\n\t\t\t\"pap\": \"Papiamento\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"fra\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"hrv\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"ita\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30eb\\u30d0\", \"common\": \"\\u30a2\\u30eb\\u30d0\"},\n\t\t\t\"nld\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"por\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u0440\\u0443\\u0431\\u0430\", \"common\": \"\\u0410\\u0440\\u0443\\u0431\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Aruba\", \"common\": \"Aruba\"},\n\t\t\t\"fin\": {\"official\": \"Aruba\", \"common\": \"Aruba\"}\n\t\t},\n\t\t\"latlng\": [12.5, -69.96666666],\n\t\t\"demonym\": \"Aruban\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 180\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Afghanistan\",\n\t\t\t\"official\": \"Islamic Republic of Afghanistan\",\n\t\t\t\"native\": {\n\t\t\t\t\"prs\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u06cc \\u0627\\u0633\\u0644\\u0627\\u0645\\u06cc \\u0627\\u0641\\u063a\\u0627\\u0646\\u0633\\u062a\\u0627\\u0646\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0641\\u063a\\u0627\\u0646\\u0633\\u062a\\u0627\\u0646\"\n\t\t\t\t},\n\t\t\t\t\"pus\": {\n\t\t\t\t\t\"official\": \"\\u062f \\u0627\\u0641\\u063a\\u0627\\u0646\\u0633\\u062a\\u0627\\u0646 \\u0627\\u0633\\u0644\\u0627\\u0645\\u064a \\u062c\\u0645\\u0647\\u0648\\u0631\\u06cc\\u062a\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0641\\u063a\\u0627\\u0646\\u0633\\u062a\\u0627\\u0646\"\n\t\t\t\t},\n\t\t\t\t\"tuk\": {\n\t\t\t\t\t\"official\": \"Owganystan Yslam Respublikasy\",\n\t\t\t\t\t\"common\": \"Owganystan\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".af\"],\n\t\t\"cca2\": \"AF\",\n\t\t\"ccn3\": \"004\",\n\t\t\"cca3\": \"AFG\",\n\t\t\"cioc\": \"AFG\",\n\t\t\"currency\": [\"AFN\"],\n\t\t\"callingCode\": [\"93\"],\n\t\t\"capital\": \"Kabul\",\n\t\t\"altSpellings\": [\"AF\", \"Af\\u0121\\u0101nist\\u0101n\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"prs\": \"Dari\",\n\t\t\t\"pus\": \"Pashto\",\n\t\t\t\"tuk\": \"Turkmen\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Islamic Republic of Afghanistan\", \"common\": \"Affganistan\"},\n\t\t\t\"deu\": {\"official\": \"Islamische Republik Afghanistan\", \"common\": \"Afghanistan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique islamique d'Afghanistan\", \"common\": \"Afghanistan\"},\n\t\t\t\"hrv\": {\"official\": \"Islamska Republika Afganistan\", \"common\": \"Afganistan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica islamica dell'Afghanistan\", \"common\": \"Afghanistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30d5\\u30ac\\u30cb\\u30b9\\u30bf\\u30f3\\u00b7\\u30a4\\u30b9\\u30e9\\u30e0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30d5\\u30ac\\u30cb\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Islamitische Republiek Afghanistan\", \"common\": \"Afghanistan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Isl\\u00e2mica do Afeganist\\u00e3o\", \"common\": \"Afeganist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0441\\u043b\\u0430\\u043c\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u0444\\u0433\\u0430\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u0410\\u0444\\u0433\\u0430\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Isl\\u00e1mica de Afganist\\u00e1n\", \"common\": \"Afganist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Afganistanin islamilainen tasavalta\", \"common\": \"Afganistan\"}\n\t\t},\n\t\t\"latlng\": [33, 65],\n\t\t\"demonym\": \"Afghan\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"IRN\", \"PAK\", \"TKM\", \"UZB\", \"TJK\", \"CHN\"],\n\t\t\"area\": 652230\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Angola\",\n\t\t\t\"official\": \"Republic of Angola\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Angola\",\n\t\t\t\t\t\"common\": \"Angola\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ao\"],\n\t\t\"cca2\": \"AO\",\n\t\t\"ccn3\": \"024\",\n\t\t\"cca3\": \"AGO\",\n\t\t\"cioc\": \"ANG\",\n\t\t\"currency\": [\"AOA\"],\n\t\t\"callingCode\": [\"244\"],\n\t\t\"capital\": \"Luanda\",\n\t\t\"altSpellings\": [\"AO\", \"Rep\\u00fablica de Angola\", \"\\u0281\\u025bpublika de an'\\u0261\\u0254la\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Angola\", \"common\": \"Angola\"},\n\t\t\t\"deu\": {\"official\": \"Republik Angola\", \"common\": \"Angola\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Angola\", \"common\": \"Angola\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Angola\", \"common\": \"Angola\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'Angola\", \"common\": \"Angola\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30f3\\u30b4\\u30e9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30f3\\u30b4\\u30e9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Angola\", \"common\": \"Angola\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Angola\", \"common\": \"Angola\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u043d\\u0433\\u043e\\u043b\\u0430\", \"common\": \"\\u0410\\u043d\\u0433\\u043e\\u043b\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Angola\", \"common\": \"Angola\"},\n\t\t\t\"fin\": {\"official\": \"Angolan tasavalta\", \"common\": \"Angola\"}\n\t\t},\n\t\t\"latlng\": [-12.5, 18.5],\n\t\t\"demonym\": \"Angolan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"COG\", \"COD\", \"ZMB\", \"NAM\"],\n\t\t\"area\": 1246700\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Anguilla\",\n\t\t\t\"official\": \"Anguilla\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Anguilla\",\n\t\t\t\t\t\"common\": \"Anguilla\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ai\"],\n\t\t\"cca2\": \"AI\",\n\t\t\"ccn3\": \"660\",\n\t\t\"cca3\": \"AIA\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1264\"],\n\t\t\"capital\": \"The Valley\",\n\t\t\"altSpellings\": [\"AI\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"},\n\t\t\t\"fra\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"},\n\t\t\t\"hrv\": {\"official\": \"Anguilla\", \"common\": \"Angvila\"},\n\t\t\t\"ita\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30f3\\u30b0\\u30a3\\u30e9\", \"common\": \"\\u30a2\\u30f3\\u30ae\\u30e9\"},\n\t\t\t\"nld\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"},\n\t\t\t\"por\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u043d\\u0433\\u0438\\u043b\\u044c\\u044f\", \"common\": \"\\u0410\\u043d\\u0433\\u0438\\u043b\\u044c\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Anguila\", \"common\": \"Anguilla\"},\n\t\t\t\"fin\": {\"official\": \"Anguilla\", \"common\": \"Anguilla\"}\n\t\t},\n\t\t\"latlng\": [18.25, -63.16666666],\n\t\t\"demonym\": \"Anguillian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 91\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"\\u00c5land Islands\",\n\t\t\t\"official\": \"\\u00c5land Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"swe\": {\n\t\t\t\t\t\"official\": \"Landskapet \\u00c5land\",\n\t\t\t\t\t\"common\": \"\\u00c5land\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ax\"],\n\t\t\"cca2\": \"AX\",\n\t\t\"ccn3\": \"248\",\n\t\t\"cca3\": \"ALA\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"358\"],\n\t\t\"capital\": \"Mariehamn\",\n\t\t\"altSpellings\": [\"AX\", \"Aaland\", \"Aland\", \"Ahvenanmaa\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"swe\": \"Swedish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"\\u00c5land-Inseln\", \"common\": \"\\u00c5land\"},\n\t\t\t\"fra\": {\"official\": \"Ahvenanmaa\", \"common\": \"Ahvenanmaa\"},\n\t\t\t\"hrv\": {\"official\": \"Aland Islands\", \"common\": \"\\u00c5landski otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole \\u00c5land\", \"common\": \"Isole Aland\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30aa\\u30fc\\u30e9\\u30f3\\u30c9\\u8af8\\u5cf6\", \"common\": \"\\u30aa\\u30fc\\u30e9\\u30f3\\u30c9\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"\\u00c5land eilanden\", \"common\": \"\\u00c5landeilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas \\u00c5land\", \"common\": \"Al\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0410\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas \\u00c5land\", \"common\": \"Alandia\"},\n\t\t\t\"fin\": {\"official\": \"Ahvenanmaan maakunta\", \"common\": \"Ahvenanmaa\"}\n\t\t},\n\t\t\"latlng\": [60.116667, 19.9],\n\t\t\"demonym\": \"\\u00c5landish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 1580\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Albania\",\n\t\t\t\"official\": \"Republic of Albania\",\n\t\t\t\"native\": {\n\t\t\t\t\"sqi\": {\n\t\t\t\t\t\"official\": \"Republika e Shqip\\u00ebris\\u00eb\",\n\t\t\t\t\t\"common\": \"Shqip\\u00ebria\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".al\"],\n\t\t\"cca2\": \"AL\",\n\t\t\"ccn3\": \"008\",\n\t\t\"cca3\": \"ALB\",\n\t\t\"cioc\": \"ALB\",\n\t\t\"currency\": [\"ALL\"],\n\t\t\"callingCode\": [\"355\"],\n\t\t\"capital\": \"Tirana\",\n\t\t\"altSpellings\": [\"AL\", \"Shqip\\u00ebri\", \"Shqip\\u00ebria\", \"Shqipnia\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"sqi\": \"Albanian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Albania\", \"common\": \"Albania\"},\n\t\t\t\"deu\": {\"official\": \"Republik Albanien\", \"common\": \"Albanien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Albanie\", \"common\": \"Albanie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Albanija\", \"common\": \"Albanija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica d'Albania\", \"common\": \"Albania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30eb\\u30d0\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30eb\\u30d0\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Albani\\u00eb\", \"common\": \"Albani\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Alb\\u00e2nia\", \"common\": \"Alb\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u043b\\u0431\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u0410\\u043b\\u0431\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Albania\", \"common\": \"Albania\"},\n\t\t\t\"fin\": {\"official\": \"Albanian tasavalta\", \"common\": \"Albania\"}\n\t\t},\n\t\t\"latlng\": [41, 20],\n\t\t\"demonym\": \"Albanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MNE\", \"GRC\", \"MKD\", \"KOS\"],\n\t\t\"area\": 28748\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Andorra\",\n\t\t\t\"official\": \"Principality of Andorra\",\n\t\t\t\"native\": {\n\t\t\t\t\"cat\": {\n\t\t\t\t\t\"official\": \"Principat d'Andorra\",\n\t\t\t\t\t\"common\": \"Andorra\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ad\"],\n\t\t\"cca2\": \"AD\",\n\t\t\"ccn3\": \"020\",\n\t\t\"cca3\": \"AND\",\n\t\t\"cioc\": \"AND\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"376\"],\n\t\t\"capital\": \"Andorra la Vella\",\n\t\t\"altSpellings\": [\"AD\", \"Principality of Andorra\", \"Principat d'Andorra\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"cat\": \"Catalan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Principality of Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"deu\": {\"official\": \"F\\u00fcrstentum Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"fra\": {\"official\": \"Principaut\\u00e9 d'Andorre\", \"common\": \"Andorre\"},\n\t\t\t\"hrv\": {\"official\": \"Kne\\u017eevina Andora\", \"common\": \"Andora\"},\n\t\t\t\"ita\": {\"official\": \"Principato di Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30f3\\u30c9\\u30e9\\u516c\\u56fd\", \"common\": \"\\u30a2\\u30f3\\u30c9\\u30e9\"},\n\t\t\t\"nld\": {\"official\": \"Prinsdom Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"por\": {\"official\": \"Principado de Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043d\\u044f\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0410\\u043d\\u0434\\u043e\\u0440\\u0440\\u0430\", \"common\": \"\\u0410\\u043d\\u0434\\u043e\\u0440\\u0440\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Principado de Andorra\", \"common\": \"Andorra\"},\n\t\t\t\"fin\": {\"official\": \"Andorran ruhtinaskunta\", \"common\": \"Andorra\"}\n\t\t},\n\t\t\"latlng\": [42.5, 1.5],\n\t\t\"demonym\": \"Andorran\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"FRA\", \"ESP\"],\n\t\t\"area\": 468\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"United Arab Emirates\",\n\t\t\t\"official\": \"United Arab Emirates\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\",\n\t\t\t\t\t\"common\": \"\\u062f\\u0648\\u0644\\u0629 \\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ae\", \"\\u0627\\u0645\\u0627\\u0631\\u0627\\u062a.\"],\n\t\t\"cca2\": \"AE\",\n\t\t\"ccn3\": \"784\",\n\t\t\"cca3\": \"ARE\",\n\t\t\"cioc\": \"UAE\",\n\t\t\"currency\": [\"AED\"],\n\t\t\"callingCode\": [\"971\"],\n\t\t\"capital\": \"Abu Dhabi\",\n\t\t\"altSpellings\": [\"AE\", \"UAE\", \"Emirates\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vereinigte Arabische Emirate\", \"common\": \"Vereinigte Arabische Emirate\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9mirats arabes unis\", \"common\": \"\\u00c9mirats arabes unis\"},\n\t\t\t\"hrv\": {\"official\": \"Ujedinjeni Arapski Emirati\", \"common\": \"Ujedinjeni Arapski Emirati\"},\n\t\t\t\"ita\": {\"official\": \"Emirati Arabi Uniti\", \"common\": \"Emirati Arabi Uniti\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30e9\\u30d6\\u9996\\u9577\\u56fd\\u9023\\u90a6\", \"common\": \"\\u30a2\\u30e9\\u30d6\\u9996\\u9577\\u56fd\\u9023\\u90a6\"},\n\t\t\t\"nld\": {\"official\": \"Verenigde Arabische Emiraten\", \"common\": \"Verenigde Arabische Emiraten\"},\n\t\t\t\"por\": {\"official\": \"Emirados \\u00c1rabes Unidos\", \"common\": \"Emirados \\u00c1rabes Unidos\"},\n\t\t\t\"rus\": {\"official\": \"\\u041e\\u0431\\u044a\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0410\\u0440\\u0430\\u0431\\u0441\\u043a\\u0438\\u0435 \\u042d\\u043c\\u0438\\u0440\\u0430\\u0442\\u044b\", \"common\": \"\\u041e\\u0431\\u044a\\u0435\\u0434\\u0438\\u043d\\u0451\\u043d\\u043d\\u044b\\u0435 \\u0410\\u0440\\u0430\\u0431\\u0441\\u043a\\u0438\\u0435 \\u042d\\u043c\\u0438\\u0440\\u0430\\u0442\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"Emiratos \\u00c1rabes Unidos\", \"common\": \"Emiratos \\u00c1rabes Unidos\"},\n\t\t\t\"fin\": {\"official\": \"Yhdistyneet arabiemiirikunnat\", \"common\": \"Arabiemiraatit\"}\n\t\t},\n\t\t\"latlng\": [24, 54],\n\t\t\"demonym\": \"Emirati\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"OMN\", \"SAU\"],\n\t\t\"area\": 83600\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Argentina\",\n\t\t\t\"official\": \"Argentine Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"grn\": {\n\t\t\t\t\t\"official\": \"Argentine Republic\",\n\t\t\t\t\t\"common\": \"Argentina\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Argentina\",\n\t\t\t\t\t\"common\": \"Argentina\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ar\"],\n\t\t\"cca2\": \"AR\",\n\t\t\"ccn3\": \"032\",\n\t\t\"cca3\": \"ARG\",\n\t\t\"cioc\": \"ARG\",\n\t\t\"currency\": [\"ARS\"],\n\t\t\"callingCode\": [\"54\"],\n\t\t\"capital\": \"Buenos Aires\",\n\t\t\"altSpellings\": [\"AR\", \"Argentine Republic\", \"Rep\\u00fablica Argentina\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"grn\": \"Guaran\\u00ed\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Argentine Republic\", \"common\": \"Ariannin\"},\n\t\t\t\"deu\": {\"official\": \"Argentinische Republik\", \"common\": \"Argentinien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique argentine\", \"common\": \"Argentine\"},\n\t\t\t\"hrv\": {\"official\": \"Argentinski Republika\", \"common\": \"Argentina\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Argentina\", \"common\": \"Argentina\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30eb\\u30bc\\u30f3\\u30c1\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30eb\\u30bc\\u30f3\\u30c1\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Argentijnse Republiek\", \"common\": \"Argentini\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Argentina\", \"common\": \"Argentina\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u0440\\u0433\\u0435\\u043d\\u0442\\u0438\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0410\\u0440\\u0433\\u0435\\u043d\\u0442\\u0438\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Argentina\", \"common\": \"Argentina\"},\n\t\t\t\"fin\": {\"official\": \"Argentiinan tasavalta\", \"common\": \"Argentiina\"}\n\t\t},\n\t\t\"latlng\": [-34, -64],\n\t\t\"demonym\": \"Argentinean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BOL\", \"BRA\", \"CHL\", \"PRY\", \"URY\"],\n\t\t\"area\": 2780400\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Armenia\",\n\t\t\t\"official\": \"Republic of Armenia\",\n\t\t\t\"native\": {\n\t\t\t\t\"hye\": {\n\t\t\t\t\t\"official\": \"\\u0540\\u0561\\u0575\\u0561\\u057d\\u057f\\u0561\\u0576\\u056b \\u0540\\u0561\\u0576\\u0580\\u0561\\u057a\\u0565\\u057f\\u0578\\u0582\\u0569\\u0575\\u0578\\u0582\\u0576\",\n\t\t\t\t\t\"common\": \"\\u0540\\u0561\\u0575\\u0561\\u057d\\u057f\\u0561\\u0576\"\n\t\t\t\t},\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u0440\\u043c\\u0435\\u043d\\u0438\\u044f\",\n\t\t\t\t\t\"common\": \"\\u0410\\u0440\\u043c\\u0435\\u043d\\u0438\\u044f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".am\"],\n\t\t\"cca2\": \"AM\",\n\t\t\"ccn3\": \"051\",\n\t\t\"cca3\": \"ARM\",\n\t\t\"cioc\": \"ARM\",\n\t\t\"currency\": [\"AMD\"],\n\t\t\"callingCode\": [\"374\"],\n\t\t\"capital\": \"Yerevan\",\n\t\t\"altSpellings\": [\"AM\", \"Hayastan\", \"Republic of Armenia\", \"\\u0540\\u0561\\u0575\\u0561\\u057d\\u057f\\u0561\\u0576\\u056b \\u0540\\u0561\\u0576\\u0580\\u0561\\u057a\\u0565\\u057f\\u0578\\u0582\\u0569\\u0575\\u0578\\u0582\\u0576\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"hye\": \"Armenian\",\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Armenia\", \"common\": \"Armenia\"},\n\t\t\t\"deu\": {\"official\": \"Republik Armenien\", \"common\": \"Armenien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Arm\\u00e9nie\", \"common\": \"Arm\\u00e9nie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Armenija\", \"common\": \"Armenija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Armenia\", \"common\": \"Armenia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30eb\\u30e1\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30eb\\u30e1\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Armeni\\u00eb\", \"common\": \"Armeni\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Arm\\u00e9nia\", \"common\": \"Arm\\u00e9nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u0440\\u043c\\u0435\\u043d\\u0438\\u044f\", \"common\": \"\\u0410\\u0440\\u043c\\u0435\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Armenia\", \"common\": \"Armenia\"},\n\t\t\t\"fin\": {\"official\": \"Armenian tasavalta\", \"common\": \"Armenia\"}\n\t\t},\n\t\t\"latlng\": [40, 45],\n\t\t\"demonym\": \"Armenian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AZE\", \"GEO\", \"IRN\", \"TUR\"],\n\t\t\"area\": 29743\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"American Samoa\",\n\t\t\t\"official\": \"American Samoa\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"American Samoa\",\n\t\t\t\t\t\"common\": \"American Samoa\"\n\t\t\t\t},\n\t\t\t\t\"smo\": {\n\t\t\t\t\t\"official\": \"S\\u0101moa Amelika\",\n\t\t\t\t\t\"common\": \"S\\u0101moa Amelika\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".as\"],\n\t\t\"cca2\": \"AS\",\n\t\t\"ccn3\": \"016\",\n\t\t\"cca3\": \"ASM\",\n\t\t\"cioc\": \"ASA\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1684\"],\n\t\t\"capital\": \"Pago Pago\",\n\t\t\"altSpellings\": [\"AS\", \"Amerika S\\u0101moa\", \"Amelika S\\u0101moa\", \"S\\u0101moa Amelika\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"smo\": \"Samoan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Amerikanisch-Samoa\", \"common\": \"Amerikanisch-Samoa\"},\n\t\t\t\"fra\": {\"official\": \"Samoa am\\u00e9ricaines\", \"common\": \"Samoa am\\u00e9ricaines\"},\n\t\t\t\"hrv\": {\"official\": \"ameri\\u010dka Samoa\", \"common\": \"Ameri\\u010dka Samoa\"},\n\t\t\t\"ita\": {\"official\": \"Samoa americane\", \"common\": \"Samoa Americane\"},\n\t\t\t\"jpn\": {\"official\": \"\\u7c73\\u30b5\\u30e2\\u30a2\", \"common\": \"\\u30a2\\u30e1\\u30ea\\u30ab\\u9818\\u30b5\\u30e2\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Amerikaans Samoa\", \"common\": \"Amerikaans Samoa\"},\n\t\t\t\"por\": {\"official\": \"Samoa americana\", \"common\": \"Samoa Americana\"},\n\t\t\t\"rus\": {\"official\": \"\\u0430\\u043c\\u0435\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u043e\\u0435 \\u0421\\u0430\\u043c\\u043e\\u0430\", \"common\": \"\\u0410\\u043c\\u0435\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u043e\\u0435 \\u0421\\u0430\\u043c\\u043e\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Samoa Americana\", \"common\": \"Samoa Americana\"},\n\t\t\t\"fin\": {\"official\": \"Amerikan Samoa\", \"common\": \"Amerikan Samoa\"}\n\t\t},\n\t\t\"latlng\": [-14.33333333, -170],\n\t\t\"demonym\": \"American Samoan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 199\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Antarctica\",\n\t\t\t\"official\": \"Antarctica\",\n\t\t\t\"native\": {}\n\t\t},\n\t\t\"tld\": [\".aq\"],\n\t\t\"cca2\": \"AQ\",\n\t\t\"ccn3\": \"010\",\n\t\t\"cca3\": \"ATA\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [],\n\t\t\"callingCode\": [],\n\t\t\"capital\": \"\",\n\t\t\"altSpellings\": [\"AQ\"],\n\t\t\"region\": \"\",\n\t\t\"subregion\": \"\",\n\t\t\"languages\": {},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Antarctica\", \"common\": \"Antarctica\"},\n\t\t\t\"deu\": {\"official\": \"Antarktika\", \"common\": \"Antarktis\"},\n\t\t\t\"fra\": {\"official\": \"Antarctique\", \"common\": \"Antarctique\"},\n\t\t\t\"hrv\": {\"official\": \"Antarktika\", \"common\": \"Antarktika\"},\n\t\t\t\"ita\": {\"official\": \"Antartide\", \"common\": \"Antartide\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5357\\u6975\\u5927\\u9678\", \"common\": \"\\u5357\\u6975\"},\n\t\t\t\"nld\": {\"official\": \"Antarctica\", \"common\": \"Antarctica\"},\n\t\t\t\"por\": {\"official\": \"Ant\\u00e1rtica\", \"common\": \"Ant\\u00e1rtida\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u043d\\u0442\\u0430\\u0440\\u043a\\u0442\\u0438\\u0434\\u0430\", \"common\": \"\\u0410\\u043d\\u0442\\u0430\\u0440\\u043a\\u0442\\u0438\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Ant\\u00e1rtida\", \"common\": \"Ant\\u00e1rtida\"},\n\t\t\t\"fin\": {\"official\": \"Etel\\u00e4manner\", \"common\": \"Etel\\u00e4manner\"}\n\t\t},\n\t\t\"latlng\": [-90, 0],\n\t\t\"demonym\": \"Antarctican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 14000000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"French Southern and Antarctic Lands\",\n\t\t\t\"official\": \"Territory of the French Southern and Antarctic Lands\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Territoire des Terres australes et antarctiques fran\\u00e7aises\",\n\t\t\t\t\t\"common\": \"Terres australes et antarctiques fran\\u00e7aises\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tf\"],\n\t\t\"cca2\": \"TF\",\n\t\t\"ccn3\": \"260\",\n\t\t\"cca3\": \"ATF\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [],\n\t\t\"capital\": \"Port-aux-Fran\\u00e7ais\",\n\t\t\"altSpellings\": [\"TF\", \"French Southern Territories\"],\n\t\t\"region\": \"\",\n\t\t\"subregion\": \"\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gebiet der Franz\\u00f6sisch S\\u00fcd-und Antarktisgebiete\", \"common\": \"Franz\\u00f6sische S\\u00fcd-und Antarktisgebiete\"},\n\t\t\t\"fra\": {\"official\": \"Territoire des Terres australes et antarctiques fran\\u00e7aises\", \"common\": \"Terres australes et antarctiques fran\\u00e7aises\"},\n\t\t\t\"hrv\": {\"official\": \"Teritoriju Francuski ju\\u017eni i antarkti\\u010dki teritoriji\", \"common\": \"Francuski ju\\u017eni i antarkti\\u010dki teritoriji\"},\n\t\t\t\"ita\": {\"official\": \"Territorio della australi e antartiche francesi Terre\", \"common\": \"Territori Francesi del Sud\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\u5357\\u65b9\\u00b7\\u5357\\u6975\\u5730\\u57df\\u306e\\u9818\\u571f\", \"common\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\u5357\\u65b9\\u30fb\\u5357\\u6975\\u5730\\u57df\"},\n\t\t\t\"nld\": {\"official\": \"Grondgebied van de Franse Zuidelijke en Antarctische gebieden\", \"common\": \"Franse Gebieden in de zuidelijke Indische Oceaan\"},\n\t\t\t\"por\": {\"official\": \"Territ\\u00f3rio do Sul e Ant\\u00e1rtica Francesa\", \"common\": \"Terras Austrais e Ant\\u00e1rticas Francesas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0438\\u0435 \\u042e\\u0436\\u043d\\u044b\\u0435 \\u0438 \\u0410\\u043d\\u0442\\u0430\\u0440\\u043a\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0435 \\u0437\\u0435\\u043c\\u043b\\u0438\", \"common\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0438\\u0435 \\u042e\\u0436\\u043d\\u044b\\u0435 \\u0438 \\u0410\\u043d\\u0442\\u0430\\u0440\\u043a\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0435 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Territorio del Franc\\u00e9s Tierras australes y ant\\u00e1rticas\", \"common\": \"Tierras Australes y Ant\\u00e1rticas Francesas\"},\n\t\t\t\"fin\": {\"official\": \"Ranskan etel\\u00e4iset ja antarktiset alueet\", \"common\": \"Ranskan etel\\u00e4iset ja antarktiset alueet\"}\n\t\t},\n\t\t\"latlng\": [-49.25, 69.167],\n\t\t\"demonym\": \"French\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 7747\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Antigua and Barbuda\",\n\t\t\t\"official\": \"Antigua and Barbuda\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Antigua and Barbuda\",\n\t\t\t\t\t\"common\": \"Antigua and Barbuda\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ag\"],\n\t\t\"cca2\": \"AG\",\n\t\t\"ccn3\": \"028\",\n\t\t\"cca3\": \"ATG\",\n\t\t\"cioc\": \"ANT\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1268\"],\n\t\t\"capital\": \"Saint John's\",\n\t\t\"altSpellings\": [\"AG\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Antigua and Barbuda\", \"common\": \"Antigwa a Barbiwda\"},\n\t\t\t\"deu\": {\"official\": \"Antigua und Barbuda\", \"common\": \"Antigua und Barbuda\"},\n\t\t\t\"fra\": {\"official\": \"Antigua -et-Barbuda\", \"common\": \"Antigua-et-Barbuda\"},\n\t\t\t\"hrv\": {\"official\": \"Antigva i Barbuda\", \"common\": \"Antigva i Barbuda\"},\n\t\t\t\"ita\": {\"official\": \"Antigua e Barbuda\", \"common\": \"Antigua e Barbuda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30f3\\u30c1\\u30b0\\u30a2\\u30d0\\u30fc\\u30d6\\u30fc\\u30c0\", \"common\": \"\\u30a2\\u30f3\\u30c6\\u30a3\\u30b0\\u30a2\\u30fb\\u30d0\\u30fc\\u30d6\\u30fc\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Antigua en Barbuda\", \"common\": \"Antigua en Barbuda\"},\n\t\t\t\"por\": {\"official\": \"Antigua e Barbuda\", \"common\": \"Ant\\u00edgua e Barbuda\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u043d\\u0442\\u0438\\u0433\\u0443\\u0430 \\u0438 \\u0411\\u0430\\u0440\\u0431\\u0443\\u0434\\u0430\", \"common\": \"\\u0410\\u043d\\u0442\\u0438\\u0433\\u0443\\u0430 \\u0438 \\u0411\\u0430\\u0440\\u0431\\u0443\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Antigua y Barbuda\", \"common\": \"Antigua y Barbuda\"},\n\t\t\t\"fin\": {\"official\": \"Antigua ja Barbuda\", \"common\": \"Antigua ja Barbuda\"}\n\t\t},\n\t\t\"latlng\": [17.05, -61.8],\n\t\t\"demonym\": \"Antiguan, Barbudan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 442\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Australia\",\n\t\t\t\"official\": \"Commonwealth of Australia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Commonwealth of Australia\",\n\t\t\t\t\t\"common\": \"Australia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".au\"],\n\t\t\"cca2\": \"AU\",\n\t\t\"ccn3\": \"036\",\n\t\t\"cca3\": \"AUS\",\n\t\t\"cioc\": \"AUS\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"61\"],\n\t\t\"capital\": \"Canberra\",\n\t\t\"altSpellings\": [\"AU\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Australia and New Zealand\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Commonwealth of Australia\", \"common\": \"Awstralia\"},\n\t\t\t\"deu\": {\"official\": \"Commonwealth Australien\", \"common\": \"Australien\"},\n\t\t\t\"fra\": {\"official\": \"Australie\", \"common\": \"Australie\"},\n\t\t\t\"hrv\": {\"official\": \"Commonwealth of Australia\", \"common\": \"Australija\"},\n\t\t\t\"ita\": {\"official\": \"Commonwealth dell'Australia\", \"common\": \"Australia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30aa\\u30fc\\u30b9\\u30c8\\u30e9\\u30ea\\u30a2\\u9023\\u90a6\", \"common\": \"\\u30aa\\u30fc\\u30b9\\u30c8\\u30e9\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Gemenebest van Australi\\u00eb\", \"common\": \"Australi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Comunidade da Austr\\u00e1lia\", \"common\": \"Austr\\u00e1lia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0434\\u0440\\u0443\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0410\\u0432\\u0441\\u0442\\u0440\\u0430\\u043b\\u0438\\u0438\", \"common\": \"\\u0410\\u0432\\u0441\\u0442\\u0440\\u0430\\u043b\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Mancomunidad de Australia\", \"common\": \"Australia\"},\n\t\t\t\"fin\": {\"official\": \"Australian liittovaltio\", \"common\": \"Australia\"}\n\t\t},\n\t\t\"latlng\": [-27, 133],\n\t\t\"demonym\": \"Australian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 7692024\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Austria\",\n\t\t\t\"official\": \"Republic of Austria\",\n\t\t\t\"native\": {\n\t\t\t\t\"bar\": {\n\t\t\t\t\t\"official\": \"Republik \\u00d6sterreich\",\n\t\t\t\t\t\"common\": \"\\u00d6sterreich\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".at\"],\n\t\t\"cca2\": \"AT\",\n\t\t\"ccn3\": \"040\",\n\t\t\"cca3\": \"AUT\",\n\t\t\"cioc\": \"AUT\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"43\"],\n\t\t\"capital\": \"Vienna\",\n\t\t\"altSpellings\": [\"AT\", \"Osterreich\", \"Oesterreich\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"bar\": \"Austro-Bavarian German\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Austria\", \"common\": \"Awstria\"},\n\t\t\t\"deu\": {\"official\": \"Republik \\u00d6sterreich\", \"common\": \"\\u00d6sterreich\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Autriche\", \"common\": \"Autriche\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Austrija\", \"common\": \"Austrija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica d'Austria\", \"common\": \"Austria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30aa\\u30fc\\u30b9\\u30c8\\u30ea\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30aa\\u30fc\\u30b9\\u30c8\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Oostenrijk\", \"common\": \"Oostenrijk\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da \\u00c1ustria\", \"common\": \"\\u00c1ustria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u0432\\u0441\\u0442\\u0440\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0410\\u0432\\u0441\\u0442\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Austria\", \"common\": \"Austria\"},\n\t\t\t\"fin\": {\"official\": \"It\\u00e4vallan tasavalta\", \"common\": \"It\\u00e4valta\"}\n\t\t},\n\t\t\"latlng\": [47.33333333, 13.33333333],\n\t\t\"demonym\": \"Austrian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CZE\", \"DEU\", \"HUN\", \"ITA\", \"LIE\", \"SVK\", \"SVN\", \"CHE\"],\n\t\t\"area\": 83871\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Azerbaijan\",\n\t\t\t\"official\": \"Republic of Azerbaijan\",\n\t\t\t\"native\": {\n\t\t\t\t\"aze\": {\n\t\t\t\t\t\"official\": \"Az\\u0259rbaycan Respublikas\\u0131\",\n\t\t\t\t\t\"common\": \"Az\\u0259rbaycan\"\n\t\t\t\t},\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0410\\u0437\\u0435\\u0440\\u0431\\u0430\\u0439\\u0434\\u0436\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0410\\u0437\\u0435\\u0440\\u0431\\u0430\\u0439\\u0434\\u0436\\u0430\\u043d\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".az\"],\n\t\t\"cca2\": \"AZ\",\n\t\t\"ccn3\": \"031\",\n\t\t\"cca3\": \"AZE\",\n\t\t\"cioc\": \"AZE\",\n\t\t\"currency\": [\"AZN\"],\n\t\t\"callingCode\": [\"994\"],\n\t\t\"capital\": \"Baku\",\n\t\t\"altSpellings\": [\"AZ\", \"Republic of Azerbaijan\", \"Az\\u0259rbaycan Respublikas\\u0131\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"aze\": \"Azerbaijani\",\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Azerbaijan\", \"common\": \"Aserbaijan\"},\n\t\t\t\"deu\": {\"official\": \"Republik Aserbaidschan\", \"common\": \"Aserbaidschan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Azerba\\u00efdjan\", \"common\": \"Azerba\\u00efdjan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Azerbajd\\u017ean\", \"common\": \"Azerbajd\\u017ean\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'Azerbaigian\", \"common\": \"Azerbaijan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30bc\\u30eb\\u30d0\\u30a4\\u30b8\\u30e3\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30bc\\u30eb\\u30d0\\u30a4\\u30b8\\u30e3\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Azerbeidzjan\", \"common\": \"Azerbeidzjan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Azerbaij\\u00e3o\", \"common\": \"Azerbeij\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u0437\\u0435\\u0440\\u0431\\u0430\\u0439\\u0434\\u0436\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0410\\u0437\\u0435\\u0440\\u0431\\u0430\\u0439\\u0434\\u0436\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Azerbaiy\\u00e1n\", \"common\": \"Azerbaiy\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Azerbaidzanin tasavalta\", \"common\": \"Azerbaidzan\"}\n\t\t},\n\t\t\"latlng\": [40.5, 47.5],\n\t\t\"demonym\": \"Azerbaijani\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ARM\", \"GEO\", \"IRN\", \"RUS\", \"TUR\"],\n\t\t\"area\": 86600\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Burundi\",\n\t\t\t\"official\": \"Republic of Burundi\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Burundi\",\n\t\t\t\t\t\"common\": \"Burundi\"\n\t\t\t\t},\n\t\t\t\t\"run\": {\n\t\t\t\t\t\"official\": \"Republika y'Uburundi \",\n\t\t\t\t\t\"common\": \"Uburundi\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bi\"],\n\t\t\"cca2\": \"BI\",\n\t\t\"ccn3\": \"108\",\n\t\t\"cca3\": \"BDI\",\n\t\t\"cioc\": \"BDI\",\n\t\t\"currency\": [\"BIF\"],\n\t\t\"callingCode\": [\"257\"],\n\t\t\"capital\": \"Bujumbura\",\n\t\t\"altSpellings\": [\"BI\", \"Republic of Burundi\", \"Republika y'Uburundi\", \"R\\u00e9publique du Burundi\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"run\": \"Kirundi\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Burundi\", \"common\": \"Bwrwndi\"},\n\t\t\t\"deu\": {\"official\": \"Republik Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"hrv\": {\"official\": \"Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30eb\\u30f3\\u30b8\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d6\\u30eb\\u30f3\\u30b8\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0443\\u0440\\u0443\\u043d\\u0434\\u0438\", \"common\": \"\\u0411\\u0443\\u0440\\u0443\\u043d\\u0434\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Burundi\", \"common\": \"Burundi\"},\n\t\t\t\"fin\": {\"official\": \"Burundin tasavalta\", \"common\": \"Burundi\"}\n\t\t},\n\t\t\"latlng\": [-3.5, 30],\n\t\t\"demonym\": \"Burundian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"COD\", \"RWA\", \"TZA\"],\n\t\t\"area\": 27834\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Belgium\",\n\t\t\t\"official\": \"Kingdom of Belgium\",\n\t\t\t\"native\": {\n\t\t\t\t\"deu\": {\n\t\t\t\t\t\"official\": \"K\\u00f6nigreich Belgien\",\n\t\t\t\t\t\"common\": \"Belgien\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Royaume de Belgique\",\n\t\t\t\t\t\"common\": \"Belgique\"\n\t\t\t\t},\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Koninkrijk Belgi\\u00eb\",\n\t\t\t\t\t\"common\": \"Belgi\\u00eb\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".be\"],\n\t\t\"cca2\": \"BE\",\n\t\t\"ccn3\": \"056\",\n\t\t\"cca3\": \"BEL\",\n\t\t\"cioc\": \"BEL\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"32\"],\n\t\t\"capital\": \"Brussels\",\n\t\t\"altSpellings\": [\"BE\", \"Belgi\\u00eb\", \"Belgie\", \"Belgien\", \"Belgique\", \"Kingdom of Belgium\", \"Koninkrijk Belgi\\u00eb\", \"Royaume de Belgique\", \"K\\u00f6nigreich Belgien\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"deu\": \"German\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"nld\": \"Dutch\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Kingdom of Belgium\", \"common\": \"Gwlad Belg\"},\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Belgien\", \"common\": \"Belgien\"},\n\t\t\t\"fra\": {\"official\": \"Royaume de Belgique\", \"common\": \"Belgique\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Belgija\", \"common\": \"Belgija\"},\n\t\t\t\"ita\": {\"official\": \"Regno del Belgio\", \"common\": \"Belgio\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30eb\\u30ae\\u30fc\\u738b\\u56fd\", \"common\": \"\\u30d9\\u30eb\\u30ae\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Belgi\\u00eb\", \"common\": \"Belgi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Reino da B\\u00e9lgica\", \"common\": \"B\\u00e9lgica\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0411\\u0435\\u043b\\u044c\\u0433\\u0438\\u044f\", \"common\": \"\\u0411\\u0435\\u043b\\u044c\\u0433\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de B\\u00e9lgica\", \"common\": \"B\\u00e9lgica\"},\n\t\t\t\"fin\": {\"official\": \"Belgian kuningaskunta\", \"common\": \"Belgia\"}\n\t\t},\n\t\t\"latlng\": [50.83333333, 4],\n\t\t\"demonym\": \"Belgian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"FRA\", \"DEU\", \"LUX\", \"NLD\"],\n\t\t\"area\": 30528\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Benin\",\n\t\t\t\"official\": \"Republic of Benin\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du B\\u00e9nin\",\n\t\t\t\t\t\"common\": \"B\\u00e9nin\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bj\"],\n\t\t\"cca2\": \"BJ\",\n\t\t\"ccn3\": \"204\",\n\t\t\"cca3\": \"BEN\",\n\t\t\"cioc\": \"BEN\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"229\"],\n\t\t\"capital\": \"Porto-Novo\",\n\t\t\"altSpellings\": [\"BJ\", \"Republic of Benin\", \"R\\u00e9publique du B\\u00e9nin\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Benin\", \"common\": \"Benin\"},\n\t\t\t\"deu\": {\"official\": \"Republik Benin\", \"common\": \"Benin\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du B\\u00e9nin\", \"common\": \"B\\u00e9nin\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Benin\", \"common\": \"Benin\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Benin\", \"common\": \"Benin\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30ca\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d9\\u30ca\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Benin\", \"common\": \"Benin\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Benin\", \"common\": \"Benin\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0435\\u043d\\u0438\\u043d\", \"common\": \"\\u0411\\u0435\\u043d\\u0438\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Benin\", \"common\": \"Ben\\u00edn\"},\n\t\t\t\"fin\": {\"official\": \"Beninin tasavalta\", \"common\": \"Benin\"}\n\t\t},\n\t\t\"latlng\": [9.5, 2.25],\n\t\t\"demonym\": \"Beninese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BFA\", \"NER\", \"NGA\", \"TGO\"],\n\t\t\"area\": 112622\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Burkina Faso\",\n\t\t\t\"official\": \"Burkina Faso\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Burkina\",\n\t\t\t\t\t\"common\": \"Burkina Faso\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bf\"],\n\t\t\"cca2\": \"BF\",\n\t\t\"ccn3\": \"854\",\n\t\t\"cca3\": \"BFA\",\n\t\t\"cioc\": \"BUR\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"226\"],\n\t\t\"capital\": \"Ouagadougou\",\n\t\t\"altSpellings\": [\"BF\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"deu\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Burkina\", \"common\": \"Burkina Faso\"},\n\t\t\t\"hrv\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"ita\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30eb\\u30ad\\u30ca\\u30d5\\u30a1\\u30bd\", \"common\": \"\\u30d6\\u30eb\\u30ad\\u30ca\\u30d5\\u30a1\\u30bd\"},\n\t\t\t\"nld\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"por\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u0443\\u0440\\u043a\\u0438\\u043d\\u0430 -\\u0424\\u0430\\u0441\\u043e\", \"common\": \"\\u0411\\u0443\\u0440\\u043a\\u0438\\u043d\\u0430-\\u0424\\u0430\\u0441\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"},\n\t\t\t\"fin\": {\"official\": \"Burkina Faso\", \"common\": \"Burkina Faso\"}\n\t\t},\n\t\t\"latlng\": [13, -2],\n\t\t\"demonym\": \"Burkinabe\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"BEN\", \"CIV\", \"GHA\", \"MLI\", \"NER\", \"TGO\"],\n\t\t\"area\": 272967\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bangladesh\",\n\t\t\t\"official\": \"People's Republic of Bangladesh\",\n\t\t\t\"native\": {\n\t\t\t\t\"ben\": {\n\t\t\t\t\t\"official\": \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\\u09a6\\u09c7\\u09b6 \\u0997\\u09a3\\u09aa\\u09cd\\u09b0\\u099c\\u09be\\u09a4\\u09a8\\u09cd\\u09a4\\u09cd\\u09b0\\u09c0\",\n\t\t\t\t\t\"common\": \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\\u09a6\\u09c7\\u09b6\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bd\"],\n\t\t\"cca2\": \"BD\",\n\t\t\"ccn3\": \"050\",\n\t\t\"cca3\": \"BGD\",\n\t\t\"cioc\": \"BAN\",\n\t\t\"currency\": [\"BDT\"],\n\t\t\"callingCode\": [\"880\"],\n\t\t\"capital\": \"Dhaka\",\n\t\t\"altSpellings\": [\"BD\", \"People's Republic of Bangladesh\", \"G\\u00f4n\\u00f4pr\\u00f4jat\\u00f4ntri Bangladesh\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"ben\": \"Bengali\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"People's Republic of Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"deu\": {\"official\": \"Volksrepublik Bangladesch\", \"common\": \"Bangladesch\"},\n\t\t\t\"fra\": {\"official\": \"La R\\u00e9publique populaire du Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"hrv\": {\"official\": \"Narodna Republika Banglade\\u0161\", \"common\": \"Banglade\\u0161\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica popolare del Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30f3\\u30b0\\u30e9\\u30c7\\u30b7\\u30e5\\u4eba\\u6c11\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d0\\u30f3\\u30b0\\u30e9\\u30c7\\u30b7\\u30e5\"},\n\t\t\t\"nld\": {\"official\": \"Volksrepubliek Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Popular do Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0430\\u043d\\u0433\\u043b\\u0430\\u0434\\u0435\\u0448\", \"common\": \"\\u0411\\u0430\\u043d\\u0433\\u043b\\u0430\\u0434\\u0435\\u0448\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Popular de Bangladesh\", \"common\": \"Bangladesh\"},\n\t\t\t\"fin\": {\"official\": \"Bangladeshin kansantasavalta\", \"common\": \"Bangladesh\"}\n\t\t},\n\t\t\"latlng\": [24, 90],\n\t\t\"demonym\": \"Bangladeshi\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MMR\", \"IND\"],\n\t\t\"area\": 147570\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bulgaria\",\n\t\t\t\"official\": \"Republic of Bulgaria\",\n\t\t\t\"native\": {\n\t\t\t\t\"bul\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\",\n\t\t\t\t\t\"common\": \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bg\"],\n\t\t\"cca2\": \"BG\",\n\t\t\"ccn3\": \"100\",\n\t\t\"cca3\": \"BGR\",\n\t\t\"cioc\": \"BUL\",\n\t\t\"currency\": [\"BGN\"],\n\t\t\"callingCode\": [\"359\"],\n\t\t\"capital\": \"Sofia\",\n\t\t\"altSpellings\": [\"BG\", \"Republic of Bulgaria\", \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"bul\": \"Bulgarian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Bulgaria\", \"common\": \"Bwlgaria\"},\n\t\t\t\"deu\": {\"official\": \"Republik Bulgarien\", \"common\": \"Bulgarien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Bulgarie\", \"common\": \"Bulgarie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Bugarska\", \"common\": \"Bugarska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Bulgaria\", \"common\": \"Bulgaria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30eb\\u30ac\\u30ea\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d6\\u30eb\\u30ac\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Bulgarije\", \"common\": \"Bulgarije\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Bulg\\u00e1ria\", \"common\": \"Bulg\\u00e1ria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u043e\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\", \"common\": \"\\u0411\\u043e\\u043b\\u0433\\u0430\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Bulgaria\", \"common\": \"Bulgaria\"},\n\t\t\t\"fin\": {\"official\": \"Bulgarian tasavalta\", \"common\": \"Bulgaria\"}\n\t\t},\n\t\t\"latlng\": [43, 25],\n\t\t\"demonym\": \"Bulgarian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GRC\", \"MKD\", \"ROU\", \"SRB\", \"TUR\"],\n\t\t\"area\": 110879\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bahrain\",\n\t\t\t\"official\": \"Kingdom of Bahrain\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\",\n\t\t\t\t\t\"common\": \"\\u200f\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bh\"],\n\t\t\"cca2\": \"BH\",\n\t\t\"ccn3\": \"048\",\n\t\t\"cca3\": \"BHR\",\n\t\t\"cioc\": \"BRN\",\n\t\t\"currency\": [\"BHD\"],\n\t\t\"callingCode\": [\"973\"],\n\t\t\"capital\": \"Manama\",\n\t\t\"altSpellings\": [\"BH\", \"Kingdom of Bahrain\", \"Mamlakat al-Ba\\u1e25rayn\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Kingdom of Bahrain\", \"common\": \"Bahrain\"},\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Bahrain\", \"common\": \"Bahrain\"},\n\t\t\t\"fra\": {\"official\": \"Royaume de Bahre\\u00efn\", \"common\": \"Bahre\\u00efn\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Bahrein\", \"common\": \"Bahrein\"},\n\t\t\t\"ita\": {\"official\": \"Regno del Bahrain\", \"common\": \"Bahrein\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30fc\\u30ec\\u30fc\\u30f3\\u738b\\u56fd\", \"common\": \"\\u30d0\\u30fc\\u30ec\\u30fc\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Bahrein\", \"common\": \"Bahrein\"},\n\t\t\t\"por\": {\"official\": \"Reino do Bahrein\", \"common\": \"Bahrein\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0411\\u0430\\u0445\\u0440\\u0435\\u0439\\u043d\", \"common\": \"\\u0411\\u0430\\u0445\\u0440\\u0435\\u0439\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Bahrein\", \"common\": \"Bahrein\"},\n\t\t\t\"fin\": {\"official\": \"Bahrainin kuningaskunta\", \"common\": \"Bahrain\"}\n\t\t},\n\t\t\"latlng\": [26, 50.55],\n\t\t\"demonym\": \"Bahraini\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 765\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bahamas\",\n\t\t\t\"official\": \"Commonwealth of the Bahamas\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Commonwealth of the Bahamas\",\n\t\t\t\t\t\"common\": \"Bahamas\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bs\"],\n\t\t\"cca2\": \"BS\",\n\t\t\"ccn3\": \"044\",\n\t\t\"cca3\": \"BHS\",\n\t\t\"cioc\": \"BAH\",\n\t\t\"currency\": [\"BSD\"],\n\t\t\"callingCode\": [\"1242\"],\n\t\t\"capital\": \"Nassau\",\n\t\t\"altSpellings\": [\"BS\", \"Commonwealth of the Bahamas\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Commonwealth of the Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"deu\": {\"official\": \"Commonwealth der Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"fra\": {\"official\": \"Commonwealth des Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"hrv\": {\"official\": \"Zajednica Bahama\", \"common\": \"Bahami\"},\n\t\t\t\"ita\": {\"official\": \"Commonwealth delle Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30cf\\u30de\", \"common\": \"\\u30d0\\u30cf\\u30de\"},\n\t\t\t\"nld\": {\"official\": \"Gemenebest van de Bahama's\", \"common\": \"Bahama\\u2019s\"},\n\t\t\t\"por\": {\"official\": \"Comunidade das Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0434\\u0440\\u0443\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0411\\u0430\\u0433\\u0430\\u043c\\u0441\\u043a\\u0438\\u0445 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u043e\\u0432\", \"common\": \"\\u0411\\u0430\\u0433\\u0430\\u043c\\u0441\\u043a\\u0438\\u0435 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Commonwealth de las Bahamas\", \"common\": \"Bahamas\"},\n\t\t\t\"fin\": {\"official\": \"Bahaman liittovaltio\", \"common\": \"Bahamasaaret\"}\n\t\t},\n\t\t\"latlng\": [24.25, -76],\n\t\t\"demonym\": \"Bahamian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 13943\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bosnia and Herzegovina\",\n\t\t\t\"official\": \"Bosnia and Herzegovina\",\n\t\t\t\"native\": {\n\t\t\t\t\"bos\": {\n\t\t\t\t\t\"official\": \"Bosna i Hercegovina\",\n\t\t\t\t\t\"common\": \"Bosna i Hercegovina\"\n\t\t\t\t},\n\t\t\t\t\"hrv\": {\n\t\t\t\t\t\"official\": \"Bosna i Hercegovina\",\n\t\t\t\t\t\"common\": \"Bosna i Hercegovina\"\n\t\t\t\t},\n\t\t\t\t\"srp\": {\n\t\t\t\t\t\"official\": \"\\u0411\\u043e\\u0441\\u043da \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0411\\u043e\\u0441\\u043da \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ba\"],\n\t\t\"cca2\": \"BA\",\n\t\t\"ccn3\": \"070\",\n\t\t\"cca3\": \"BIH\",\n\t\t\"cioc\": \"BIH\",\n\t\t\"currency\": [\"BAM\"],\n\t\t\"callingCode\": [\"387\"],\n\t\t\"capital\": \"Sarajevo\",\n\t\t\"altSpellings\": [\"BA\", \"Bosnia-Herzegovina\", \"\\u0411\\u043e\\u0441\\u043d\\u0430 \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"bos\": \"Bosnian\",\n\t\t\t\"hrv\": \"Croatian\",\n\t\t\t\"srp\": \"Serbian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Bosnia and Herzegovina\", \"common\": \"Bosnia a Hercegovina\"},\n\t\t\t\"deu\": {\"official\": \"Bosnien und Herzegowina\", \"common\": \"Bosnien und Herzegowina\"},\n\t\t\t\"fra\": {\"official\": \"Bosnie-et-Herz\\u00e9govine\", \"common\": \"Bosnie-Herz\\u00e9govine\"},\n\t\t\t\"hrv\": {\"official\": \"Bosna i Hercegovina\", \"common\": \"Bosna i Hercegovina\"},\n\t\t\t\"ita\": {\"official\": \"Bosnia-Erzegovina\", \"common\": \"Bosnia ed Erzegovina\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30dc\\u30b9\\u30cb\\u30a2\\u00b7\\u30d8\\u30eb\\u30c4\\u30a7\\u30b4\\u30d3\\u30ca\", \"common\": \"\\u30dc\\u30b9\\u30cb\\u30a2\\u30fb\\u30d8\\u30eb\\u30c4\\u30a7\\u30b4\\u30d3\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Bosni\\u00eb-Herzegovina\", \"common\": \"Bosni\\u00eb en Herzegovina\"},\n\t\t\t\"por\": {\"official\": \"B\\u00f3snia e Herzegovina\", \"common\": \"B\\u00f3snia e Herzegovina\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u043e\\u0441\\u043d\\u0438\\u044f \\u0438 \\u0413\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\", \"common\": \"\\u0411\\u043e\\u0441\\u043d\\u0438\\u044f \\u0438 \\u0413\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Bosnia y Herzegovina\", \"common\": \"Bosnia y Herzegovina\"},\n\t\t\t\"fin\": {\"official\": \"Bosnia ja Hertsegovina\", \"common\": \"Bosnia ja Hertsegovina\"}\n\t\t},\n\t\t\"latlng\": [44, 18],\n\t\t\"demonym\": \"Bosnian, Herzegovinian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"HRV\", \"MNE\", \"SRB\"],\n\t\t\"area\": 51209\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Barth\\u00e9lemy\",\n\t\t\t\"official\": \"Collectivity of Saint Barth\\u00e9lemy\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Collectivit\\u00e9 de Saint-Barth\\u00e9lemy\",\n\t\t\t\t\t\"common\": \"Saint-Barth\\u00e9lemy\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bl\"],\n\t\t\"cca2\": \"BL\",\n\t\t\"ccn3\": \"652\",\n\t\t\"cca3\": \"BLM\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"590\"],\n\t\t\"capital\": \"Gustavia\",\n\t\t\"altSpellings\": [\"BL\", \"St. Barthelemy\", \"Collectivity of Saint Barth\\u00e9lemy\", \"Collectivit\\u00e9 de Saint-Barth\\u00e9lemy\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gebietsk\\u00f6rperschaft Saint -Barth\\u00e9lemy\", \"common\": \"Saint-Barth\\u00e9lemy\"},\n\t\t\t\"fra\": {\"official\": \"Collectivit\\u00e9 de Saint-Barth\\u00e9lemy\", \"common\": \"Saint-Barth\\u00e9lemy\"},\n\t\t\t\"hrv\": {\"official\": \"Kolektivnost sv Barth\\u00e9lemy\", \"common\": \"Saint Barth\\u00e9lemy\"},\n\t\t\t\"ita\": {\"official\": \"Collettivit\\u00e0 di Saint Barth\\u00e9lemy\", \"common\": \"Antille Francesi\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30f3\\u00b7\\u30d0\\u30eb\\u30c6\\u30eb\\u30df\\u30fc\\u5cf6\\u306e\\u96c6\\u5408\\u4f53\", \"common\": \"\\u30b5\\u30f3\\u30fb\\u30d0\\u30eb\\u30c6\\u30eb\\u30df\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Gemeenschap Saint Barth\\u00e9lemy\", \"common\": \"Saint Barth\\u00e9lemy\"},\n\t\t\t\"por\": {\"official\": \"Coletividade de Saint Barth\\u00e9lemy\", \"common\": \"S\\u00e3o Bartolomeu\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u043b\\u043b\\u0435\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\\u0441\\u0442\\u044c \\u0421\\u0430\\u043d\\u043a\\u0442 -\\u0411\\u0430\\u0440\\u0442\\u0435\\u043b\\u044c\\u043c\\u0438\", \"common\": \"\\u0421\\u0435\\u043d-\\u0411\\u0430\\u0440\\u0442\\u0435\\u043b\\u0435\\u043c\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Colectividad de San Barth\\u00e9lemy\", \"common\": \"San Bartolom\\u00e9\"},\n\t\t\t\"fin\": {\"official\": \"Saint-Barth\\u00e9lemyn yhteis\\u00f6\", \"common\": \"Saint-Barth\\u00e9lemy\"}\n\t\t},\n\t\t\"latlng\": [18.5, -63.41666666],\n\t\t\"demonym\": \"Saint Barth\\u00e9lemy Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 21\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Belarus\",\n\t\t\t\"official\": \"Republic of Belarus\",\n\t\t\t\"native\": {\n\t\t\t\t\"bel\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u044d\\u0441\\u043f\\u0443\\u0431\\u043b\\u0456\\u043a\\u0430 \\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u044c\",\n\t\t\t\t\t\"common\": \"\\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0301\\u0441\\u044c\"\n\t\t\t\t},\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u044c\",\n\t\t\t\t\t\"common\": \"\\u0411\\u0435\\u043b\\u043e\\u0440\\u0443\\u0441\\u0441\\u0438\\u044f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".by\"],\n\t\t\"cca2\": \"BY\",\n\t\t\"ccn3\": \"112\",\n\t\t\"cca3\": \"BLR\",\n\t\t\"cioc\": \"BLR\",\n\t\t\"currency\": [\"BYR\"],\n\t\t\"callingCode\": [\"375\"],\n\t\t\"capital\": \"Minsk\",\n\t\t\"altSpellings\": [\"BY\", \"Bielaru\\u015b\", \"Republic of Belarus\", \"\\u0411\\u0435\\u043b\\u043e\\u0440\\u0443\\u0441\\u0441\\u0438\\u044f\", \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u044c\", \"Belorussiya\", \"Respublika Belarus\\u2019\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"bel\": \"Belarusian\",\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Belarus\", \"common\": \"Belarws\"},\n\t\t\t\"deu\": {\"official\": \"Republik Belarus\", \"common\": \"Wei\\u00dfrussland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Bi\\u00e9lorussie\", \"common\": \"Bi\\u00e9lorussie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Bjelorusija\", \"common\": \"Bjelorusija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Belarus\", \"common\": \"Bielorussia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30e9\\u30eb\\u30fc\\u30b7\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d9\\u30e9\\u30eb\\u30fc\\u30b7\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Belarus\", \"common\": \"Wit-Rusland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Bielorr\\u00fassia\", \"common\": \"Bielor\\u00fassia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u044c\", \"common\": \"\\u0411\\u0435\\u043b\\u043e\\u0440\\u0443\\u0441\\u0441\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Belar\\u00fas\", \"common\": \"Bielorrusia\"},\n\t\t\t\"fin\": {\"official\": \"Valko-Ven\\u00e4j\\u00e4n tasavalta\", \"common\": \"Valko-Ven\\u00e4j\\u00e4\"}\n\t\t},\n\t\t\"latlng\": [53, 28],\n\t\t\"demonym\": \"Belarusian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"LVA\", \"LTU\", \"POL\", \"RUS\", \"UKR\"],\n\t\t\"area\": 207600\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Belize\",\n\t\t\t\"official\": \"Belize\",\n\t\t\t\"native\": {\n\t\t\t\t\"bjz\": {\n\t\t\t\t\t\"official\": \"Belize\",\n\t\t\t\t\t\"common\": \"Belize\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Belize\",\n\t\t\t\t\t\"common\": \"Belize\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Belice\",\n\t\t\t\t\t\"common\": \"Belice\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bz\"],\n\t\t\"cca2\": \"BZ\",\n\t\t\"ccn3\": \"084\",\n\t\t\"cca3\": \"BLZ\",\n\t\t\"cioc\": \"BIZ\",\n\t\t\"currency\": [\"BZD\"],\n\t\t\"callingCode\": [\"501\"],\n\t\t\"capital\": \"Belmopan\",\n\t\t\"altSpellings\": [\"BZ\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"bjz\": \"Belizean Creole\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"deu\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"fra\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"hrv\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"ita\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30ea\\u30fc\\u30ba\", \"common\": \"\\u30d9\\u30ea\\u30fc\\u30ba\"},\n\t\t\t\"nld\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"por\": {\"official\": \"Belize\", \"common\": \"Belize\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u0435\\u043b\\u0438\\u0437\", \"common\": \"\\u0411\\u0435\\u043b\\u0438\\u0437\"},\n\t\t\t\"spa\": {\"official\": \"Belice\", \"common\": \"Belice\"},\n\t\t\t\"fin\": {\"official\": \"Belize\", \"common\": \"Belize\"}\n\t\t},\n\t\t\"latlng\": [17.25, -88.75],\n\t\t\"demonym\": \"Belizean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GTM\", \"MEX\"],\n\t\t\"area\": 22966\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bermuda\",\n\t\t\t\"official\": \"Bermuda\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Bermuda\",\n\t\t\t\t\t\"common\": \"Bermuda\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bm\"],\n\t\t\"cca2\": \"BM\",\n\t\t\"ccn3\": \"060\",\n\t\t\"cca3\": \"BMU\",\n\t\t\"cioc\": \"BER\",\n\t\t\"currency\": [\"BMD\"],\n\t\t\"callingCode\": [\"1441\"],\n\t\t\"capital\": \"Hamilton\",\n\t\t\"altSpellings\": [\"BM\", \"The Islands of Bermuda\", \"The Bermudas\", \"Somers Isles\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Bermuda\", \"common\": \"Bermiwda\"},\n\t\t\t\"deu\": {\"official\": \"Bermuda\", \"common\": \"Bermuda\"},\n\t\t\t\"fra\": {\"official\": \"Bermudes\", \"common\": \"Bermudes\"},\n\t\t\t\"hrv\": {\"official\": \"Bermuda\", \"common\": \"Bermudi\"},\n\t\t\t\"ita\": {\"official\": \"Bermuda\", \"common\": \"Bermuda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30df\\u30e5\\u30fc\\u30c0\", \"common\": \"\\u30d0\\u30df\\u30e5\\u30fc\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Bermuda\", \"common\": \"Bermuda\"},\n\t\t\t\"por\": {\"official\": \"Bermudas\", \"common\": \"Bermudas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u0435\\u0440\\u043c\\u0443\\u0434\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0411\\u0435\\u0440\\u043c\\u0443\\u0434\\u0441\\u043a\\u0438\\u0435 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Bermuda\", \"common\": \"Bermudas\"},\n\t\t\t\"fin\": {\"official\": \"Bermuda\", \"common\": \"Bermuda\"}\n\t\t},\n\t\t\"latlng\": [32.33333333, -64.75],\n\t\t\"demonym\": \"Bermudian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 54\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bolivia\",\n\t\t\t\"official\": \"Plurinational State of Bolivia\",\n\t\t\t\"native\": {\n\t\t\t\t\"aym\": {\n\t\t\t\t\t\"official\": \"Wuliwya Suyu\",\n\t\t\t\t\t\"common\": \"Wuliwya\"\n\t\t\t\t},\n\t\t\t\t\"grn\": {\n\t\t\t\t\t\"official\": \"Tet\\u00e3 Vol\\u00edvia\",\n\t\t\t\t\t\"common\": \"Vol\\u00edvia\"\n\t\t\t\t},\n\t\t\t\t\"que\": {\n\t\t\t\t\t\"official\": \"Buliwya Mamallaqta\",\n\t\t\t\t\t\"common\": \"Buliwya\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Estado Plurinacional de Bolivia\",\n\t\t\t\t\t\"common\": \"Bolivia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bo\"],\n\t\t\"cca2\": \"BO\",\n\t\t\"ccn3\": \"068\",\n\t\t\"cca3\": \"BOL\",\n\t\t\"cioc\": \"BOL\",\n\t\t\"currency\": [\"BOB\", \"BOV\"],\n\t\t\"callingCode\": [\"591\"],\n\t\t\"capital\": \"Sucre\",\n\t\t\"altSpellings\": [\"BO\", \"Buliwya\", \"Wuliwya\", \"Bolivia, Plurinational State of\", \"Plurinational State of Bolivia\", \"Estado Plurinacional de Bolivia\", \"Buliwya Mamallaqta\", \"Wuliwya Suyu\", \"Tet\\u00e3 Vol\\u00edvia\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"aym\": \"Aymara\",\n\t\t\t\"grn\": \"Guaran\\u00ed\",\n\t\t\t\"que\": \"Quechua\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Plurinational State of Bolivia\", \"common\": \"Bolifia\"},\n\t\t\t\"deu\": {\"official\": \"Multinationaler Staat von Bolivien\", \"common\": \"Bolivien\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat plurinational de Bolivie\", \"common\": \"Bolivie\"},\n\t\t\t\"hrv\": {\"official\": \"Plurinational State of Bolivia\", \"common\": \"Bolivija\"},\n\t\t\t\"ita\": {\"official\": \"Stato Plurinazionale della Bolivia\", \"common\": \"Bolivia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30dc\\u30ea\\u30d3\\u30a2\\u306e\\u591a\\u6c11\\u65cf\\u56fd\", \"common\": \"\\u30dc\\u30ea\\u30d3\\u30a2\\u591a\\u6c11\\u65cf\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Plurinationale Staat van Bolivia\", \"common\": \"Bolivia\"},\n\t\t\t\"por\": {\"official\": \"Estado Plurinacional da Bol\\u00edvia\", \"common\": \"Bol\\u00edvia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u043d\\u043e\\u0433\\u043e\\u043d\\u0430\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u0411\\u043e\\u043b\\u0438\\u0432\\u0438\\u044f\", \"common\": \"\\u0411\\u043e\\u043b\\u0438\\u0432\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Estado Plurinacional de Bolivia\", \"common\": \"Bolivia\"},\n\t\t\t\"fin\": {\"official\": \"Bolivian monikansainen valtio\", \"common\": \"Bolivia\"}\n\t\t},\n\t\t\"latlng\": [-17, -65],\n\t\t\"demonym\": \"Bolivian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ARG\", \"BRA\", \"CHL\", \"PRY\", \"PER\"],\n\t\t\"area\": 1098581\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Brazil\",\n\t\t\t\"official\": \"Federative Republic of Brazil\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Federativa do Brasil\",\n\t\t\t\t\t\"common\": \"Brasil\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".br\"],\n\t\t\"cca2\": \"BR\",\n\t\t\"ccn3\": \"076\",\n\t\t\"cca3\": \"BRA\",\n\t\t\"cioc\": \"BRA\",\n\t\t\"currency\": [\"BRL\"],\n\t\t\"callingCode\": [\"55\"],\n\t\t\"capital\": \"Bras\\u00edlia\",\n\t\t\"altSpellings\": [\"BR\", \"Brasil\", \"Federative Republic of Brazil\", \"Rep\\u00fablica Federativa do Brasil\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Federative Republic of Brazil\", \"common\": \"Brasil\"},\n\t\t\t\"deu\": {\"official\": \"F\\u00f6derative Republik Brasilien\", \"common\": \"Brasilien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique f\\u00e9d\\u00e9rative du Br\\u00e9sil\", \"common\": \"Br\\u00e9sil\"},\n\t\t\t\"hrv\": {\"official\": \"Savezne Republike Brazil\", \"common\": \"Brazil\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federativa del Brasile\", \"common\": \"Brasile\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30e9\\u30b8\\u30eb\\u9023\\u90a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d6\\u30e9\\u30b8\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Federale Republiek Brazili\\u00eb\", \"common\": \"Brazili\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Federativa do Brasil\", \"common\": \"Brasil\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u0440\\u0430\\u0437\\u0438\\u043b\\u0438\\u044f\", \"common\": \"\\u0411\\u0440\\u0430\\u0437\\u0438\\u043b\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Federativa del Brasil\", \"common\": \"Brasil\"},\n\t\t\t\"fin\": {\"official\": \"Brasilian liittotasavalta\", \"common\": \"Brasilia\"}\n\t\t},\n\t\t\"latlng\": [-10, -55],\n\t\t\"demonym\": \"Brazilian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ARG\", \"BOL\", \"COL\", \"GUF\", \"GUY\", \"PRY\", \"PER\", \"SUR\", \"URY\", \"VEN\"],\n\t\t\"area\": 8515767\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Barbados\",\n\t\t\t\"official\": \"Barbados\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Barbados\",\n\t\t\t\t\t\"common\": \"Barbados\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bb\"],\n\t\t\"cca2\": \"BB\",\n\t\t\"ccn3\": \"052\",\n\t\t\"cca3\": \"BRB\",\n\t\t\"cioc\": \"BAR\",\n\t\t\"currency\": [\"BBD\"],\n\t\t\"callingCode\": [\"1246\"],\n\t\t\"capital\": \"Bridgetown\",\n\t\t\"altSpellings\": [\"BB\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"deu\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"fra\": {\"official\": \"Barbade\", \"common\": \"Barbade\"},\n\t\t\t\"hrv\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"ita\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30eb\\u30d0\\u30c9\\u30b9\", \"common\": \"\\u30d0\\u30eb\\u30d0\\u30c9\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"por\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u0430\\u0440\\u0431\\u0430\\u0434\\u043e\\u0441\", \"common\": \"\\u0411\\u0430\\u0440\\u0431\\u0430\\u0434\\u043e\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Barbados\", \"common\": \"Barbados\"},\n\t\t\t\"fin\": {\"official\": \"Barbados\", \"common\": \"Barbados\"}\n\t\t},\n\t\t\"latlng\": [13.16666666, -59.53333333],\n\t\t\"demonym\": \"Barbadian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 430\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Brunei\",\n\t\t\t\"official\": \"Nation of Brunei, Abode of Peace\",\n\t\t\t\"native\": {\n\t\t\t\t\"msa\": {\n\t\t\t\t\t\"official\": \"Nation of Brunei, Abode Damai\",\n\t\t\t\t\t\"common\": \"Negara Brunei Darussalam\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bn\"],\n\t\t\"cca2\": \"BN\",\n\t\t\"ccn3\": \"096\",\n\t\t\"cca3\": \"BRN\",\n\t\t\"cioc\": \"BRU\",\n\t\t\"currency\": [\"BND\"],\n\t\t\"callingCode\": [\"673\"],\n\t\t\"capital\": \"Bandar Seri Begawan\",\n\t\t\"altSpellings\": [\"BN\", \"Brunei Darussalam\", \"Nation of Brunei\", \"the Abode of Peace\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"msa\": \"Malay\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Nation of Brunei, Abode of Peace\", \"common\": \"Brunei\"},\n\t\t\t\"deu\": {\"official\": \"Nation von Brunei, Wohnung des Friedens\", \"common\": \"Brunei\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat de Brunei Darussalam\", \"common\": \"Brunei\"},\n\t\t\t\"hrv\": {\"official\": \"Nacija od Bruneja, Ku\\u0107u Mira\", \"common\": \"Brunej\"},\n\t\t\t\"ita\": {\"official\": \"Nazione di Brunei, Dimora della Pace\", \"common\": \"Brunei\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30eb\\u30cd\\u30a4\\u3001\\u5e73\\u548c\\u306e\\u7cbe\\u820e\\u306e\\u56fd\\u5bb6\", \"common\": \"\\u30d6\\u30eb\\u30cd\\u30a4\\u30fb\\u30c0\\u30eb\\u30b5\\u30e9\\u30fc\\u30e0\"},\n\t\t\t\"nld\": {\"official\": \"Natie van Brunei, de verblijfplaats van de Vrede\", \"common\": \"Brunei\"},\n\t\t\t\"por\": {\"official\": \"Na\\u00e7\\u00e3o do Brunei, Morada da Paz\", \"common\": \"Brunei\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0430\\u0446\\u0438\\u044f \\u0411\\u0440\\u0443\\u043d\\u0435\\u0439, \\u043e\\u0431\\u0438\\u0442\\u0435\\u043b\\u044c \\u043c\\u0438\\u0440\\u0430\", \"common\": \"\\u0411\\u0440\\u0443\\u043d\\u0435\\u0439\"},\n\t\t\t\"spa\": {\"official\": \"Naci\\u00f3n de Brunei, Morada de la Paz\", \"common\": \"Brunei\"},\n\t\t\t\"fin\": {\"official\": \"Brunei Darussalamin valtio\", \"common\": \"Brunei\"}\n\t\t},\n\t\t\"latlng\": [4.5, 114.66666666],\n\t\t\"demonym\": \"Bruneian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MYS\"],\n\t\t\"area\": 5765\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bhutan\",\n\t\t\t\"official\": \"Kingdom of Bhutan\",\n\t\t\t\"native\": {\n\t\t\t\t\"dzo\": {\n\t\t\t\t\t\"official\": \"\\u0f60\\u0f56\\u0fb2\\u0f74\\u0f42\\u0f0b\\u0f62\\u0f92\\u0fb1\\u0f63\\u0f0b\\u0f41\\u0f56\\u0f0b\",\n\t\t\t\t\t\"common\": \"\\u0f60\\u0f56\\u0fb2\\u0f74\\u0f42\\u0f0b\\u0f61\\u0f74\\u0f63\\u0f0b\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bt\"],\n\t\t\"cca2\": \"BT\",\n\t\t\"ccn3\": \"064\",\n\t\t\"cca3\": \"BTN\",\n\t\t\"cioc\": \"BHU\",\n\t\t\"currency\": [\"BTN\", \"INR\"],\n\t\t\"callingCode\": [\"975\"],\n\t\t\"capital\": \"Thimphu\",\n\t\t\"altSpellings\": [\"BT\", \"Kingdom of Bhutan\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"dzo\": \"Dzongkha\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Kingdom of Bhutan\", \"common\": \"Bhwtan\"},\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Bhutan\", \"common\": \"Bhutan\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Bhoutan\", \"common\": \"Bhoutan\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Butan\", \"common\": \"Butan\"},\n\t\t\t\"ita\": {\"official\": \"Regno del Bhutan\", \"common\": \"Bhutan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30fc\\u30bf\\u30f3\\u738b\\u56fd\", \"common\": \"\\u30d6\\u30fc\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Bhutan\", \"common\": \"Bhutan\"},\n\t\t\t\"por\": {\"official\": \"Reino do But\\u00e3o\", \"common\": \"But\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0411\\u0443\\u0442\\u0430\\u043d\", \"common\": \"\\u0411\\u0443\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Reino de But\\u00e1n\", \"common\": \"But\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Bhutanin kuningaskunta\", \"common\": \"Bhutan\"}\n\t\t},\n\t\t\"latlng\": [27.5, 90.5],\n\t\t\"demonym\": \"Bhutanese\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CHN\", \"IND\"],\n\t\t\"area\": 38394\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Bouvet Island\",\n\t\t\t\"official\": \"Bouvet Island\",\n\t\t\t\"native\": {\n\t\t\t\t\"nor\": {\n\t\t\t\t\t\"official\": \"Bouvet\\u00f8ya\",\n\t\t\t\t\t\"common\": \"Bouvet\\u00f8ya\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bv\"],\n\t\t\"cca2\": \"BV\",\n\t\t\"ccn3\": \"074\",\n\t\t\"cca3\": \"BVT\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"NOK\"],\n\t\t\"callingCode\": [],\n\t\t\"capital\": \"\",\n\t\t\"altSpellings\": [\"BV\", \"Bouvet\\u00f8ya\", \"Bouvet-\\u00f8ya\"],\n\t\t\"region\": \"\",\n\t\t\"subregion\": \"\",\n\t\t\"languages\": {\n\t\t\t\"nor\": \"Norwegian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Bouvet-Insel\", \"common\": \"Bouvetinsel\"},\n\t\t\t\"fra\": {\"official\": \"\\u00cele Bouvet\", \"common\": \"\\u00cele Bouvet\"},\n\t\t\t\"hrv\": {\"official\": \"Bouvet Island\", \"common\": \"Otok Bouvet\"},\n\t\t\t\"ita\": {\"official\": \"Isola Bouvet\", \"common\": \"Isola Bouvet\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d6\\u30fc\\u30f4\\u30a7\\u5cf6\", \"common\": \"\\u30d6\\u30fc\\u30d9\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Bouvet Island\", \"common\": \"Bouveteiland\"},\n\t\t\t\"por\": {\"official\": \"Ilha Bouvet\", \"common\": \"Ilha Bouvet\"},\n\t\t\t\"rus\": {\"official\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u0411\\u0443\\u0432\\u0435\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u0411\\u0443\\u0432\\u0435\"},\n\t\t\t\"spa\": {\"official\": \"Isla Bouvet\", \"common\": \"Isla Bouvet\"},\n\t\t\t\"fin\": {\"official\": \"Bouvet'nsaari\", \"common\": \"Bouvet'nsaari\"}\n\t\t},\n\t\t\"latlng\": [-54.43333333, 3.4],\n\t\t\"demonym\": \"\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 49\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Botswana\",\n\t\t\t\"official\": \"Republic of Botswana\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Botswana\",\n\t\t\t\t\t\"common\": \"Botswana\"\n\t\t\t\t},\n\t\t\t\t\"tsn\": {\n\t\t\t\t\t\"official\": \"Lefatshe la Botswana\",\n\t\t\t\t\t\"common\": \"Botswana\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".bw\"],\n\t\t\"cca2\": \"BW\",\n\t\t\"ccn3\": \"072\",\n\t\t\"cca3\": \"BWA\",\n\t\t\"cioc\": \"BOT\",\n\t\t\"currency\": [\"BWP\"],\n\t\t\"callingCode\": [\"267\"],\n\t\t\"capital\": \"Gaborone\",\n\t\t\"altSpellings\": [\"BW\", \"Republic of Botswana\", \"Lefatshe la Botswana\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Southern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"tsn\": \"Tswana\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Botsuana\", \"common\": \"Botswana\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Botswana\", \"common\": \"Botswana\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Bocvana\", \"common\": \"Bocvana\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Botswana\", \"common\": \"Botswana\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30dc\\u30c4\\u30ef\\u30ca\\u5171\\u548c\\u56fd\", \"common\": \"\\u30dc\\u30c4\\u30ef\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Botswana\", \"common\": \"Botswana\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Botswana\", \"common\": \"Botswana\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0411\\u043e\\u0442\\u0441\\u0432\\u0430\\u043d\\u0430\", \"common\": \"\\u0411\\u043e\\u0442\\u0441\\u0432\\u0430\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Botswana\", \"common\": \"Botswana\"},\n\t\t\t\"fin\": {\"official\": \"Botswanan tasavalta\", \"common\": \"Botswana\"}\n\t\t},\n\t\t\"latlng\": [-22, 24],\n\t\t\"demonym\": \"Motswana\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"NAM\", \"ZAF\", \"ZMB\", \"ZWE\"],\n\t\t\"area\": 582000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Central African Republic\",\n\t\t\t\"official\": \"Central African Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique centrafricaine\",\n\t\t\t\t\t\"common\": \"R\\u00e9publique centrafricaine\"\n\t\t\t\t},\n\t\t\t\t\"sag\": {\n\t\t\t\t\t\"official\": \"K\\u00f6d\\u00f6r\\u00f6s\\u00ease t\\u00ee B\\u00eaafr\\u00eeka\",\n\t\t\t\t\t\"common\": \"B\\u00eaafr\\u00eeka\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cf\"],\n\t\t\"cca2\": \"CF\",\n\t\t\"ccn3\": \"140\",\n\t\t\"cca3\": \"CAF\",\n\t\t\"cioc\": \"CAF\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"236\"],\n\t\t\"capital\": \"Bangui\",\n\t\t\"altSpellings\": [\"CF\", \"Central African Republic\", \"R\\u00e9publique centrafricaine\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"sag\": \"Sango\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Central African Republic\", \"common\": \"Gweriniaeth Canolbarth Affrica\"},\n\t\t\t\"deu\": {\"official\": \"Zentralafrikanische Republik\", \"common\": \"Zentralafrikanische Republik\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique centrafricaine\", \"common\": \"R\\u00e9publique centrafricaine\"},\n\t\t\t\"hrv\": {\"official\": \"Centralna Afri\\u010dka Republika\", \"common\": \"Srednjoafri\\u010dka Republika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Centrafricana\", \"common\": \"Repubblica Centrafricana\"},\n\t\t\t\"jpn\": {\"official\": \"\\u4e2d\\u592e\\u30a2\\u30d5\\u30ea\\u30ab\\u5171\\u548c\\u56fd\", \"common\": \"\\u4e2d\\u592e\\u30a2\\u30d5\\u30ea\\u30ab\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Centraal-Afrikaanse Republiek\", \"common\": \"Centraal-Afrikaanse Republiek\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Centro-Africano\", \"common\": \"Rep\\u00fablica Centro-Africana\"},\n\t\t\t\"rus\": {\"official\": \"\\u0426\\u0435\\u043d\\u0442\\u0440\\u0430\\u043b\\u044c\\u043d\\u043e-\\u0410\\u0444\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0426\\u0435\\u043d\\u0442\\u0440\\u0430\\u043b\\u044c\\u043d\\u043e\\u0430\\u0444\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Centroafricana\", \"common\": \"Rep\\u00fablica Centroafricana\"},\n\t\t\t\"fin\": {\"official\": \"Keski-Afrikan tasavalta\", \"common\": \"Keski-Afrikan tasavalta\"}\n\t\t},\n\t\t\"latlng\": [7, 21],\n\t\t\"demonym\": \"Central African\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CMR\", \"TCD\", \"COD\", \"COG\", \"SSD\", \"SDN\"],\n\t\t\"area\": 622984\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Canada\",\n\t\t\t\"official\": \"Canada\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Canada\",\n\t\t\t\t\t\"common\": \"Canada\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Canada\",\n\t\t\t\t\t\"common\": \"Canada\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ca\"],\n\t\t\"cca2\": \"CA\",\n\t\t\"ccn3\": \"124\",\n\t\t\"cca3\": \"CAN\",\n\t\t\"cioc\": \"CAN\",\n\t\t\"currency\": [\"CAD\"],\n\t\t\"callingCode\": [\"1\"],\n\t\t\"capital\": \"Ottawa\",\n\t\t\"altSpellings\": [\"CA\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Canada\", \"common\": \"Canada\"},\n\t\t\t\"deu\": {\"official\": \"Kanada\", \"common\": \"Kanada\"},\n\t\t\t\"fra\": {\"official\": \"Canada\", \"common\": \"Canada\"},\n\t\t\t\"hrv\": {\"official\": \"Kanada\", \"common\": \"Kanada\"},\n\t\t\t\"ita\": {\"official\": \"Canada\", \"common\": \"Canada\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30ca\\u30c0\", \"common\": \"\\u30ab\\u30ca\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Canada\", \"common\": \"Canada\"},\n\t\t\t\"por\": {\"official\": \"Canad\\u00e1\", \"common\": \"Canad\\u00e1\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u0430\\u043d\\u0430\\u0434\\u0430\", \"common\": \"\\u041a\\u0430\\u043d\\u0430\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Canad\\u00e1\", \"common\": \"Canad\\u00e1\"},\n\t\t\t\"fin\": {\"official\": \"Kanada\", \"common\": \"Kanada\"}\n\t\t},\n\t\t\"latlng\": [60, -95],\n\t\t\"demonym\": \"Canadian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"USA\"],\n\t\t\"area\": 9984670\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cocos (Keeling) Islands\",\n\t\t\t\"official\": \"Territory of the Cocos (Keeling) Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Territory of the Cocos (Keeling) Islands\",\n\t\t\t\t\t\"common\": \"Cocos (Keeling) Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cc\"],\n\t\t\"cca2\": \"CC\",\n\t\t\"ccn3\": \"166\",\n\t\t\"cca3\": \"CCK\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"61\"],\n\t\t\"capital\": \"West Island\",\n\t\t\"altSpellings\": [\"CC\", \"Territory of the Cocos (Keeling) Islands\", \"Keeling Islands\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Australia and New Zealand\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Territory of the Cocos (Keeling) Islands\", \"common\": \"Ynysoedd Cocos\"},\n\t\t\t\"deu\": {\"official\": \"Gebiet der Cocos (Keeling) Islands\", \"common\": \"Kokosinseln\"},\n\t\t\t\"fra\": {\"official\": \"Territoire des \\u00eeles Cocos (Keeling)\", \"common\": \"\\u00celes Cocos\"},\n\t\t\t\"hrv\": {\"official\": \"Teritoriju Kokosovi (Keeling) Islands\", \"common\": \"Kokosovi Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Territorio della (Keeling) Isole Cocos\", \"common\": \"Isole Cocos e Keeling\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30b3\\u30b9\\u8af8\\u5cf6\\u306e\\u9818\\u571f\", \"common\": \"\\u30b3\\u30b3\\u30b9\\uff08\\u30ad\\u30fc\\u30ea\\u30f3\\u30b0\\uff09\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Grondgebied van de Eilanden Cocos (Keeling )\", \"common\": \"Cocoseilanden\"},\n\t\t\t\"por\": {\"official\": \"Territ\\u00f3rio dos Cocos (Keeling)\", \"common\": \"Ilhas Cocos (Keeling)\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u041a\\u043e\\u043a\\u043e\\u0441\\u043e\\u0432\\u044b\\u0435 (\\u041a\\u0438\\u043b\\u0438\\u043d\\u0433) \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u041a\\u043e\\u043a\\u043e\\u0441\\u043e\\u0432\\u044b\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Territorio de los (Keeling) Islas Cocos\", \"common\": \"Islas Cocos o Islas Keeling\"},\n\t\t\t\"fin\": {\"official\": \"Kookossaaret\", \"common\": \"Kookossaaret\"}\n\t\t},\n\t\t\"latlng\": [-12.5, 96.83333333],\n\t\t\"demonym\": \"Cocos Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 14\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Switzerland\",\n\t\t\t\"official\": \"Swiss Confederation\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Conf\\u00e9d\\u00e9ration suisse\",\n\t\t\t\t\t\"common\": \"Suisse\"\n\t\t\t\t},\n\t\t\t\t\"gsw\": {\n\t\t\t\t\t\"official\": \"Schweizerische Eidgenossenschaft\",\n\t\t\t\t\t\"common\": \"Schweiz\"\n\t\t\t\t},\n\t\t\t\t\"ita\": {\n\t\t\t\t\t\"official\": \"Confederazione Svizzera\",\n\t\t\t\t\t\"common\": \"Svizzera\"\n\t\t\t\t},\n\t\t\t\t\"roh\": {\n\t\t\t\t\t\"official\": \"Confederaziun svizra\",\n\t\t\t\t\t\"common\": \"Svizra\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ch\"],\n\t\t\"cca2\": \"CH\",\n\t\t\"ccn3\": \"756\",\n\t\t\"cca3\": \"CHE\",\n\t\t\"cioc\": \"SUI\",\n\t\t\"currency\": [\"CHE\", \"CHF\", \"CHW\"],\n\t\t\"callingCode\": [\"41\"],\n\t\t\"capital\": \"Bern\",\n\t\t\"altSpellings\": [\"CH\", \"Swiss Confederation\", \"Schweiz\", \"Suisse\", \"Svizzera\", \"Svizra\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"gsw\": \"Swiss German\",\n\t\t\t\"ita\": \"Italian\",\n\t\t\t\"roh\": \"Romansh\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Schweizerische Eidgenossenschaft\", \"common\": \"Schweiz\"},\n\t\t\t\"fra\": {\"official\": \"Conf\\u00e9d\\u00e9ration suisse\", \"common\": \"Suisse\"},\n\t\t\t\"hrv\": {\"official\": \"\\u0161vicarska Konfederacija\", \"common\": \"\\u0160vicarska\"},\n\t\t\t\"ita\": {\"official\": \"Confederazione svizzera\", \"common\": \"Svizzera\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30a4\\u30b9\\u9023\\u90a6\", \"common\": \"\\u30b9\\u30a4\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Zwitserse Confederatie\", \"common\": \"Zwitserland\"},\n\t\t\t\"por\": {\"official\": \"Confedera\\u00e7\\u00e3o Su\\u00ed\\u00e7a\", \"common\": \"Su\\u00ed\\u00e7a\"},\n\t\t\t\"rus\": {\"official\": \"\\u0428\\u0432\\u0435\\u0439\\u0446\\u0430\\u0440\\u0441\\u043a\\u0430\\u044f \\u041a\\u043e\\u043d\\u0444\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f\", \"common\": \"\\u0428\\u0432\\u0435\\u0439\\u0446\\u0430\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Confederaci\\u00f3n Suiza\", \"common\": \"Suiza\"},\n\t\t\t\"fin\": {\"official\": \"Sveitsin valaliitto\", \"common\": \"Sveitsi\"}\n\t\t},\n\t\t\"latlng\": [47, 8],\n\t\t\"demonym\": \"Swiss\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AUT\", \"FRA\", \"ITA\", \"LIE\", \"DEU\"],\n\t\t\"area\": 41284\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Chile\",\n\t\t\t\"official\": \"Republic of Chile\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Chile\",\n\t\t\t\t\t\"common\": \"Chile\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cl\"],\n\t\t\"cca2\": \"CL\",\n\t\t\"ccn3\": \"152\",\n\t\t\"cca3\": \"CHL\",\n\t\t\"cioc\": \"CHI\",\n\t\t\"currency\": [\"CLF\", \"CLP\"],\n\t\t\"callingCode\": [\"56\"],\n\t\t\"capital\": \"Santiago\",\n\t\t\"altSpellings\": [\"CL\", \"Republic of Chile\", \"Rep\\u00fablica de Chile\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Chile\", \"common\": \"Chile\"},\n\t\t\t\"deu\": {\"official\": \"Republik Chile\", \"common\": \"Chile\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Chili\", \"common\": \"Chili\"},\n\t\t\t\"hrv\": {\"official\": \"Republika \\u010cile\", \"common\": \"\\u010cile\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Cile\", \"common\": \"Cile\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c1\\u30ea\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c1\\u30ea\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Chili\", \"common\": \"Chili\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Chile\", \"common\": \"Chile\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0427\\u0438\\u043b\\u0438\", \"common\": \"\\u0427\\u0438\\u043b\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Chile\", \"common\": \"Chile\"},\n\t\t\t\"fin\": {\"official\": \"Chilen tasavalta\", \"common\": \"Chile\"}\n\t\t},\n\t\t\"latlng\": [-30, -71],\n\t\t\"demonym\": \"Chilean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ARG\", \"BOL\", \"PER\"],\n\t\t\"area\": 756102\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"China\",\n\t\t\t\"official\": \"People's Republic of China\",\n\t\t\t\"native\": {\n\t\t\t\t\"cmn\": {\n\t\t\t\t\t\"official\": \"\\u4e2d\\u534e\\u4eba\\u6c11\\u5171\\u548c\\u56fd\",\n\t\t\t\t\t\"common\": \"\\u4e2d\\u56fd\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cn\", \".\\u4e2d\\u56fd\", \".\\u4e2d\\u570b\", \".\\u516c\\u53f8\", \".\\u7f51\\u7edc\"],\n\t\t\"cca2\": \"CN\",\n\t\t\"ccn3\": \"156\",\n\t\t\"cca3\": \"CHN\",\n\t\t\"cioc\": \"CHN\",\n\t\t\"currency\": [\"CNY\"],\n\t\t\"callingCode\": [\"86\"],\n\t\t\"capital\": \"Beijing\",\n\t\t\"altSpellings\": [\"CN\", \"Zh\\u014dnggu\\u00f3\", \"Zhongguo\", \"Zhonghua\", \"People's Republic of China\", \"\\u4e2d\\u534e\\u4eba\\u6c11\\u5171\\u548c\\u56fd\", \"Zh\\u014dnghu\\u00e1 R\\u00e9nm\\u00edn G\\u00f2ngh\\u00e9gu\\u00f3\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"cmn\": \"Mandarin\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"People's Republic of China\", \"common\": \"Tsieina\"},\n\t\t\t\"deu\": {\"official\": \"Volksrepublik China\", \"common\": \"China\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique populaire de Chine\", \"common\": \"Chine\"},\n\t\t\t\"hrv\": {\"official\": \"Narodna Republika Kina\", \"common\": \"Kina\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica popolare cinese\", \"common\": \"Cina\"},\n\t\t\t\"jpn\": {\"official\": \"\\u4e2d\\u83ef\\u4eba\\u6c11\\u5171\\u548c\\u56fd\", \"common\": \"\\u4e2d\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Volksrepubliek China\", \"common\": \"China\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Popular da China\", \"common\": \"China\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0438\\u0442\\u0430\\u0439\", \"common\": \"\\u041a\\u0438\\u0442\\u0430\\u0439\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Popular de China\", \"common\": \"China\"},\n\t\t\t\"fin\": {\"official\": \"Kiinan kansantasavalta\", \"common\": \"Kiina\"}\n\t\t},\n\t\t\"latlng\": [35, 105],\n\t\t\"demonym\": \"Chinese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AFG\", \"BTN\", \"MMR\", \"HKG\", \"IND\", \"KAZ\", \"PRK\", \"KGZ\", \"LAO\", \"MAC\", \"MNG\", \"PAK\", \"RUS\", \"TJK\", \"VNM\"],\n\t\t\"area\": 9706961\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ivory Coast\",\n\t\t\t\"official\": \"Republic of C\\u00f4te d'Ivoire\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de C\\u00f4te d'Ivoire\",\n\t\t\t\t\t\"common\": \"C\\u00f4te d'Ivoire\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ci\"],\n\t\t\"cca2\": \"CI\",\n\t\t\"ccn3\": \"384\",\n\t\t\"cca3\": \"CIV\",\n\t\t\"cioc\": \"CIV\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"225\"],\n\t\t\"capital\": \"Yamoussoukro\",\n\t\t\"altSpellings\": [\"CI\", \"C\\u00f4te d'Ivoire\", \"Ivory Coast\", \"Republic of C\\u00f4te d'Ivoire\", \"R\\u00e9publique de C\\u00f4te d'Ivoire\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik C\\u00f4te d'Ivoire\", \"common\": \"Elfenbeink\\u00fcste\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de C\\u00f4te d' Ivoire\", \"common\": \"C\\u00f4te d'Ivoire\"},\n\t\t\t\"hrv\": {\"official\": \"Republika C\\u00f4te d'Ivoire\", \"common\": \"Obala Bjelokosti\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica della Costa d'Avorio\", \"common\": \"Costa d'Avorio\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30fc\\u30c8\\u30b8\\u30dc\\u30ef\\u30fc\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b3\\u30fc\\u30c8\\u30b8\\u30dc\\u30ef\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Ivoorkust\", \"common\": \"Ivoorkust\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da C\\u00f4te d'Ivoire\", \"common\": \"Costa do Marfim\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0442-\\u0434'\\u0418\\u0432\\u0443\\u0430\\u0440\\u0435\", \"common\": \"\\u041a\\u043e\\u0442-\\u0434\\u2019\\u0418\\u0432\\u0443\\u0430\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de C\\u00f4te d'Ivoire\", \"common\": \"Costa de Marfil\"},\n\t\t\t\"fin\": {\"official\": \"Norsunluurannikon tasavalta\", \"common\": \"Norsunluurannikko\"}\n\t\t},\n\t\t\"latlng\": [8, -5],\n\t\t\"demonym\": \"Ivorian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BFA\", \"GHA\", \"GIN\", \"LBR\", \"MLI\"],\n\t\t\"area\": 322463\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cameroon\",\n\t\t\t\"official\": \"Republic of Cameroon\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Cameroon\",\n\t\t\t\t\t\"common\": \"Cameroon\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Cameroun\",\n\t\t\t\t\t\"common\": \"Cameroun\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cm\"],\n\t\t\"cca2\": \"CM\",\n\t\t\"ccn3\": \"120\",\n\t\t\"cca3\": \"CMR\",\n\t\t\"cioc\": \"CMR\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"237\"],\n\t\t\"capital\": \"Yaound\\u00e9\",\n\t\t\"altSpellings\": [\"CM\", \"Republic of Cameroon\", \"R\\u00e9publique du Cameroun\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Cameroon\", \"common\": \"Camer\\u0175n\"},\n\t\t\t\"deu\": {\"official\": \"Republik Kamerun\", \"common\": \"Kamerun\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Cameroun\", \"common\": \"Cameroun\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kamerun\", \"common\": \"Kamerun\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Camerun\", \"common\": \"Camerun\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30e1\\u30eb\\u30fc\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ab\\u30e1\\u30eb\\u30fc\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Kameroen\", \"common\": \"Kameroen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica dos Camar\\u00f5es\", \"common\": \"Camar\\u00f5es\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0430\\u043c\\u0435\\u0440\\u0443\\u043d\", \"common\": \"\\u041a\\u0430\\u043c\\u0435\\u0440\\u0443\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Camer\\u00fan\", \"common\": \"Camer\\u00fan\"},\n\t\t\t\"fin\": {\"official\": \"Kamerunin tasavalta\", \"common\": \"Kamerun\"}\n\t\t},\n\t\t\"latlng\": [6, 12],\n\t\t\"demonym\": \"Cameroonian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CAF\", \"TCD\", \"COG\", \"GNQ\", \"GAB\", \"NGA\"],\n\t\t\"area\": 475442\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"DR Congo\",\n\t\t\t\"official\": \"Democratic Republic of the Congo\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique d\\u00e9mocratique du Congo\",\n\t\t\t\t\t\"common\": \"RD Congo\"\n\t\t\t\t},\n\t\t\t\t\"kon\": {\n\t\t\t\t\t\"official\": \"Repubilika ya Kongo Demokratiki\",\n\t\t\t\t\t\"common\": \"Repubilika ya Kongo Demokratiki\"\n\t\t\t\t},\n\t\t\t\t\"lin\": {\n\t\t\t\t\t\"official\": \"Republiki ya Kong\\u00f3 Demokratiki\",\n\t\t\t\t\t\"common\": \"Republiki ya Kong\\u00f3 Demokratiki\"\n\t\t\t\t},\n\t\t\t\t\"lua\": {\n\t\t\t\t\t\"official\": \"Ditunga dia Kongu wa Mungalaata\",\n\t\t\t\t\t\"common\": \"Ditunga dia Kongu wa Mungalaata\"\n\t\t\t\t},\n\t\t\t\t\"swa\": {\n\t\t\t\t\t\"official\": \"Jamhuri ya Kidemokrasia ya Kongo\",\n\t\t\t\t\t\"common\": \"Jamhuri ya Kidemokrasia ya Kongo\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cd\"],\n\t\t\"cca2\": \"CD\",\n\t\t\"ccn3\": \"180\",\n\t\t\"cca3\": \"COD\",\n\t\t\"cioc\": \"COD\",\n\t\t\"currency\": [\"CDF\"],\n\t\t\"callingCode\": [\"243\"],\n\t\t\"capital\": \"Kinshasa\",\n\t\t\"altSpellings\": [\"CD\", \"DR Congo\", \"Congo-Kinshasa\", \"Congo, the Democratic Republic of the\", \"DRC\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"kon\": \"Kikongo\",\n\t\t\t\"lin\": \"Lingala\",\n\t\t\t\"lua\": \"Tshiluba\",\n\t\t\t\"swa\": \"Swahili\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Democratic Republic of the Congo\", \"common\": \"Gweriniaeth Ddemocrataidd Congo\"},\n\t\t\t\"deu\": {\"official\": \"Demokratische Republik Kongo\", \"common\": \"Kongo (Dem. Rep.)\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique du Congo\", \"common\": \"Congo (R\\u00e9p. d\\u00e9m.)\"},\n\t\t\t\"hrv\": {\"official\": \"Demokratska Republika Kongo\", \"common\": \"Kongo, Demokratska Republika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Democratica del Congo\", \"common\": \"Congo (Rep. Dem.)\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30f3\\u30b4\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b3\\u30f3\\u30b4\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Republiek Congo\", \"common\": \"Congo (DRC)\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica do Congo\", \"common\": \"Rep\\u00fablica Democr\\u00e1tica do Congo\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043d\\u0433\\u043e\", \"common\": \"\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043d\\u0433\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica del Congo\", \"common\": \"Congo (Rep. Dem.)\"},\n\t\t\t\"fin\": {\"official\": \"Kongon demokraattinen tasavalta\", \"common\": \"Kongon demokraattinen tasavalta\"}\n\t\t},\n\t\t\"latlng\": [0, 25],\n\t\t\"demonym\": \"Congolese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AGO\", \"BDI\", \"CAF\", \"COG\", \"RWA\", \"SSD\", \"TZA\", \"UGA\", \"ZMB\"],\n\t\t\"area\": 2344858\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Republic of the Congo\",\n\t\t\t\"official\": \"Republic of the Congo\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Congo\",\n\t\t\t\t\t\"common\": \"R\\u00e9publique du Congo\"\n\t\t\t\t},\n\t\t\t\t\"kon\": {\n\t\t\t\t\t\"official\": \"Repubilika ya Kongo\",\n\t\t\t\t\t\"common\": \"Repubilika ya Kongo\"\n\t\t\t\t},\n\t\t\t\t\"lin\": {\n\t\t\t\t\t\"official\": \"Republ\\u00edki ya Kong\\u00f3\",\n\t\t\t\t\t\"common\": \"Republ\\u00edki ya Kong\\u00f3\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cg\"],\n\t\t\"cca2\": \"CG\",\n\t\t\"ccn3\": \"178\",\n\t\t\"cca3\": \"COG\",\n\t\t\"cioc\": \"CGO\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"242\"],\n\t\t\"capital\": \"Brazzaville\",\n\t\t\"altSpellings\": [\"CG\", \"Congo\", \"Congo-Brazzaville\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"kon\": \"Kikongo\",\n\t\t\t\"lin\": \"Lingala\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of the Congo\", \"common\": \"Gweriniaeth y Congo\"},\n\t\t\t\"deu\": {\"official\": \"Republik Kongo\", \"common\": \"Kongo\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Congo\", \"common\": \"Congo\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kongo\", \"common\": \"Kongo\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Congo\", \"common\": \"Congo\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30f3\\u30b4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b3\\u30f3\\u30b4\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Congo\", \"common\": \"Congo\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Congo\", \"common\": \"Congo\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043d\\u0433\\u043e\", \"common\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043d\\u0433\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica del Congo\", \"common\": \"Congo\"},\n\t\t\t\"fin\": {\"official\": \"Kongon tasavalta\", \"common\": \"Kongo-Brazzaville\"}\n\t\t},\n\t\t\"latlng\": [-1, 15],\n\t\t\"demonym\": \"Congolese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AGO\", \"CMR\", \"CAF\", \"COD\", \"GAB\"],\n\t\t\"area\": 342000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cook Islands\",\n\t\t\t\"official\": \"Cook Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Cook Islands\",\n\t\t\t\t\t\"common\": \"Cook Islands\"\n\t\t\t\t},\n\t\t\t\t\"rar\": {\n\t\t\t\t\t\"official\": \"K\\u016bki '\\u0100irani\",\n\t\t\t\t\t\"common\": \"K\\u016bki '\\u0100irani\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ck\"],\n\t\t\"cca2\": \"CK\",\n\t\t\"ccn3\": \"184\",\n\t\t\"cca3\": \"COK\",\n\t\t\"cioc\": \"COK\",\n\t\t\"currency\": [\"NZD\"],\n\t\t\"callingCode\": [\"682\"],\n\t\t\"capital\": \"Avarua\",\n\t\t\"altSpellings\": [\"CK\", \"K\\u016bki '\\u0100irani\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"rar\": \"Cook Islands M\\u0101ori\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Cook Islands\", \"common\": \"Ynysoedd Cook\"},\n\t\t\t\"deu\": {\"official\": \"Cook-Inseln\", \"common\": \"Cookinseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Cook\", \"common\": \"\\u00celes Cook\"},\n\t\t\t\"hrv\": {\"official\": \"Cook Islands\", \"common\": \"Cookovo Oto\\u010dje\"},\n\t\t\t\"ita\": {\"official\": \"Isole Cook\", \"common\": \"Isole Cook\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30af\\u30c3\\u30af\\u8af8\\u5cf6\", \"common\": \"\\u30af\\u30c3\\u30af\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Cook eilanden\", \"common\": \"Cookeilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Cook\", \"common\": \"Ilhas Cook\"},\n\t\t\t\"rus\": {\"official\": \"\\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041a\\u0443\\u043a\\u0430\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041a\\u0443\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas Cook\", \"common\": \"Islas Cook\"},\n\t\t\t\"fin\": {\"official\": \"Cookinsaaret\", \"common\": \"Cookinsaaret\"}\n\t\t},\n\t\t\"latlng\": [-21.23333333, -159.76666666],\n\t\t\"demonym\": \"Cook Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 236\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Colombia\",\n\t\t\t\"official\": \"Republic of Colombia\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Colombia\",\n\t\t\t\t\t\"common\": \"Colombia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".co\"],\n\t\t\"cca2\": \"CO\",\n\t\t\"ccn3\": \"170\",\n\t\t\"cca3\": \"COL\",\n\t\t\"cioc\": \"COL\",\n\t\t\"currency\": [\"COP\"],\n\t\t\"callingCode\": [\"57\"],\n\t\t\"capital\": \"Bogot\\u00e1\",\n\t\t\"altSpellings\": [\"CO\", \"Republic of Colombia\", \"Rep\\u00fablica de Colombia\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Colombia\", \"common\": \"Colombia\"},\n\t\t\t\"deu\": {\"official\": \"Republik Kolumbien\", \"common\": \"Kolumbien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Colombie\", \"common\": \"Colombie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kolumbija\", \"common\": \"Kolumbija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Colombia\", \"common\": \"Colombia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30ed\\u30f3\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b3\\u30ed\\u30f3\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Colombia\", \"common\": \"Colombia\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Col\\u00f4mbia\", \"common\": \"Col\\u00f4mbia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043b\\u0443\\u043c\\u0431\\u0438\\u044f\", \"common\": \"\\u041a\\u043e\\u043b\\u0443\\u043c\\u0431\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Colombia\", \"common\": \"Colombia\"},\n\t\t\t\"fin\": {\"official\": \"Kolumbian tasavalta\", \"common\": \"Kolumbia\"}\n\t\t},\n\t\t\"latlng\": [4, -72],\n\t\t\"demonym\": \"Colombian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRA\", \"ECU\", \"PAN\", \"PER\", \"VEN\"],\n\t\t\"area\": 1141748\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Comoros\",\n\t\t\t\"official\": \"Union of the Comoros\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u0627\\u062a\\u062d\\u0627\\u062f \\u0627\\u0644\\u0642\\u0645\\u0631\\u064a\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0642\\u0645\\u0631\\u200e\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Union des Comores\",\n\t\t\t\t\t\"common\": \"Comores\"\n\t\t\t\t},\n\t\t\t\t\"zdj\": {\n\t\t\t\t\t\"official\": \"Udzima wa Komori\",\n\t\t\t\t\t\"common\": \"Komori\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".km\"],\n\t\t\"cca2\": \"KM\",\n\t\t\"ccn3\": \"174\",\n\t\t\"cca3\": \"COM\",\n\t\t\"cioc\": \"COM\",\n\t\t\"currency\": [\"KMF\"],\n\t\t\"callingCode\": [\"269\"],\n\t\t\"capital\": \"Moroni\",\n\t\t\"altSpellings\": [\"KM\", \"Union of the Comoros\", \"Union des Comores\", \"Udzima wa Komori\", \"al-Itti\\u1e25\\u0101d al-Qumur\\u012b\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"zdj\": \"Comorian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Union of the Comoros\", \"common\": \"Comoros\"},\n\t\t\t\"deu\": {\"official\": \"Union der Komoren\", \"common\": \"Union der Komoren\"},\n\t\t\t\"fra\": {\"official\": \"Union des Comores\", \"common\": \"Comores\"},\n\t\t\t\"hrv\": {\"official\": \"Savez Komori\", \"common\": \"Komori\"},\n\t\t\t\"ita\": {\"official\": \"Unione delle Comore\", \"common\": \"Comore\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30e2\\u30ed\\u9023\\u5408\", \"common\": \"\\u30b3\\u30e2\\u30ed\"},\n\t\t\t\"nld\": {\"official\": \"Unie van de Comoren\", \"common\": \"Comoren\"},\n\t\t\t\"por\": {\"official\": \"Uni\\u00e3o das Comores\", \"common\": \"Comores\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u044e\\u0437 \\u041a\\u043e\\u043c\\u043e\\u0440\\u0441\\u043a\\u0438\\u0445 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u043e\\u0432\", \"common\": \"\\u041a\\u043e\\u043c\\u043e\\u0440\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"Uni\\u00f3n de las Comoras\", \"common\": \"Comoras\"},\n\t\t\t\"fin\": {\"official\": \"Komorien liitto\", \"common\": \"Komorit\"}\n\t\t},\n\t\t\"latlng\": [-12.16666666, 44.25],\n\t\t\"demonym\": \"Comoran\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 1862\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cape Verde\",\n\t\t\t\"official\": \"Republic of Cabo Verde\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Cabo Verde\",\n\t\t\t\t\t\"common\": \"Cabo Verde\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cv\"],\n\t\t\"cca2\": \"CV\",\n\t\t\"ccn3\": \"132\",\n\t\t\"cca3\": \"CPV\",\n\t\t\"cioc\": \"CPV\",\n\t\t\"currency\": [\"CVE\"],\n\t\t\"callingCode\": [\"238\"],\n\t\t\"capital\": \"Praia\",\n\t\t\"altSpellings\": [\"CV\", \"Republic of Cabo Verde\", \"Rep\\u00fablica de Cabo Verde\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Cabo Verde\", \"common\": \"Cape Verde\"},\n\t\t\t\"deu\": {\"official\": \"Republik Cabo Verde\", \"common\": \"Kap Verde\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Cap-Vert\", \"common\": \"\\u00celes du Cap-Vert\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Cabo Verde\", \"common\": \"Zelenortska Republika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Capo Verde\", \"common\": \"Capo Verde\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30fc\\u30dc\\u30d9\\u30eb\\u30c7\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ab\\u30fc\\u30dc\\u30d9\\u30eb\\u30c7\"},\n\t\t\t\"nld\": {\"official\": \"Republiek van Cabo Verde\", \"common\": \"Kaapverdi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Cabo Verde\", \"common\": \"Cabo Verde\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0430\\u0431\\u043e -\\u0412\\u0435\\u0440\\u0434\\u0435\", \"common\": \"\\u041a\\u0430\\u0431\\u043e-\\u0412\\u0435\\u0440\\u0434\\u0435\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Cabo Verde\", \"common\": \"Cabo Verde\"},\n\t\t\t\"fin\": {\"official\": \"Kap Verden tasavalta\", \"common\": \"Kap Verde\"}\n\t\t},\n\t\t\"latlng\": [16, -24],\n\t\t\"demonym\": \"Cape Verdian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 4033\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Costa Rica\",\n\t\t\t\"official\": \"Republic of Costa Rica\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Costa Rica\",\n\t\t\t\t\t\"common\": \"Costa Rica\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cr\"],\n\t\t\"cca2\": \"CR\",\n\t\t\"ccn3\": \"188\",\n\t\t\"cca3\": \"CRI\",\n\t\t\"cioc\": \"CRC\",\n\t\t\"currency\": [\"CRC\"],\n\t\t\"callingCode\": [\"506\"],\n\t\t\"capital\": \"San Jos\\u00e9\",\n\t\t\"altSpellings\": [\"CR\", \"Republic of Costa Rica\", \"Rep\\u00fablica de Costa Rica\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"deu\": {\"official\": \"Republik Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kostarika\", \"common\": \"Kostarika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b3\\u30b9\\u30bf\\u30ea\\u30ab\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b3\\u30b9\\u30bf\\u30ea\\u30ab\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0441\\u0442\\u0430-\\u0420\\u0438\\u043a\\u0430\", \"common\": \"\\u041a\\u043e\\u0441\\u0442\\u0430-\\u0420\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Costa Rica\", \"common\": \"Costa Rica\"},\n\t\t\t\"fin\": {\"official\": \"Costa Rican tasavalta\", \"common\": \"Costa Rica\"}\n\t\t},\n\t\t\"latlng\": [10, -84],\n\t\t\"demonym\": \"Costa Rican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"NIC\", \"PAN\"],\n\t\t\"area\": 51100\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cuba\",\n\t\t\t\"official\": \"Republic of Cuba\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Cuba\",\n\t\t\t\t\t\"common\": \"Cuba\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cu\"],\n\t\t\"cca2\": \"CU\",\n\t\t\"ccn3\": \"192\",\n\t\t\"cca3\": \"CUB\",\n\t\t\"cioc\": \"CUB\",\n\t\t\"currency\": [\"CUC\", \"CUP\"],\n\t\t\"callingCode\": [\"53\"],\n\t\t\"capital\": \"Havana\",\n\t\t\"altSpellings\": [\"CU\", \"Republic of Cuba\", \"Rep\\u00fablica de Cuba\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Cuba\", \"common\": \"Ciwba\"},\n\t\t\t\"deu\": {\"official\": \"Republik Kuba\", \"common\": \"Kuba\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Cuba\", \"common\": \"Cuba\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kuba\", \"common\": \"Kuba\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Cuba\", \"common\": \"Cuba\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ad\\u30e5\\u30fc\\u30d0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ad\\u30e5\\u30fc\\u30d0\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Cuba\", \"common\": \"Cuba\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Cuba\", \"common\": \"Cuba\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0443\\u0431\\u0430\", \"common\": \"\\u041a\\u0443\\u0431\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Cuba\", \"common\": \"Cuba\"},\n\t\t\t\"fin\": {\"official\": \"Kuuban tasavalta\", \"common\": \"Kuuba\"}\n\t\t},\n\t\t\"latlng\": [21.5, -80],\n\t\t\"demonym\": \"Cuban\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 109884\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cura\\u00e7ao\",\n\t\t\t\"official\": \"Country of Cura\\u00e7ao\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Country of Cura\\u00e7ao\",\n\t\t\t\t\t\"common\": \"Cura\\u00e7ao\"\n\t\t\t\t},\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Land Cura\\u00e7ao\",\n\t\t\t\t\t\"common\": \"Cura\\u00e7ao\"\n\t\t\t\t},\n\t\t\t\t\"pap\": {\n\t\t\t\t\t\"official\": \"Pais K\\u00f2rsou\",\n\t\t\t\t\t\"common\": \"Pais K\\u00f2rsou\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cw\"],\n\t\t\"cca2\": \"CW\",\n\t\t\"ccn3\": \"531\",\n\t\t\"cca3\": \"CUW\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"ANG\"],\n\t\t\"callingCode\": [\"5999\"],\n\t\t\"capital\": \"Willemstad\",\n\t\t\"altSpellings\": [\"CW\", \"Curacao\", \"K\\u00f2rsou\", \"Country of Cura\\u00e7ao\", \"Land Cura\\u00e7ao\", \"Pais K\\u00f2rsou\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"nld\": \"Dutch\",\n\t\t\t\"pap\": \"Papiamento\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"nld\": {\"official\": \"Land Cura\\u00e7ao\", \"common\": \"Cura\\u00e7ao\"},\n\t\t\t\"por\": {\"official\": \"Pa\\u00eds de Cura\\u00e7ao\", \"common\": \"ilha da Cura\\u00e7\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0442\\u0440\\u0430\\u043d\\u0430 \\u041a\\u044e\\u0440\\u0430\\u0441\\u0430\\u043e\", \"common\": \"\\u041a\\u044e\\u0440\\u0430\\u0441\\u0430\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Pa\\u00eds de Curazao\", \"common\": \"Curazao\"},\n\t\t\t\"fin\": {\"official\": \"Cura\\u00e7ao\", \"common\": \"Cura\\u00e7ao\"}\n\t\t},\n\t\t\"latlng\": [12.116667, -68.933333],\n\t\t\"demonym\": \"Dutch\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 444\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Christmas Island\",\n\t\t\t\"official\": \"Territory of Christmas Island\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Territory of Christmas Island\",\n\t\t\t\t\t\"common\": \"Christmas Island\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cx\"],\n\t\t\"cca2\": \"CX\",\n\t\t\"ccn3\": \"162\",\n\t\t\"cca3\": \"CXR\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"61\"],\n\t\t\"capital\": \"Flying Fish Cove\",\n\t\t\"altSpellings\": [\"CX\", \"Territory of Christmas Island\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Australia and New Zealand\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Territory of Christmas Island\", \"common\": \"Ynys y Nadolig\"},\n\t\t\t\"deu\": {\"official\": \"Gebiet der Weihnachtsinsel\", \"common\": \"Weihnachtsinsel\"},\n\t\t\t\"fra\": {\"official\": \"Territoire de l'\\u00eele Christmas\", \"common\": \"\\u00cele Christmas\"},\n\t\t\t\"hrv\": {\"official\": \"Teritorij Bo\\u017ei\\u0107ni otok\", \"common\": \"Bo\\u017ei\\u0107ni otok\"},\n\t\t\t\"ita\": {\"official\": \"Territorio di Christmas Island\", \"common\": \"Isola di Natale\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30af\\u30ea\\u30b9\\u30de\\u30b9\\u5cf6\\u306e\\u9818\\u571f\", \"common\": \"\\u30af\\u30ea\\u30b9\\u30de\\u30b9\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Grondgebied van Christmas Island\", \"common\": \"Christmaseiland\"},\n\t\t\t\"por\": {\"official\": \"Territ\\u00f3rio da Ilha Christmas\", \"common\": \"Ilha do Natal\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u0420\\u043e\\u0436\\u0434\\u0435\\u0441\\u0442\\u0432\\u0430\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u0420\\u043e\\u0436\\u0434\\u0435\\u0441\\u0442\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Territorio de la Isla de Navidad\", \"common\": \"Isla de Navidad\"},\n\t\t\t\"fin\": {\"official\": \"Joulusaaren alue\", \"common\": \"Joulusaari\"}\n\t\t},\n\t\t\"latlng\": [-10.5, 105.66666666],\n\t\t\"demonym\": \"Christmas Island\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 135\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cayman Islands\",\n\t\t\t\"official\": \"Cayman Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Cayman Islands\",\n\t\t\t\t\t\"common\": \"Cayman Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ky\"],\n\t\t\"cca2\": \"KY\",\n\t\t\"ccn3\": \"136\",\n\t\t\"cca3\": \"CYM\",\n\t\t\"cioc\": \"CAY\",\n\t\t\"currency\": [\"KYD\"],\n\t\t\"callingCode\": [\"1345\"],\n\t\t\"capital\": \"George Town\",\n\t\t\"altSpellings\": [\"KY\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Cayman Islands\", \"common\": \"Ynysoedd_Cayman\"},\n\t\t\t\"deu\": {\"official\": \"Cayman-Inseln\", \"common\": \"Kaimaninseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Ca\\u00efmans\", \"common\": \"\\u00celes Ca\\u00efmans\"},\n\t\t\t\"hrv\": {\"official\": \"Kajmanski otoci\", \"common\": \"Kajmanski otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Cayman\", \"common\": \"Isole Cayman\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b1\\u30a4\\u30de\\u30f3\\u8af8\\u5cf6\", \"common\": \"\\u30b1\\u30a4\\u30de\\u30f3\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Caymaneilanden\", \"common\": \"Caymaneilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Cayman\", \"common\": \"Ilhas Caim\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u0430\\u0439\\u043c\\u0430\\u043d\\u043e\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u041a\\u0430\\u0439\\u043c\\u0430\\u043d\\u043e\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas Caim\\u00e1n\", \"common\": \"Islas Caim\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Caymansaaret\", \"common\": \"Caymansaaret\"}\n\t\t},\n\t\t\"latlng\": [19.5, -80.5],\n\t\t\"demonym\": \"Caymanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 264\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cyprus\",\n\t\t\t\"official\": \"Republic of Cyprus\",\n\t\t\t\"native\": {\n\t\t\t\t\"ell\": {\n\t\t\t\t\t\"official\": \"\\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1 \\u03c4\\u03b7\\u03c2 \\u039a\\u03cd\\u03c0\\u03c1\\u03bf\\u03c2\",\n\t\t\t\t\t\"common\": \"\\u039a\\u03cd\\u03c0\\u03c1\\u03bf\\u03c2\"\n\t\t\t\t},\n\t\t\t\t\"tur\": {\n\t\t\t\t\t\"official\": \"K\\u0131br\\u0131s Cumhuriyeti\",\n\t\t\t\t\t\"common\": \"K\\u0131br\\u0131s\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cy\"],\n\t\t\"cca2\": \"CY\",\n\t\t\"ccn3\": \"196\",\n\t\t\"cca3\": \"CYP\",\n\t\t\"cioc\": \"CYP\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"357\"],\n\t\t\"capital\": \"Nicosia\",\n\t\t\"altSpellings\": [\"CY\", \"K\\u00fdpros\", \"K\\u0131br\\u0131s\", \"Republic of Cyprus\", \"\\u039a\\u03c5\\u03c0\\u03c1\\u03b9\\u03b1\\u03ba\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\", \"K\\u0131br\\u0131s Cumhuriyeti\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ell\": \"Greek\",\n\t\t\t\"tur\": \"Turkish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Cyprus\", \"common\": \"Cyprus\"},\n\t\t\t\"deu\": {\"official\": \"Republik Zypern\", \"common\": \"Zypern\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Chypre\", \"common\": \"Chypre\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Cipar\", \"common\": \"Cipar\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Cipro\", \"common\": \"Cipro\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ad\\u30d7\\u30ed\\u30b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ad\\u30d7\\u30ed\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Cyprus\", \"common\": \"Cyprus\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Chipre\", \"common\": \"Chipre\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0438\\u043f\\u0440\", \"common\": \"\\u041a\\u0438\\u043f\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Chipre\", \"common\": \"Chipre\"},\n\t\t\t\"fin\": {\"official\": \"Kyproksen tasavalta\", \"common\": \"Kypros\"}\n\t\t},\n\t\t\"latlng\": [35, 33],\n\t\t\"demonym\": \"Cypriot\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GBR\"],\n\t\t\"area\": 9251\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Czech Republic\",\n\t\t\t\"official\": \"Czech Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ces\": {\n\t\t\t\t\t\"official\": \"\\u010desk\\u00e1 republika\",\n\t\t\t\t\t\"common\": \"\\u010cesk\\u00e1 republika\"\n\t\t\t\t},\n\t\t\t\t\"slk\": {\n\t\t\t\t\t\"official\": \"\\u010cesk\\u00e1 republika\",\n\t\t\t\t\t\"common\": \"\\u010cesk\\u00e1 republika\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".cz\"],\n\t\t\"cca2\": \"CZ\",\n\t\t\"ccn3\": \"203\",\n\t\t\"cca3\": \"CZE\",\n\t\t\"cioc\": \"CZE\",\n\t\t\"currency\": [\"CZK\"],\n\t\t\"callingCode\": [\"420\"],\n\t\t\"capital\": \"Prague\",\n\t\t\"altSpellings\": [\"CZ\", \"\\u010cesk\\u00e1 republika\", \"\\u010cesko\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ces\": \"Czech\",\n\t\t\t\"slk\": \"Slovak\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Czech Republic\", \"common\": \"Y Weriniaeth Tsiec\"},\n\t\t\t\"deu\": {\"official\": \"Tschechische Republik\", \"common\": \"Tschechische Republik\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique tch\\u00e8que\", \"common\": \"R\\u00e9publique tch\\u00e8que\"},\n\t\t\t\"hrv\": {\"official\": \"\\u010ce\\u0161ka\", \"common\": \"\\u010ce\\u0161ka\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Ceca\", \"common\": \"Repubblica Ceca\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c1\\u30a7\\u30b3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c1\\u30a7\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Tsjechische Republiek\", \"common\": \"Tsjechi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Checa\", \"common\": \"Rep\\u00fablica Checa\"},\n\t\t\t\"rus\": {\"official\": \"\\u0427\\u0435\\u0448\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0427\\u0435\\u0445\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Checa\", \"common\": \"Rep\\u00fablica Checa\"},\n\t\t\t\"fin\": {\"official\": \"T\\u0161ekin tasavalta\", \"common\": \"T\\u0161ekki\"}\n\t\t},\n\t\t\"latlng\": [49.75, 15.5],\n\t\t\"demonym\": \"Czech\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AUT\", \"DEU\", \"POL\", \"SVK\"],\n\t\t\"area\": 78865\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Germany\",\n\t\t\t\"official\": \"Federal Republic of Germany\",\n\t\t\t\"native\": {\n\t\t\t\t\"deu\": {\n\t\t\t\t\t\"official\": \"Bundesrepublik Deutschland\",\n\t\t\t\t\t\"common\": \"Deutschland\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".de\"],\n\t\t\"cca2\": \"DE\",\n\t\t\"ccn3\": \"276\",\n\t\t\"cca3\": \"DEU\",\n\t\t\"cioc\": \"GER\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"49\"],\n\t\t\"capital\": \"Berlin\",\n\t\t\"altSpellings\": [\"DE\", \"Federal Republic of Germany\", \"Bundesrepublik Deutschland\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"deu\": \"German\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Bundesrepublik Deutschland\", \"common\": \"Deutschland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique f\\u00e9d\\u00e9rale d'Allemagne\", \"common\": \"Allemagne\"},\n\t\t\t\"hrv\": {\"official\": \"Njema\\u010dka Federativna Republika\", \"common\": \"Njema\\u010dka\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federale di Germania\", \"common\": \"Germania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c9\\u30a4\\u30c4\\u9023\\u90a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c9\\u30a4\\u30c4\"},\n\t\t\t\"nld\": {\"official\": \"Bondsrepubliek Duitsland\", \"common\": \"Duitsland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Federal da Alemanha\", \"common\": \"Alemanha\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0435\\u0440\\u043c\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u0413\\u0435\\u0440\\u043c\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Federal de Alemania\", \"common\": \"Alemania\"},\n\t\t\t\"fin\": {\"official\": \"Saksan liittotasavalta\", \"common\": \"Saksa\"}\n\t\t},\n\t\t\"latlng\": [51, 9],\n\t\t\"demonym\": \"German\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AUT\", \"BEL\", \"CZE\", \"DNK\", \"FRA\", \"LUX\", \"NLD\", \"POL\", \"CHE\"],\n\t\t\"area\": 357114\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Djibouti\",\n\t\t\t\"official\": \"Republic of Djibouti\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u062c\\u064a\\u0628\\u0648\\u062a\\u064a\",\n\t\t\t\t\t\"common\": \"\\u062c\\u064a\\u0628\\u0648\\u062a\\u064a\\u200e\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de Djibouti\",\n\t\t\t\t\t\"common\": \"Djibouti\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".dj\"],\n\t\t\"cca2\": \"DJ\",\n\t\t\"ccn3\": \"262\",\n\t\t\"cca3\": \"DJI\",\n\t\t\"cioc\": \"DJI\",\n\t\t\"currency\": [\"DJF\"],\n\t\t\"callingCode\": [\"253\"],\n\t\t\"capital\": \"Djibouti\",\n\t\t\"altSpellings\": [\"DJ\", \"Jabuuti\", \"Gabuuti\", \"Republic of Djibouti\", \"R\\u00e9publique de Djibouti\", \"Gabuutih Ummuuno\", \"Jamhuuriyadda Jabuuti\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Djibouti\", \"common\": \"Djibouti\"},\n\t\t\t\"deu\": {\"official\": \"Republik Dschibuti\", \"common\": \"Dschibuti\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Djibouti\", \"common\": \"Djibouti\"},\n\t\t\t\"hrv\": {\"official\": \"Republika D\\u017eibuti\", \"common\": \"D\\u017eibuti\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Gibuti\", \"common\": \"Gibuti\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b8\\u30d6\\u30c1\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b8\\u30d6\\u30c1\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Djibouti\", \"common\": \"Djibouti\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Djibouti\", \"common\": \"Djibouti\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0414\\u0436\\u0438\\u0431\\u0443\\u0442\\u0438\", \"common\": \"\\u0414\\u0436\\u0438\\u0431\\u0443\\u0442\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Djibouti\", \"common\": \"Djibouti\"},\n\t\t\t\"fin\": {\"official\": \"Dijiboutin tasavalta\", \"common\": \"Dijibouti\"}\n\t\t},\n\t\t\"latlng\": [11.5, 43],\n\t\t\"demonym\": \"Djibouti\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ERI\", \"ETH\", \"SOM\"],\n\t\t\"area\": 23200\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Dominica\",\n\t\t\t\"official\": \"Commonwealth of Dominica\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Commonwealth of Dominica\",\n\t\t\t\t\t\"common\": \"Dominica\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".dm\"],\n\t\t\"cca2\": \"DM\",\n\t\t\"ccn3\": \"212\",\n\t\t\"cca3\": \"DMA\",\n\t\t\"cioc\": \"DMA\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1767\"],\n\t\t\"capital\": \"Roseau\",\n\t\t\"altSpellings\": [\"DM\", \"Dominique\", \"Wai\\u2018tu kubuli\", \"Commonwealth of Dominica\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Commonwealth of Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"deu\": {\"official\": \"Commonwealth von Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"fra\": {\"official\": \"Commonwealth de la Dominique\", \"common\": \"Dominique\"},\n\t\t\t\"hrv\": {\"official\": \"Zajednica Dominika\", \"common\": \"Dominika\"},\n\t\t\t\"ita\": {\"official\": \"Commonwealth di Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c9\\u30df\\u30cb\\u30ab\\u56fd\", \"common\": \"\\u30c9\\u30df\\u30cb\\u30ab\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Gemenebest Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"por\": {\"official\": \"Comunidade da Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0434\\u0440\\u0443\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0438\", \"common\": \"\\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Mancomunidad de Dominica\", \"common\": \"Dominica\"},\n\t\t\t\"fin\": {\"official\": \"Dominican liittovaltio\", \"common\": \"Dominica\"}\n\t\t},\n\t\t\"latlng\": [15.41666666, -61.33333333],\n\t\t\"demonym\": \"Dominican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 751\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Denmark\",\n\t\t\t\"official\": \"Kingdom of Denmark\",\n\t\t\t\"native\": {\n\t\t\t\t\"dan\": {\n\t\t\t\t\t\"official\": \"Kongeriget Danmark\",\n\t\t\t\t\t\"common\": \"Danmark\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".dk\"],\n\t\t\"cca2\": \"DK\",\n\t\t\"ccn3\": \"208\",\n\t\t\"cca3\": \"DNK\",\n\t\t\"cioc\": \"DEN\",\n\t\t\"currency\": [\"DKK\"],\n\t\t\"callingCode\": [\"45\"],\n\t\t\"capital\": \"Copenhagen\",\n\t\t\"altSpellings\": [\"DK\", \"Danmark\", \"Kingdom of Denmark\", \"Kongeriget Danmark\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"dan\": \"Danish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Kingdom of Denmark\", \"common\": \"Denmarc\"},\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich D\\u00e4nemark\", \"common\": \"D\\u00e4nemark\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Danemark\", \"common\": \"Danemark\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Danska\", \"common\": \"Danska\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Danimarca\", \"common\": \"Danimarca\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c7\\u30f3\\u30de\\u30fc\\u30af\\u738b\\u56fd\", \"common\": \"\\u30c7\\u30f3\\u30de\\u30fc\\u30af\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Denemarken\", \"common\": \"Denemarken\"},\n\t\t\t\"por\": {\"official\": \"Reino da Dinamarca\", \"common\": \"Dinamarca\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0414\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u0414\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Dinamarca\", \"common\": \"Dinamarca\"},\n\t\t\t\"fin\": {\"official\": \"Tanskan kuningaskunta\", \"common\": \"Tanska\"}\n\t\t},\n\t\t\"latlng\": [56, 10],\n\t\t\"demonym\": \"Danish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DEU\"],\n\t\t\"area\": 43094\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Dominican Republic\",\n\t\t\t\"official\": \"Dominican Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Dominicana\",\n\t\t\t\t\t\"common\": \"Rep\\u00fablica Dominicana\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".do\"],\n\t\t\"cca2\": \"DO\",\n\t\t\"ccn3\": \"214\",\n\t\t\"cca3\": \"DOM\",\n\t\t\"cioc\": \"DOM\",\n\t\t\"currency\": [\"DOP\"],\n\t\t\"callingCode\": [\"1809\", \"1829\", \"1849\"],\n\t\t\"capital\": \"Santo Domingo\",\n\t\t\"altSpellings\": [\"DO\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Dominican Republic\", \"common\": \"Gweriniaeth_Dominica\"},\n\t\t\t\"deu\": {\"official\": \"Dominikanische Republik\", \"common\": \"Dominikanische Republik\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique Dominicaine\", \"common\": \"R\\u00e9publique dominicaine\"},\n\t\t\t\"hrv\": {\"official\": \"Dominikanska Republika\", \"common\": \"Dominikanska Republika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Dominicana\", \"common\": \"Repubblica Dominicana\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c9\\u30df\\u30cb\\u30ab\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c9\\u30df\\u30cb\\u30ab\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Dominicaanse Republiek\", \"common\": \"Dominicaanse Republiek\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Dominicana\", \"common\": \"Rep\\u00fablica Dominicana\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Dominicana\", \"common\": \"Rep\\u00fablica Dominicana\"},\n\t\t\t\"fin\": {\"official\": \"Dominikaaninen tasavalta\", \"common\": \"Dominikaaninen tasavalta\"}\n\t\t},\n\t\t\"latlng\": [19, -70.66666666],\n\t\t\"demonym\": \"Dominican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"HTI\"],\n\t\t\"area\": 48671\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Algeria\",\n\t\t\t\"official\": \"People's Democratic Republic of Algeria\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u062f\\u064a\\u0645\\u0642\\u0631\\u0627\\u0637\\u064a\\u0629 \\u0627\\u0644\\u0634\\u0639\\u0628\\u064a\\u0629 \\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".dz\", \"\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631.\"],\n\t\t\"cca2\": \"DZ\",\n\t\t\"ccn3\": \"012\",\n\t\t\"cca3\": \"DZA\",\n\t\t\"cioc\": \"ALG\",\n\t\t\"currency\": [\"DZD\"],\n\t\t\"callingCode\": [\"213\"],\n\t\t\"capital\": \"Algiers\",\n\t\t\"altSpellings\": [\"DZ\", \"Dzayer\", \"Alg\\u00e9rie\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"People's Democratic Republic of Algeria\", \"common\": \"Algeria\"},\n\t\t\t\"deu\": {\"official\": \"Demokratische Volksrepublik Algerien\", \"common\": \"Algerien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique et populaire d'Alg\\u00e9rie\", \"common\": \"Alg\\u00e9rie\"},\n\t\t\t\"hrv\": {\"official\": \"Narodna Demokratska Republika Al\\u017eir\", \"common\": \"Al\\u017eir\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica popolare democratica di Algeria\", \"common\": \"Algeria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30eb\\u30b8\\u30a7\\u30ea\\u30a2\\u4eba\\u6c11\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30eb\\u30b8\\u30a7\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Volksrepubliek Algerije\", \"common\": \"Algerije\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Argelina Democr\\u00e1tica e Popular\", \"common\": \"Arg\\u00e9lia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e-\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0410\\u043b\\u0436\\u0438\\u0440\", \"common\": \"\\u0410\\u043b\\u0436\\u0438\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Argelina Democr\\u00e1tica y Popular\", \"common\": \"Argelia\"},\n\t\t\t\"fin\": {\"official\": \"Algerian demokraattinen kansantasavalta\", \"common\": \"Algeria\"}\n\t\t},\n\t\t\"latlng\": [28, 3],\n\t\t\"demonym\": \"Algerian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"TUN\", \"LBY\", \"NER\", \"ESH\", \"MRT\", \"MLI\", \"MAR\"],\n\t\t\"area\": 2381741\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ecuador\",\n\t\t\t\"official\": \"Republic of Ecuador\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica del Ecuador\",\n\t\t\t\t\t\"common\": \"Ecuador\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ec\"],\n\t\t\"cca2\": \"EC\",\n\t\t\"ccn3\": \"218\",\n\t\t\"cca3\": \"ECU\",\n\t\t\"cioc\": \"ECU\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"593\"],\n\t\t\"capital\": \"Quito\",\n\t\t\"altSpellings\": [\"EC\", \"Republic of Ecuador\", \"Rep\\u00fablica del Ecuador\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Ecuador\", \"common\": \"Ecwador\"},\n\t\t\t\"deu\": {\"official\": \"Republik Ecuador\", \"common\": \"Ecuador\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de l'\\u00c9quateur\", \"common\": \"\\u00c9quateur\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Ekvador\", \"common\": \"Ekvador\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'Ecuador\", \"common\": \"Ecuador\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30af\\u30a2\\u30c9\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a8\\u30af\\u30a2\\u30c9\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Ecuador\", \"common\": \"Ecuador\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Equador\", \"common\": \"Equador\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u042d\\u043a\\u0432\\u0430\\u0434\\u043e\\u0440\", \"common\": \"\\u042d\\u043a\\u0432\\u0430\\u0434\\u043e\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica del Ecuador\", \"common\": \"Ecuador\"},\n\t\t\t\"fin\": {\"official\": \"Ecuadorin tasavalta\", \"common\": \"Ecuador\"}\n\t\t},\n\t\t\"latlng\": [-2, -77.5],\n\t\t\"demonym\": \"Ecuadorean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"COL\", \"PER\"],\n\t\t\"area\": 276841\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Egypt\",\n\t\t\t\"official\": \"Arab Republic of Egypt\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0645\\u0635\\u0631 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0645\\u0635\\u0631\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".eg\", \".\\u0645\\u0635\\u0631\"],\n\t\t\"cca2\": \"EG\",\n\t\t\"ccn3\": \"818\",\n\t\t\"cca3\": \"EGY\",\n\t\t\"cioc\": \"EGY\",\n\t\t\"currency\": [\"EGP\"],\n\t\t\"callingCode\": [\"20\"],\n\t\t\"capital\": \"Cairo\",\n\t\t\"altSpellings\": [\"EG\", \"Arab Republic of Egypt\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Arab Republic of Egypt\", \"common\": \"Yr Aifft\"},\n\t\t\t\"deu\": {\"official\": \"Arabische Republik \\u00c4gypten\", \"common\": \"\\u00c4gypten\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique arabe d'\\u00c9gypte\", \"common\": \"\\u00c9gypte\"},\n\t\t\t\"hrv\": {\"official\": \"Arapska Republika Egipat\", \"common\": \"Egipat\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica araba d'Egitto\", \"common\": \"Egitto\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30b8\\u30d7\\u30c8\\u00b7\\u30a2\\u30e9\\u30d6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a8\\u30b8\\u30d7\\u30c8\"},\n\t\t\t\"nld\": {\"official\": \"Arabische Republiek Egypte\", \"common\": \"Egypte\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica \\u00c1rabe do Egipto\", \"common\": \"Egito\"},\n\t\t\t\"rus\": {\"official\": \"\\u0410\\u0440\\u0430\\u0431\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0415\\u0433\\u0438\\u043f\\u0435\\u0442\", \"common\": \"\\u0415\\u0433\\u0438\\u043f\\u0435\\u0442\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica \\u00c1rabe de Egipto\", \"common\": \"Egipto\"},\n\t\t\t\"fin\": {\"official\": \"Egyptin arabitasavalta\", \"common\": \"Egypti\"}\n\t\t},\n\t\t\"latlng\": [27, 30],\n\t\t\"demonym\": \"Egyptian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ISR\", \"LBY\", \"SDN\"],\n\t\t\"area\": 1002450\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Eritrea\",\n\t\t\t\"official\": \"State of Eritrea\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062f\\u0648\\u0644\\u0629 \\u0625\\u0631\\u062a\\u0631\\u064a\\u0627\",\n\t\t\t\t\t\"common\": \"\\u0625\\u0631\\u062a\\u0631\\u064a\\u0627\\u200e\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"State of Eritrea\",\n\t\t\t\t\t\"common\": \"Eritrea\"\n\t\t\t\t},\n\t\t\t\t\"tir\": {\n\t\t\t\t\t\"official\": \"\\u1203\\u1308\\u1228 \\u12a4\\u122d\\u1275\\u122b\",\n\t\t\t\t\t\"common\": \"\\u12a4\\u122d\\u1275\\u122b\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".er\"],\n\t\t\"cca2\": \"ER\",\n\t\t\"ccn3\": \"232\",\n\t\t\"cca3\": \"ERI\",\n\t\t\"cioc\": \"ERI\",\n\t\t\"currency\": [\"ERN\"],\n\t\t\"callingCode\": [\"291\"],\n\t\t\"capital\": \"Asmara\",\n\t\t\"altSpellings\": [\"ER\", \"State of Eritrea\", \"\\u1203\\u1308\\u1228 \\u12a4\\u122d\\u1275\\u122b\", \"Dawlat Iritriy\\u00e1\", \"\\u02beErtr\\u0101\", \"Iritriy\\u0101\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"tir\": \"Tigrinya\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"State of Eritrea\", \"common\": \"Eritrea\"},\n\t\t\t\"deu\": {\"official\": \"Staat Eritrea\", \"common\": \"Eritrea\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat d'\\u00c9rythr\\u00e9e\", \"common\": \"\\u00c9rythr\\u00e9e\"},\n\t\t\t\"hrv\": {\"official\": \"Dr\\u017eava Eritreji\", \"common\": \"Eritreja\"},\n\t\t\t\"ita\": {\"official\": \"Stato di Eritrea\", \"common\": \"Eritrea\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30ea\\u30c8\\u30ea\\u30a2\\u56fd\", \"common\": \"\\u30a8\\u30ea\\u30c8\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Staat Eritrea\", \"common\": \"Eritrea\"},\n\t\t\t\"por\": {\"official\": \"Estado da Eritreia\", \"common\": \"Eritreia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u042d\\u0440\\u0438\\u0442\\u0440\\u0435\\u044f\", \"common\": \"\\u042d\\u0440\\u0438\\u0442\\u0440\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Eritrea\", \"common\": \"Eritrea\"},\n\t\t\t\"fin\": {\"official\": \"Eritrean valtio\", \"common\": \"Eritrea\"}\n\t\t},\n\t\t\"latlng\": [15, 39],\n\t\t\"demonym\": \"Eritrean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DJI\", \"ETH\", \"SDN\"],\n\t\t\"area\": 117600\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Western Sahara\",\n\t\t\t\"official\": \"Sahrawi Arab Democratic Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ber\": {\n\t\t\t\t\t\"official\": \"Sahrawi Arab Democratic Republic\",\n\t\t\t\t\t\"common\": \"Western Sahara\"\n\t\t\t\t},\n\t\t\t\t\"mey\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0635\\u062d\\u0631\\u0627\\u0648\\u064a\\u0629 \\u0627\\u0644\\u062f\\u064a\\u0645\\u0642\\u0631\\u0627\\u0637\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0635\\u062d\\u0631\\u0627\\u0621 \\u0627\\u0644\\u063a\\u0631\\u0628\\u064a\\u0629\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica \\u00c1rabe Saharaui Democr\\u00e1tica\",\n\t\t\t\t\t\"common\": \"Sahara Occidental\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".eh\"],\n\t\t\"cca2\": \"EH\",\n\t\t\"ccn3\": \"732\",\n\t\t\"cca3\": \"ESH\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"MAD\", \"DZD\", \"MRO\"],\n\t\t\"callingCode\": [\"212\"],\n\t\t\"capital\": \"El Aai\\u00fan\",\n\t\t\"altSpellings\": [\"EH\", \"Tane\\u1e93roft Tutrimt\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ber\": \"Berber\",\n\t\t\t\"mey\": \"Hassaniya\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratische Arabische Republik Sahara\", \"common\": \"Westsahara\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique arabe sahraouie d\\u00e9mocratique\", \"common\": \"Sahara Occidental\"},\n\t\t\t\"hrv\": {\"official\": \"Sahrawi Arab Demokratska Republika\", \"common\": \"Zapadna Sahara\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Araba Saharawi Democratica\", \"common\": \"Sahara Occidentale\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30cf\\u30e9\\u30a2\\u30e9\\u30d6\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u897f\\u30b5\\u30cf\\u30e9\"},\n\t\t\t\"nld\": {\"official\": \"Sahrawi Arabische Democratische Republiek\", \"common\": \"Westelijke Sahara\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica \\u00c1rabe Saharaui Democr\\u00e1tica\", \"common\": \"Saara Ocidental\"},\n\t\t\t\"rus\": {\"official\": \"Sahrawi \\u0410\\u0440\\u0430\\u0431\\u0441\\u043a\\u0430\\u044f \\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0417\\u0430\\u043f\\u0430\\u0434\\u043d\\u0430\\u044f \\u0421\\u0430\\u0445\\u0430\\u0440\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica \\u00c1rabe Saharaui Democr\\u00e1tica\", \"common\": \"Sahara Occidental\"},\n\t\t\t\"fin\": {\"official\": \"L\\u00e4nsi-Sahara\", \"common\": \"L\\u00e4nsi-Sahara\"}\n\t\t},\n\t\t\"latlng\": [24.5, -13],\n\t\t\"demonym\": \"Sahrawi\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DZA\", \"MRT\", \"MAR\"],\n\t\t\"area\": 266000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Spain\",\n\t\t\t\"official\": \"Kingdom of Spain\",\n\t\t\t\"native\": {\n\t\t\t\t\"cat\": {\n\t\t\t\t\t\"official\": \"Regne d'Espanya\",\n\t\t\t\t\t\"common\": \"Espanya\"\n\t\t\t\t},\n\t\t\t\t\"eus\": {\n\t\t\t\t\t\"official\": \"Espainiako Erresuma\",\n\t\t\t\t\t\"common\": \"Espainia\"\n\t\t\t\t},\n\t\t\t\t\"glg\": {\n\t\t\t\t\t\"official\": \"Reino de Espa\\u00f1a\",\n\t\t\t\t\t\"common\": \"\"\n\t\t\t\t},\n\t\t\t\t\"oci\": {\n\t\t\t\t\t\"official\": \"Reialme d'Espanha\",\n\t\t\t\t\t\"common\": \"Espanha\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Reino de Espa\\u00f1a\",\n\t\t\t\t\t\"common\": \"Espa\\u00f1a\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".es\"],\n\t\t\"cca2\": \"ES\",\n\t\t\"ccn3\": \"724\",\n\t\t\"cca3\": \"ESP\",\n\t\t\"cioc\": \"ESP\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"34\"],\n\t\t\"capital\": \"Madrid\",\n\t\t\"altSpellings\": [\"ES\", \"Kingdom of Spain\", \"Reino de Espa\\u00f1a\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"cat\": \"Catalan\",\n\t\t\t\"eus\": \"Basque\",\n\t\t\t\"glg\": \"Galician\",\n\t\t\t\"oci\": \"Occitan\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Spanien\", \"common\": \"Spanien\"},\n\t\t\t\"fra\": {\"official\": \"Royaume d'Espagne\", \"common\": \"Espagne\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina \\u0160panjolska\", \"common\": \"\\u0160panjolska\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Spagna\", \"common\": \"Spagna\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30da\\u30a4\\u30f3\\u738b\\u56fd\", \"common\": \"\\u30b9\\u30da\\u30a4\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Spanje\", \"common\": \"Spanje\"},\n\t\t\t\"por\": {\"official\": \"Reino de Espanha\", \"common\": \"Espanha\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0418\\u0441\\u043f\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u0418\\u0441\\u043f\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Espa\\u00f1a\", \"common\": \"Espa\\u00f1a\"},\n\t\t\t\"fin\": {\"official\": \"Espanjan kuningaskunta\", \"common\": \"Espanja\"}\n\t\t},\n\t\t\"latlng\": [40, -4],\n\t\t\"demonym\": \"Spanish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AND\", \"FRA\", \"GIB\", \"PRT\", \"MAR\"],\n\t\t\"area\": 505992\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Estonia\",\n\t\t\t\"official\": \"Republic of Estonia\",\n\t\t\t\"native\": {\n\t\t\t\t\"est\": {\n\t\t\t\t\t\"official\": \"Eesti Vabariik\",\n\t\t\t\t\t\"common\": \"Eesti\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ee\"],\n\t\t\"cca2\": \"EE\",\n\t\t\"ccn3\": \"233\",\n\t\t\"cca3\": \"EST\",\n\t\t\"cioc\": \"EST\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"372\"],\n\t\t\"capital\": \"Tallinn\",\n\t\t\"altSpellings\": [\"EE\", \"Eesti\", \"Republic of Estonia\", \"Eesti Vabariik\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"est\": \"Estonian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Estonia\", \"common\": \"Estonia\"},\n\t\t\t\"deu\": {\"official\": \"Republik Estland\", \"common\": \"Estland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Estonie\", \"common\": \"Estonie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Estonija\", \"common\": \"Estonija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Estonia\", \"common\": \"Estonia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30b9\\u30c8\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a8\\u30b9\\u30c8\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Estland\", \"common\": \"Estland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Est\\u00f3nia\", \"common\": \"Est\\u00f3nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u042d\\u0441\\u0442\\u043e\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u042d\\u0441\\u0442\\u043e\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Estonia\", \"common\": \"Estonia\"},\n\t\t\t\"fin\": {\"official\": \"Viron tasavalta\", \"common\": \"Viro\"}\n\t\t},\n\t\t\"latlng\": [59, 26],\n\t\t\"demonym\": \"Estonian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"LVA\", \"RUS\"],\n\t\t\"area\": 45227\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ethiopia\",\n\t\t\t\"official\": \"Federal Democratic Republic of Ethiopia\",\n\t\t\t\"native\": {\n\t\t\t\t\"amh\": {\n\t\t\t\t\t\"official\": \"\\u12e8\\u12a2\\u1275\\u12ee\\u1335\\u12eb \\u134c\\u12f4\\u122b\\u120b\\u12ca \\u12f2\\u121e\\u12ad\\u122b\\u1232\\u12eb\\u12ca \\u122a\\u1350\\u1265\\u120a\\u12ad\",\n\t\t\t\t\t\"common\": \"\\u12a2\\u1275\\u12ee\\u1335\\u12eb\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".et\"],\n\t\t\"cca2\": \"ET\",\n\t\t\"ccn3\": \"231\",\n\t\t\"cca3\": \"ETH\",\n\t\t\"cioc\": \"ETH\",\n\t\t\"currency\": [\"ETB\"],\n\t\t\"callingCode\": [\"251\"],\n\t\t\"capital\": \"Addis Ababa\",\n\t\t\"altSpellings\": [\"ET\", \"\\u02be\\u012aty\\u014d\\u1e57\\u1e57y\\u0101\", \"Federal Democratic Republic of Ethiopia\", \"\\u12e8\\u12a2\\u1275\\u12ee\\u1335\\u12eb \\u134c\\u12f4\\u122b\\u120b\\u12ca \\u12f2\\u121e\\u12ad\\u122b\\u1232\\u12eb\\u12ca \\u122a\\u1350\\u1265\\u120a\\u12ad\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"amh\": \"Amharic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Federal Democratic Republic of Ethiopia\", \"common\": \"Ethiopia\"},\n\t\t\t\"deu\": {\"official\": \"Demokratische Bundesrepublik \\u00c4thiopien\", \"common\": \"\\u00c4thiopien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique f\\u00e9d\\u00e9rale d\\u00e9mocratique d'\\u00c9thiopie\", \"common\": \"\\u00c9thiopie\"},\n\t\t\t\"hrv\": {\"official\": \"Savezna Demokratska Republika Etiopija\", \"common\": \"Etiopija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federale democratica di Etiopia\", \"common\": \"Etiopia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30c1\\u30aa\\u30d4\\u30a2\\u9023\\u90a6\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a8\\u30c1\\u30aa\\u30d4\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Federale Democratische Republiek Ethiopi\\u00eb\", \"common\": \"Ethiopi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Federal Democr\\u00e1tica da Eti\\u00f3pia\", \"common\": \"Eti\\u00f3pia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u042d\\u0444\\u0438\\u043e\\u043f\\u0438\\u044f\", \"common\": \"\\u042d\\u0444\\u0438\\u043e\\u043f\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Federal de Etiop\\u00eda\", \"common\": \"Etiop\\u00eda\"},\n\t\t\t\"fin\": {\"official\": \"Etiopian demokraattinen liittotasavalta\", \"common\": \"Etiopia\"}\n\t\t},\n\t\t\"latlng\": [8, 38],\n\t\t\"demonym\": \"Ethiopian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"DJI\", \"ERI\", \"KEN\", \"SOM\", \"SSD\", \"SDN\"],\n\t\t\"area\": 1104300\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Finland\",\n\t\t\t\"official\": \"Republic of Finland\",\n\t\t\t\"native\": {\n\t\t\t\t\"fin\": {\n\t\t\t\t\t\"official\": \"Suomen tasavalta\",\n\t\t\t\t\t\"common\": \"Suomi\"\n\t\t\t\t},\n\t\t\t\t\"swe\": {\n\t\t\t\t\t\"official\": \"Republiken Finland\",\n\t\t\t\t\t\"common\": \"Finland\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fi\"],\n\t\t\"cca2\": \"FI\",\n\t\t\"ccn3\": \"246\",\n\t\t\"cca3\": \"FIN\",\n\t\t\"cioc\": \"FIN\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"358\"],\n\t\t\"capital\": \"Helsinki\",\n\t\t\"altSpellings\": [\"FI\", \"Suomi\", \"Republic of Finland\", \"Suomen tasavalta\", \"Republiken Finland\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"fin\": \"Finnish\",\n\t\t\t\"swe\": \"Swedish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Finnland\", \"common\": \"Finnland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Finlande\", \"common\": \"Finlande\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Finska\", \"common\": \"Finska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Finlandia\", \"common\": \"Finlandia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30a3\\u30f3\\u30e9\\u30f3\\u30c9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d5\\u30a3\\u30f3\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Finland\", \"common\": \"Finland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Finl\\u00e2ndia\", \"common\": \"Finl\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0438\\u043d\\u043b\\u044f\\u043d\\u0434\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0424\\u0438\\u043d\\u043b\\u044f\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Finlandia\", \"common\": \"Finlandia\"},\n\t\t\t\"fin\": {\"official\": \"Suomen tasavalta\", \"common\": \"Suomi\"}\n\t\t},\n\t\t\"latlng\": [64, 26],\n\t\t\"demonym\": \"Finnish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"NOR\", \"SWE\", \"RUS\"],\n\t\t\"area\": 338424\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Fiji\",\n\t\t\t\"official\": \"Republic of Fiji\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Fiji\",\n\t\t\t\t\t\"common\": \"Fiji\"\n\t\t\t\t},\n\t\t\t\t\"fij\": {\n\t\t\t\t\t\"official\": \"Matanitu Tugalala o Viti\",\n\t\t\t\t\t\"common\": \"Viti\"\n\t\t\t\t},\n\t\t\t\t\"hif\": {\n\t\t\t\t\t\"official\": \"\\u0930\\u093f\\u092a\\u092c\\u094d\\u0932\\u093f\\u0915 \\u0911\\u092b \\u092b\\u0940\\u091c\\u0940\",\n\t\t\t\t\t\"common\": \"\\u092b\\u093f\\u091c\\u0940\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fj\"],\n\t\t\"cca2\": \"FJ\",\n\t\t\"ccn3\": \"242\",\n\t\t\"cca3\": \"FJI\",\n\t\t\"cioc\": \"FIJ\",\n\t\t\"currency\": [\"FJD\"],\n\t\t\"callingCode\": [\"679\"],\n\t\t\"capital\": \"Suva\",\n\t\t\"altSpellings\": [\"FJ\", \"Viti\", \"Republic of Fiji\", \"Matanitu ko Viti\", \"Fij\\u012b Ga\\u1e47ar\\u0101jya\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Melanesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fij\": \"Fijian\",\n\t\t\t\"hif\": \"Fiji Hindi\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Fidschi\", \"common\": \"Fidschi\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des Fidji\", \"common\": \"Fidji\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Fid\\u017ei\", \"common\": \"Fi\\u0111i\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Figi\", \"common\": \"Figi\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30a3\\u30b8\\u30fc\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d5\\u30a3\\u30b8\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Fiji\", \"common\": \"Fiji\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Fiji\", \"common\": \"Fiji\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0424\\u0438\\u0434\\u0436\\u0438\", \"common\": \"\\u0424\\u0438\\u0434\\u0436\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Fiji\", \"common\": \"Fiyi\"},\n\t\t\t\"fin\": {\"official\": \"Fid\\u017ein tasavalta\", \"common\": \"Fid\\u017ei\"}\n\t\t},\n\t\t\"latlng\": [-18, 175],\n\t\t\"demonym\": \"Fijian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 18272\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Falkland Islands\",\n\t\t\t\"official\": \"Falkland Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Falkland Islands\",\n\t\t\t\t\t\"common\": \"Falkland Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fk\"],\n\t\t\"cca2\": \"FK\",\n\t\t\"ccn3\": \"238\",\n\t\t\"cca3\": \"FLK\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"FKP\"],\n\t\t\"callingCode\": [\"500\"],\n\t\t\"capital\": \"Stanley\",\n\t\t\"altSpellings\": [\"FK\", \"Islas Malvinas\", \"Falkland Islands (Malvinas)\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Falkland-Inseln\", \"common\": \"Falklandinseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Malouines\", \"common\": \"\\u00celes Malouines\"},\n\t\t\t\"hrv\": {\"official\": \"Falklandski otoci\", \"common\": \"Falklandski Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Falkland\", \"common\": \"Isole Falkland o Isole Malvine\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30a9\\u30fc\\u30af\\u30e9\\u30f3\\u30c9\", \"common\": \"\\u30d5\\u30a9\\u30fc\\u30af\\u30e9\\u30f3\\u30c9\\uff08\\u30de\\u30eb\\u30d3\\u30ca\\u30b9\\uff09\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Falkland eilanden\", \"common\": \"Falklandeilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Malvinas\", \"common\": \"Ilhas Malvinas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u043e\\u043b\\u043a\\u043b\\u0435\\u043d\\u0434\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0424\\u043e\\u043b\\u043a\\u043b\\u0435\\u043d\\u0434\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"islas Malvinas\", \"common\": \"Islas Malvinas\"},\n\t\t\t\"fin\": {\"official\": \"Falkandinsaaret\", \"common\": \"Falkandinsaaret\"}\n\t\t},\n\t\t\"latlng\": [-51.75, -59],\n\t\t\"demonym\": \"Falkland Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 12173\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"France\",\n\t\t\t\"official\": \"French Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique fran\\u00e7aise\",\n\t\t\t\t\t\"common\": \"France\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fr\"],\n\t\t\"cca2\": \"FR\",\n\t\t\"ccn3\": \"250\",\n\t\t\"cca3\": \"FRA\",\n\t\t\"cioc\": \"FRA\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"33\"],\n\t\t\"capital\": \"Paris\",\n\t\t\"altSpellings\": [\"FR\", \"French Republic\", \"R\\u00e9publique fran\\u00e7aise\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Franz\\u00f6sische Republik\", \"common\": \"Frankreich\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique fran\\u00e7aise\", \"common\": \"France\"},\n\t\t\t\"hrv\": {\"official\": \"Francuska Republika\", \"common\": \"Francuska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica francese\", \"common\": \"Francia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d5\\u30e9\\u30f3\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Franse Republiek\", \"common\": \"Frankrijk\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Francesa\", \"common\": \"Fran\\u00e7a\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica franc\\u00e9s\", \"common\": \"Francia\"},\n\t\t\t\"fin\": {\"official\": \"Ranskan tasavalta\", \"common\": \"Ranska\"}\n\t\t},\n\t\t\"latlng\": [46, 2],\n\t\t\"demonym\": \"French\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AND\", \"BEL\", \"DEU\", \"ITA\", \"LUX\", \"MCO\", \"ESP\", \"CHE\"],\n\t\t\"area\": 551695\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Faroe Islands\",\n\t\t\t\"official\": \"Faroe Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"dan\": {\n\t\t\t\t\t\"official\": \"F\\u00e6r\\u00f8erne\",\n\t\t\t\t\t\"common\": \"F\\u00e6r\\u00f8erne\"\n\t\t\t\t},\n\t\t\t\t\"fao\": {\n\t\t\t\t\t\"official\": \"F\\u00f8royar\",\n\t\t\t\t\t\"common\": \"F\\u00f8royar\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fo\"],\n\t\t\"cca2\": \"FO\",\n\t\t\"ccn3\": \"234\",\n\t\t\"cca3\": \"FRO\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"DKK\"],\n\t\t\"callingCode\": [\"298\"],\n\t\t\"capital\": \"T\\u00f3rshavn\",\n\t\t\"altSpellings\": [\"FO\", \"F\\u00f8royar\", \"F\\u00e6r\\u00f8erne\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"dan\": \"Danish\",\n\t\t\t\"fao\": \"Faroese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"F\\u00e4r\\u00f6er\", \"common\": \"F\\u00e4r\\u00f6er-Inseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes F\\u00e9ro\\u00e9\", \"common\": \"\\u00celes F\\u00e9ro\\u00e9\"},\n\t\t\t\"hrv\": {\"official\": \"Farski Otoci\", \"common\": \"Farski Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Faroe\", \"common\": \"Isole Far Oer\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30a7\\u30ed\\u30fc\\u8af8\\u5cf6\", \"common\": \"\\u30d5\\u30a7\\u30ed\\u30fc\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Faer\\u00f6er\", \"common\": \"Faer\\u00f6er\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Faroe\", \"common\": \"Ilhas Faro\\u00e9\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0430\\u0440\\u0435\\u0440\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0424\\u0430\\u0440\\u0435\\u0440\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas Feroe\", \"common\": \"Islas Faroe\"},\n\t\t\t\"fin\": {\"official\": \"F\\u00e4rsaaret\", \"common\": \"F\\u00e4rsaaret\"}\n\t\t},\n\t\t\"latlng\": [62, -7],\n\t\t\"demonym\": \"Faroese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 1393\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Micronesia\",\n\t\t\t\"official\": \"Federated States of Micronesia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Federated States of Micronesia\",\n\t\t\t\t\t\"common\": \"Micronesia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fm\"],\n\t\t\"cca2\": \"FM\",\n\t\t\"ccn3\": \"583\",\n\t\t\"cca3\": \"FSM\",\n\t\t\"cioc\": \"FSM\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"691\"],\n\t\t\"capital\": \"Palikir\",\n\t\t\"altSpellings\": [\"FM\", \"Federated States of Micronesia\", \"Micronesia, Federated States of\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"F\\u00f6derierte Staaten von Mikronesien\", \"common\": \"Mikronesien\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tats f\\u00e9d\\u00e9r\\u00e9s de Micron\\u00e9sie\", \"common\": \"Micron\\u00e9sie\"},\n\t\t\t\"hrv\": {\"official\": \"Savezne Dr\\u017eave Mikronezije\", \"common\": \"Mikronezija\"},\n\t\t\t\"ita\": {\"official\": \"Stati federati di Micronesia\", \"common\": \"Micronesia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30df\\u30af\\u30ed\\u30cd\\u30b7\\u30a2\\u9023\\u90a6\", \"common\": \"\\u30df\\u30af\\u30ed\\u30cd\\u30b7\\u30a2\\u9023\\u90a6\"},\n\t\t\t\"nld\": {\"official\": \"Federale Staten van Micronesia\", \"common\": \"Micronesi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Estados Federados da Micron\\u00e9sia\", \"common\": \"Micron\\u00e9sia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u044b\\u0435 \\u0428\\u0442\\u0430\\u0442\\u044b \\u041c\\u0438\\u043a\\u0440\\u043e\\u043d\\u0435\\u0437\\u0438\\u0438\", \"common\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u044b\\u0435 \\u0428\\u0442\\u0430\\u0442\\u044b \\u041c\\u0438\\u043a\\u0440\\u043e\\u043d\\u0435\\u0437\\u0438\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Estados Federados de Micronesia\", \"common\": \"Micronesia\"},\n\t\t\t\"fin\": {\"official\": \"Mikronesian liittovaltio\", \"common\": \"Mikronesia\"}\n\t\t},\n\t\t\"latlng\": [6.91666666, 158.25],\n\t\t\"demonym\": \"Micronesian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 702\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Gabon\",\n\t\t\t\"official\": \"Gabonese Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique gabonaise\",\n\t\t\t\t\t\"common\": \"Gabon\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ga\"],\n\t\t\"cca2\": \"GA\",\n\t\t\"ccn3\": \"266\",\n\t\t\"cca3\": \"GAB\",\n\t\t\"cioc\": \"GAB\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"241\"],\n\t\t\"capital\": \"Libreville\",\n\t\t\"altSpellings\": [\"GA\", \"Gabonese Republic\", \"R\\u00e9publique Gabonaise\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gabunische Republik\", \"common\": \"Gabun\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique gabonaise\", \"common\": \"Gabon\"},\n\t\t\t\"hrv\": {\"official\": \"Gabon Republika\", \"common\": \"Gabon\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica gabonese\", \"common\": \"Gabon\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ac\\u30dc\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ac\\u30dc\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Gabon\", \"common\": \"Gabon\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Gab\\u00e3o\", \"common\": \"Gab\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0430\\u0431\\u043e\\u043d\\u0430 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0413\\u0430\\u0431\\u043e\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Gab\\u00f3n\", \"common\": \"Gab\\u00f3n\"},\n\t\t\t\"fin\": {\"official\": \"Gabonin tasavalta\", \"common\": \"Gabon\"}\n\t\t},\n\t\t\"latlng\": [-1, 11.75],\n\t\t\"demonym\": \"Gabonese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CMR\", \"COG\", \"GNQ\"],\n\t\t\"area\": 267668\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"United Kingdom\",\n\t\t\t\"official\": \"United Kingdom of Great Britain and Northern Ireland\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"United Kingdom of Great Britain and Northern Ireland\",\n\t\t\t\t\t\"common\": \"United Kingdom\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".uk\"],\n\t\t\"cca2\": \"GB\",\n\t\t\"ccn3\": \"826\",\n\t\t\"cca3\": \"GBR\",\n\t\t\"cioc\": \"GBR\",\n\t\t\"currency\": [\"GBP\"],\n\t\t\"callingCode\": [\"44\"],\n\t\t\"capital\": \"London\",\n\t\t\"altSpellings\": [\"GB\", \"UK\", \"Great Britain\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vereinigtes K\\u00f6nigreich Gro\\u00dfbritannien und Nordirland\", \"common\": \"Vereinigtes K\\u00f6nigreich\"},\n\t\t\t\"fra\": {\"official\": \"Royaume-Uni de Grande-Bretagne et d'Irlande du Nord\", \"common\": \"Royaume-Uni\"},\n\t\t\t\"hrv\": {\"official\": \"Ujedinjeno Kraljevstvo Velike Britanije i Sjeverne Irske\", \"common\": \"Ujedinjeno Kraljevstvo\"},\n\t\t\t\"ita\": {\"official\": \"Regno Unito di Gran Bretagna e Irlanda del Nord\", \"common\": \"Regno Unito\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30ec\\u30fc\\u30c8\\u00b7\\u30d6\\u30ea\\u30c6\\u30f3\\u304a\\u3088\\u3073\\u5317\\u30a2\\u30a4\\u30eb\\u30e9\\u30f3\\u30c9\\u9023\\u5408\\u738b\\u56fd\", \"common\": \"\\u30a4\\u30ae\\u30ea\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Verenigd Koninkrijk van Groot-Brittanni\\u00eb en Noord-Ierland\", \"common\": \"Verenigd Koninkrijk\"},\n\t\t\t\"por\": {\"official\": \"Reino Unido da Gr\\u00e3-Bretanha e Irlanda do Norte\", \"common\": \"Reino Unido\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u043e\\u0435 \\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0412\\u0435\\u043b\\u0438\\u043a\\u043e\\u0431\\u0440\\u0438\\u0442\\u0430\\u043d\\u0438\\u0438 \\u0438 \\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u043e\\u0439 \\u0418\\u0440\\u043b\\u0430\\u043d\\u0434\\u0438\\u0438\", \"common\": \"\\u0412\\u0435\\u043b\\u0438\\u043a\\u043e\\u0431\\u0440\\u0438\\u0442\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino Unido de Gran Breta\\u00f1a e Irlanda del Norte\", \"common\": \"Reino Unido\"},\n\t\t\t\"fin\": {\"official\": \"Ison-Britannian ja Pohjois-Irlannin yhdistynyt kuningaskunta\", \"common\": \"Yhdistynyt kuningaskunta\"}\n\t\t},\n\t\t\"latlng\": [54, -2],\n\t\t\"demonym\": \"British\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRL\"],\n\t\t\"area\": 242900\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Georgia\",\n\t\t\t\"official\": \"Georgia\",\n\t\t\t\"native\": {\n\t\t\t\t\"kat\": {\n\t\t\t\t\t\"official\": \"\\u10e1\\u10d0\\u10e5\\u10d0\\u10e0\\u10d7\\u10d5\\u10d4\\u10da\\u10dd\",\n\t\t\t\t\t\"common\": \"\\u10e1\\u10d0\\u10e5\\u10d0\\u10e0\\u10d7\\u10d5\\u10d4\\u10da\\u10dd\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ge\"],\n\t\t\"cca2\": \"GE\",\n\t\t\"ccn3\": \"268\",\n\t\t\"cca3\": \"GEO\",\n\t\t\"cioc\": \"GEO\",\n\t\t\"currency\": [\"GEL\"],\n\t\t\"callingCode\": [\"995\"],\n\t\t\"capital\": \"Tbilisi\",\n\t\t\"altSpellings\": [\"GE\", \"Sakartvelo\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"kat\": \"Georgian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Georgia\", \"common\": \"Georgien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de G\\u00e9orgie\", \"common\": \"G\\u00e9orgie\"},\n\t\t\t\"hrv\": {\"official\": \"Gruzija\", \"common\": \"Gruzija\"},\n\t\t\t\"ita\": {\"official\": \"Georgia\", \"common\": \"Georgia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30eb\\u30b8\\u30a2\", \"common\": \"\\u30b0\\u30eb\\u30b8\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Georgia\", \"common\": \"Georgi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Georgia\", \"common\": \"Ge\\u00f3rgia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0440\\u0443\\u0437\\u0438\\u044f\", \"common\": \"\\u0413\\u0440\\u0443\\u0437\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Georgia\", \"common\": \"Georgia\"},\n\t\t\t\"fin\": {\"official\": \"Georgia\", \"common\": \"Georgia\"}\n\t\t},\n\t\t\"latlng\": [42, 43.5],\n\t\t\"demonym\": \"Georgian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ARM\", \"AZE\", \"RUS\", \"TUR\"],\n\t\t\"area\": 69700\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guernsey\",\n\t\t\t\"official\": \"Bailiwick of Guernsey\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Bailiwick of Guernsey\",\n\t\t\t\t\t\"common\": \"Guernsey\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Bailliage de Guernesey\",\n\t\t\t\t\t\"common\": \"Guernesey\"\n\t\t\t\t},\n\t\t\t\t\"nfr\": {\n\t\t\t\t\t\"official\": \"Dg\\u00e8rn\\u00e9siais\",\n\t\t\t\t\t\"common\": \"Dg\\u00e8rn\\u00e9siais\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gg\"],\n\t\t\"cca2\": \"GG\",\n\t\t\"ccn3\": \"831\",\n\t\t\"cca3\": \"GGY\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"GBP\"],\n\t\t\"callingCode\": [\"44\"],\n\t\t\"capital\": \"St. Peter Port\",\n\t\t\"altSpellings\": [\"GG\", \"Bailiwick of Guernsey\", \"Bailliage de Guernesey\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"nfr\": \"Guern\\u00e9siais\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"fra\": {\"official\": \"Bailliage de Guernesey\", \"common\": \"Guernesey\"},\n\t\t\t\"hrv\": {\"official\": \"Struka Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"ita\": {\"official\": \"Baliato di Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ac\\u30fc\\u30f3\\u30b8\\u30fc\\u306e\\u5f97\\u610f\\u5206\\u91ce\", \"common\": \"\\u30ac\\u30fc\\u30f3\\u30b8\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Baljuwschap Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"por\": {\"official\": \"Bailiado de Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043d\\u043d\\u043e\\u0435 \\u0432\\u043b\\u0430\\u0434\\u0435\\u043d\\u0438\\u0435 \\u0413\\u0435\\u0440\\u043d\\u0441\\u0438\", \"common\": \"\\u0413\\u0435\\u0440\\u043d\\u0441\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Bail\\u00eda de Guernsey\", \"common\": \"Guernsey\"},\n\t\t\t\"fin\": {\"official\": \"Guernsey\", \"common\": \"Guernsey\"}\n\t\t},\n\t\t\"latlng\": [49.46666666, -2.58333333],\n\t\t\"demonym\": \"Channel Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 78\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ghana\",\n\t\t\t\"official\": \"Republic of Ghana\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Ghana\",\n\t\t\t\t\t\"common\": \"Ghana\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gh\"],\n\t\t\"cca2\": \"GH\",\n\t\t\"ccn3\": \"288\",\n\t\t\"cca3\": \"GHA\",\n\t\t\"cioc\": \"GHA\",\n\t\t\"currency\": [\"GHS\"],\n\t\t\"callingCode\": [\"233\"],\n\t\t\"capital\": \"Accra\",\n\t\t\"altSpellings\": [\"GH\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Ghana\", \"common\": \"Ghana\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Ghana\", \"common\": \"Ghana\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Gana\", \"common\": \"Gana\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Ghana\", \"common\": \"Ghana\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ac\\u30fc\\u30ca\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ac\\u30fc\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Ghana\", \"common\": \"Ghana\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Gana\", \"common\": \"Gana\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0430\\u043d\\u0430\", \"common\": \"\\u0413\\u0430\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Ghana\", \"common\": \"Ghana\"},\n\t\t\t\"fin\": {\"official\": \"Ghanan tasavalta\", \"common\": \"Ghana\"}\n\t\t},\n\t\t\"latlng\": [8, -2],\n\t\t\"demonym\": \"Ghanaian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BFA\", \"CIV\", \"TGO\"],\n\t\t\"area\": 238533\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Gibraltar\",\n\t\t\t\"official\": \"Gibraltar\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Gibraltar\",\n\t\t\t\t\t\"common\": \"Gibraltar\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gi\"],\n\t\t\"cca2\": \"GI\",\n\t\t\"ccn3\": \"292\",\n\t\t\"cca3\": \"GIB\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"GIP\"],\n\t\t\"callingCode\": [\"350\"],\n\t\t\"capital\": \"Gibraltar\",\n\t\t\"altSpellings\": [\"GI\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"fra\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"hrv\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"ita\": {\"official\": \"Gibilterra\", \"common\": \"Gibilterra\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b8\\u30d6\\u30e9\\u30eb\\u30bf\\u30eb\", \"common\": \"\\u30b8\\u30d6\\u30e9\\u30eb\\u30bf\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"por\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0438\\u0431\\u0440\\u0430\\u043b\\u0442\\u0430\\u0440\", \"common\": \"\\u0413\\u0438\\u0431\\u0440\\u0430\\u043b\\u0442\\u0430\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"},\n\t\t\t\"fin\": {\"official\": \"Gibraltar\", \"common\": \"Gibraltar\"}\n\t\t},\n\t\t\"latlng\": [36.13333333, -5.35],\n\t\t\"demonym\": \"Gibraltar\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ESP\"],\n\t\t\"area\": 6\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guinea\",\n\t\t\t\"official\": \"Republic of Guinea\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de Guin\\u00e9e\",\n\t\t\t\t\t\"common\": \"Guin\\u00e9e\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gn\"],\n\t\t\"cca2\": \"GN\",\n\t\t\"ccn3\": \"324\",\n\t\t\"cca3\": \"GIN\",\n\t\t\"cioc\": \"GUI\",\n\t\t\"currency\": [\"GNF\"],\n\t\t\"callingCode\": [\"224\"],\n\t\t\"capital\": \"Conakry\",\n\t\t\"altSpellings\": [\"GN\", \"Republic of Guinea\", \"R\\u00e9publique de Guin\\u00e9e\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Guinea\", \"common\": \"Guinea\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Guin\\u00e9e\", \"common\": \"Guin\\u00e9e\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Gvineja\", \"common\": \"Gvineja\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Guinea\", \"common\": \"Guinea\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ae\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ae\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Guinee\", \"common\": \"Guinee\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Guin\\u00e9\", \"common\": \"Guin\\u00e9\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0432\\u0438\\u043d\\u0435\\u044f\", \"common\": \"\\u0413\\u0432\\u0438\\u043d\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Guinea\", \"common\": \"Guinea\"},\n\t\t\t\"fin\": {\"official\": \"Guinean tasavalta\", \"common\": \"Guinea\"}\n\t\t},\n\t\t\"latlng\": [11, -10],\n\t\t\"demonym\": \"Guinean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CIV\", \"GNB\", \"LBR\", \"MLI\", \"SEN\", \"SLE\"],\n\t\t\"area\": 245857\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guadeloupe\",\n\t\t\t\"official\": \"Guadeloupe\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Guadeloupe\",\n\t\t\t\t\t\"common\": \"Guadeloupe\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gp\"],\n\t\t\"cca2\": \"GP\",\n\t\t\"ccn3\": \"312\",\n\t\t\"cca3\": \"GLP\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"590\"],\n\t\t\"capital\": \"Basse-Terre\",\n\t\t\"altSpellings\": [\"GP\", \"Gwadloup\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Guadeloupe\", \"common\": \"Guadeloupe\"},\n\t\t\t\"fra\": {\"official\": \"Guadeloupe\", \"common\": \"Guadeloupe\"},\n\t\t\t\"hrv\": {\"official\": \"Gvadalupa\", \"common\": \"Gvadalupa\"},\n\t\t\t\"ita\": {\"official\": \"Guadeloupe\", \"common\": \"Guadeloupa\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30a2\\u30c9\\u30eb\\u30fc\\u30d7\\u5cf6\", \"common\": \"\\u30b0\\u30a2\\u30c9\\u30eb\\u30fc\\u30d7\"},\n\t\t\t\"nld\": {\"official\": \"Guadeloupe\", \"common\": \"Guadeloupe\"},\n\t\t\t\"por\": {\"official\": \"Guadalupe\", \"common\": \"Guadalupe\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0432\\u0430\\u0434\\u0435\\u043b\\u0443\\u043f\\u0430\", \"common\": \"\\u0413\\u0432\\u0430\\u0434\\u0435\\u043b\\u0443\\u043f\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Guadalupe\", \"common\": \"Guadalupe\"},\n\t\t\t\"fin\": {\"official\": \"Guadeloupen departmentti\", \"common\": \"Guadeloupe\"}\n\t\t},\n\t\t\"latlng\": [16.25, -61.583333],\n\t\t\"demonym\": \"Guadeloupian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 1628\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Gambia\",\n\t\t\t\"official\": \"Republic of the Gambia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of the Gambia\",\n\t\t\t\t\t\"common\": \"Gambia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gm\"],\n\t\t\"cca2\": \"GM\",\n\t\t\"ccn3\": \"270\",\n\t\t\"cca3\": \"GMB\",\n\t\t\"cioc\": \"GAM\",\n\t\t\"currency\": [\"GMD\"],\n\t\t\"callingCode\": [\"220\"],\n\t\t\"capital\": \"Banjul\",\n\t\t\"altSpellings\": [\"GM\", \"Republic of the Gambia\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Gambia\", \"common\": \"Gambia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Gambie\", \"common\": \"Gambie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Gambija\", \"common\": \"Gambija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Gambia\", \"common\": \"Gambia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ac\\u30f3\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ac\\u30f3\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Gambia\", \"common\": \"Gambia\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da G\\u00e2mbia\", \"common\": \"G\\u00e2mbia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0430\\u043c\\u0431\\u0438\\u044f\", \"common\": \"\\u0413\\u0430\\u043c\\u0431\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Gambia\", \"common\": \"Gambia\"},\n\t\t\t\"fin\": {\"official\": \"Gambian tasavalta\", \"common\": \"Gambia\"}\n\t\t},\n\t\t\"latlng\": [13.46666666, -16.56666666],\n\t\t\"demonym\": \"Gambian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"SEN\"],\n\t\t\"area\": 10689\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guinea-Bissau\",\n\t\t\t\"official\": \"Republic of Guinea-Bissau\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica da Guin\\u00e9-Bissau\",\n\t\t\t\t\t\"common\": \"Guin\\u00e9-Bissau\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gw\"],\n\t\t\"cca2\": \"GW\",\n\t\t\"ccn3\": \"624\",\n\t\t\"cca3\": \"GNB\",\n\t\t\"cioc\": \"GBS\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"245\"],\n\t\t\"capital\": \"Bissau\",\n\t\t\"altSpellings\": [\"GW\", \"Republic of Guinea-Bissau\", \"Rep\\u00fablica da Guin\\u00e9-Bissau\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Guinea-Bissau\", \"common\": \"Guinea-Bissau\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Guin\\u00e9e-Bissau\", \"common\": \"Guin\\u00e9e-Bissau\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Gvineja Bisau\", \"common\": \"Gvineja Bisau\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Guinea-Bissau\", \"common\": \"Guinea-Bissau\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ae\\u30cb\\u30a2\\u30d3\\u30b5\\u30a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ae\\u30cb\\u30a2\\u30d3\\u30b5\\u30a6\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Guinee-Bissau\", \"common\": \"Guinee-Bissau\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Guin\\u00e9-Bissau\", \"common\": \"Guin\\u00e9-Bissau\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0432\\u0438\\u043d\\u0435\\u044f -\\u0411\\u0438\\u0441\\u0430\\u0443\", \"common\": \"\\u0413\\u0432\\u0438\\u043d\\u0435\\u044f-\\u0411\\u0438\\u0441\\u0430\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Guinea-Bissau\", \"common\": \"Guinea-Bis\\u00e1u\"},\n\t\t\t\"fin\": {\"official\": \"Guinea-Bissaun tasavalta\", \"common\": \"Guinea-Bissau\"}\n\t\t},\n\t\t\"latlng\": [12, -15],\n\t\t\"demonym\": \"Guinea-Bissauan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GIN\", \"SEN\"],\n\t\t\"area\": 36125\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Equatorial Guinea\",\n\t\t\t\"official\": \"Republic of Equatorial Guinea\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de la Guin\\u00e9e \\u00c9quatoriale\",\n\t\t\t\t\t\"common\": \"Guin\\u00e9e \\u00e9quatoriale\"\n\t\t\t\t},\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica da Guin\\u00e9 Equatorial\",\n\t\t\t\t\t\"common\": \"Guin\\u00e9 Equatorial\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Guinea Ecuatorial\",\n\t\t\t\t\t\"common\": \"Guinea Ecuatorial\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gq\"],\n\t\t\"cca2\": \"GQ\",\n\t\t\"ccn3\": \"226\",\n\t\t\"cca3\": \"GNQ\",\n\t\t\"cioc\": \"GEQ\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"240\"],\n\t\t\"capital\": \"Malabo\",\n\t\t\"altSpellings\": [\"GQ\", \"Republic of Equatorial Guinea\", \"Rep\\u00fablica de Guinea Ecuatorial\", \"R\\u00e9publique de Guin\\u00e9e \\u00e9quatoriale\", \"Rep\\u00fablica da Guin\\u00e9 Equatorial\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"por\": \"Portuguese\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Equatorial Guinea\", \"common\": \"Gini Gyhydeddol\"},\n\t\t\t\"deu\": {\"official\": \"Republik \\u00c4quatorialguinea\", \"common\": \"\\u00c4quatorialguinea\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Guin\\u00e9e \\u00e9quatoriale\", \"common\": \"Guin\\u00e9e \\u00e9quatoriale\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Ekvatorska Gvineja\", \"common\": \"Ekvatorijalna Gvineja\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica della Guinea Equatoriale\", \"common\": \"Guinea Equatoriale\"},\n\t\t\t\"jpn\": {\"official\": \"\\u8d64\\u9053\\u30ae\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u8d64\\u9053\\u30ae\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Equatoriaal-Guinea\", \"common\": \"Equatoriaal-Guinea\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Guin\\u00e9 Equatorial\", \"common\": \"Guin\\u00e9 Equatorial\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u042d\\u043a\\u0432\\u0430\\u0442\\u043e\\u0440\\u0438\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u0413\\u0432\\u0438\\u043d\\u0435\\u044f\", \"common\": \"\\u042d\\u043a\\u0432\\u0430\\u0442\\u043e\\u0440\\u0438\\u0430\\u043b\\u044c\\u043d\\u0430\\u044f \\u0413\\u0432\\u0438\\u043d\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Guinea Ecuatorial\", \"common\": \"Guinea Ecuatorial\"},\n\t\t\t\"fin\": {\"official\": \"P\\u00e4iv\\u00e4ntasaajan Guinean tasavalta\", \"common\": \"P\\u00e4iv\\u00e4ntasaajan Guinea\"}\n\t\t},\n\t\t\"latlng\": [2, 10],\n\t\t\"demonym\": \"Equatorial Guinean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CMR\", \"GAB\"],\n\t\t\"area\": 28051\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Greece\",\n\t\t\t\"official\": \"Hellenic Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ell\": {\n\t\t\t\t\t\"official\": \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\",\n\t\t\t\t\t\"common\": \"\\u0395\\u03bb\\u03bb\\u03ac\\u03b4\\u03b1\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gr\"],\n\t\t\"cca2\": \"GR\",\n\t\t\"ccn3\": \"300\",\n\t\t\"cca3\": \"GRC\",\n\t\t\"cioc\": \"GRE\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"30\"],\n\t\t\"capital\": \"Athens\",\n\t\t\"altSpellings\": [\"GR\", \"Ell\\u00e1da\", \"Hellenic Republic\", \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ell\": \"Greek\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Hellenische Republik\", \"common\": \"Griechenland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique hell\\u00e9nique\", \"common\": \"Gr\\u00e8ce\"},\n\t\t\t\"hrv\": {\"official\": \"Helenska Republika\", \"common\": \"Gr\\u010dka\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica ellenica\", \"common\": \"Grecia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ae\\u30ea\\u30b7\\u30e3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ae\\u30ea\\u30b7\\u30e3\"},\n\t\t\t\"nld\": {\"official\": \"Helleense Republiek\", \"common\": \"Griekenland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Hel\\u00e9nica\", \"common\": \"Gr\\u00e9cia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0440\\u0435\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0413\\u0440\\u0435\\u0446\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Hel\\u00e9nica\", \"common\": \"Grecia\"},\n\t\t\t\"fin\": {\"official\": \"Helleenien tasavalta\", \"common\": \"Kreikka\"}\n\t\t},\n\t\t\"latlng\": [39, 22],\n\t\t\"demonym\": \"Greek\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ALB\", \"BGR\", \"TUR\", \"MKD\"],\n\t\t\"area\": 131990\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Grenada\",\n\t\t\t\"official\": \"Grenada\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Grenada\",\n\t\t\t\t\t\"common\": \"Grenada\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gd\"],\n\t\t\"cca2\": \"GD\",\n\t\t\"ccn3\": \"308\",\n\t\t\"cca3\": \"GRD\",\n\t\t\"cioc\": \"GRN\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1473\"],\n\t\t\"capital\": \"St. George's\",\n\t\t\"altSpellings\": [\"GD\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Grenada\", \"common\": \"Grenada\"},\n\t\t\t\"fra\": {\"official\": \"Grenade\", \"common\": \"Grenade\"},\n\t\t\t\"hrv\": {\"official\": \"Grenada\", \"common\": \"Grenada\"},\n\t\t\t\"ita\": {\"official\": \"Grenada\", \"common\": \"Grenada\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30ec\\u30ca\\u30c0\", \"common\": \"\\u30b0\\u30ec\\u30ca\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Grenada\", \"common\": \"Grenada\"},\n\t\t\t\"por\": {\"official\": \"Grenada\", \"common\": \"Granada\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0430\", \"common\": \"\\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Granada\", \"common\": \"Grenada\"},\n\t\t\t\"fin\": {\"official\": \"Grenada\", \"common\": \"Grenada\"}\n\t\t},\n\t\t\"latlng\": [12.11666666, -61.66666666],\n\t\t\"demonym\": \"Grenadian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 344\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Greenland\",\n\t\t\t\"official\": \"Greenland\",\n\t\t\t\"native\": {\n\t\t\t\t\"kal\": {\n\t\t\t\t\t\"official\": \"Kalaallit Nunaat\",\n\t\t\t\t\t\"common\": \"Kalaallit Nunaat\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gl\"],\n\t\t\"cca2\": \"GL\",\n\t\t\"ccn3\": \"304\",\n\t\t\"cca3\": \"GRL\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"DKK\"],\n\t\t\"callingCode\": [\"299\"],\n\t\t\"capital\": \"Nuuk\",\n\t\t\"altSpellings\": [\"GL\", \"Gr\\u00f8nland\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"kal\": \"Greenlandic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gr\\u00f6nland\", \"common\": \"Gr\\u00f6nland\"},\n\t\t\t\"fra\": {\"official\": \"Groenland\", \"common\": \"Groenland\"},\n\t\t\t\"hrv\": {\"official\": \"Grenland\", \"common\": \"Grenland\"},\n\t\t\t\"ita\": {\"official\": \"Groenlandia\", \"common\": \"Groenlandia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30ea\\u30fc\\u30f3\\u30e9\\u30f3\\u30c9\", \"common\": \"\\u30b0\\u30ea\\u30fc\\u30f3\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Groenland\", \"common\": \"Groenland\"},\n\t\t\t\"por\": {\"official\": \"Groenl\\u00e2ndia\", \"common\": \"Gronel\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0440\\u0435\\u043d\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\", \"common\": \"\\u0413\\u0440\\u0435\\u043d\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Groenlandia\", \"common\": \"Groenlandia\"},\n\t\t\t\"fin\": {\"official\": \"Gro\\u00f6nlanti\", \"common\": \"Gro\\u00f6nlanti\"}\n\t\t},\n\t\t\"latlng\": [72, -40],\n\t\t\"demonym\": \"Greenlandic\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 2166086\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guatemala\",\n\t\t\t\"official\": \"Republic of Guatemala\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Guatemala\",\n\t\t\t\t\t\"common\": \"Guatemala\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gt\"],\n\t\t\"cca2\": \"GT\",\n\t\t\"ccn3\": \"320\",\n\t\t\"cca3\": \"GTM\",\n\t\t\"cioc\": \"GUA\",\n\t\t\"currency\": [\"GTQ\"],\n\t\t\"callingCode\": [\"502\"],\n\t\t\"capital\": \"Guatemala City\",\n\t\t\"altSpellings\": [\"GT\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Gvatemala\", \"common\": \"Gvatemala\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30a2\\u30c6\\u30de\\u30e9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b0\\u30a2\\u30c6\\u30de\\u30e9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0432\\u0430\\u0442\\u0435\\u043c\\u0430\\u043b\\u0430\", \"common\": \"\\u0413\\u0432\\u0430\\u0442\\u0435\\u043c\\u0430\\u043b\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Guatemala\", \"common\": \"Guatemala\"},\n\t\t\t\"fin\": {\"official\": \"Guatemalan tasavalta\", \"common\": \"Guatemala\"}\n\t\t},\n\t\t\"latlng\": [15.5, -90.25],\n\t\t\"demonym\": \"Guatemalan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLZ\", \"SLV\", \"HND\", \"MEX\"],\n\t\t\"area\": 108889\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"French Guiana\",\n\t\t\t\"official\": \"Guiana\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Guyanes\",\n\t\t\t\t\t\"common\": \"Guyane fran\\u00e7aise\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gf\"],\n\t\t\"cca2\": \"GF\",\n\t\t\"ccn3\": \"254\",\n\t\t\"cca3\": \"GUF\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"594\"],\n\t\t\"capital\": \"Cayenne\",\n\t\t\"altSpellings\": [\"GF\", \"Guiana\", \"Guyane\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Guayana\", \"common\": \"Franz\\u00f6sisch Guyana\"},\n\t\t\t\"fra\": {\"official\": \"Guyane\", \"common\": \"Guyane\"},\n\t\t\t\"hrv\": {\"official\": \"Gijana\", \"common\": \"Francuska Gvajana\"},\n\t\t\t\"ita\": {\"official\": \"Guiana\", \"common\": \"Guyana francese\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ae\\u30a2\\u30ca\", \"common\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\u30ae\\u30a2\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Guyana\", \"common\": \"Frans-Guyana\"},\n\t\t\t\"por\": {\"official\": \"Guiana\", \"common\": \"Guiana Francesa\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0432\\u0438\\u0430\\u043d\\u0430\", \"common\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0430\\u044f \\u0413\\u0432\\u0438\\u0430\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Guayana\", \"common\": \"Guayana Francesa\"},\n\t\t\t\"fin\": {\"official\": \"Ranskan Guayana\", \"common\": \"Ranskan Guayana\"}\n\t\t},\n\t\t\"latlng\": [4, -53],\n\t\t\"demonym\": \"\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRA\", \"SUR\"],\n\t\t\"area\": 83534\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guam\",\n\t\t\t\"official\": \"Guam\",\n\t\t\t\"native\": {\n\t\t\t\t\"cha\": {\n\t\t\t\t\t\"official\": \"Gu\\u00e5h\\u00e5n\",\n\t\t\t\t\t\"common\": \"Gu\\u00e5h\\u00e5n\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Guam\",\n\t\t\t\t\t\"common\": \"Guam\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Guam\",\n\t\t\t\t\t\"common\": \"Guam\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gu\"],\n\t\t\"cca2\": \"GU\",\n\t\t\"ccn3\": \"316\",\n\t\t\"cca3\": \"GUM\",\n\t\t\"cioc\": \"GUM\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1671\"],\n\t\t\"capital\": \"Hag\\u00e5t\\u00f1a\",\n\t\t\"altSpellings\": [\"GU\", \"Gu\\u00e5h\\u00e5n\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"cha\": \"Chamorro\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"fra\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"hrv\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"ita\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b0\\u30a2\\u30e0\", \"common\": \"\\u30b0\\u30a2\\u30e0\"},\n\t\t\t\"nld\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"por\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u0443\\u0430\\u043c\", \"common\": \"\\u0413\\u0443\\u0430\\u043c\"},\n\t\t\t\"spa\": {\"official\": \"Guam\", \"common\": \"Guam\"},\n\t\t\t\"fin\": {\"official\": \"Guam\", \"common\": \"Guam\"}\n\t\t},\n\t\t\"latlng\": [13.46666666, 144.78333333],\n\t\t\"demonym\": \"Guamanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 549\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Guyana\",\n\t\t\t\"official\": \"Co-operative Republic of Guyana\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Co-operative Republic of Guyana\",\n\t\t\t\t\t\"common\": \"Guyana\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gy\"],\n\t\t\"cca2\": \"GY\",\n\t\t\"ccn3\": \"328\",\n\t\t\"cca3\": \"GUY\",\n\t\t\"cioc\": \"GUY\",\n\t\t\"currency\": [\"GYD\"],\n\t\t\"callingCode\": [\"592\"],\n\t\t\"capital\": \"Georgetown\",\n\t\t\"altSpellings\": [\"GY\", \"Co-operative Republic of Guyana\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Kooperative Republik Guyana\", \"common\": \"Guyana\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique coop\\u00e9rative de Guyana\", \"common\": \"Guyana\"},\n\t\t\t\"hrv\": {\"official\": \"Zadruga Republika Gvajana\", \"common\": \"Gvajana\"},\n\t\t\t\"ita\": {\"official\": \"Co -operative Republic of Guyana\", \"common\": \"Guyana\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ac\\u30a4\\u30a2\\u30ca\\u306e\\u5354\\u540c\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ac\\u30a4\\u30a2\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Co\\u00f6peratieve Republiek Guyana\", \"common\": \"Guyana\"},\n\t\t\t\"por\": {\"official\": \"Co -operative Rep\\u00fablica da Guiana\", \"common\": \"Guiana\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u043e\\u043f\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0430\\u0439\\u0430\\u043d\\u0430\", \"common\": \"\\u0413\\u0430\\u0439\\u0430\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Cooperativa de Guyana\", \"common\": \"Guyana\"},\n\t\t\t\"fin\": {\"official\": \"Guayanan osuustoiminnallinen tasavalta\", \"common\": \"Guayana\"}\n\t\t},\n\t\t\"latlng\": [5, -59],\n\t\t\"demonym\": \"Guyanese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRA\", \"SUR\", \"VEN\"],\n\t\t\"area\": 214969\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Hong Kong\",\n\t\t\t\"official\": \"Hong Kong Special Administrative Region of the People's Republic of China\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Hong Kong Special Administrative Region of the People's Republic of China\",\n\t\t\t\t\t\"common\": \"Hong Kong\"\n\t\t\t\t},\n\t\t\t\t\"zho\": {\n\t\t\t\t\t\"official\": \"\\u9999\\u6e2f\\u4e2d\\u56fd\\u7279\\u522b\\u884c\\u653f\\u533a\\u7684\\u4eba\\u6c11\\u5171\\u548c\\u56fd\",\n\t\t\t\t\t\"common\": \"\\u9999\\u6e2f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".hk\", \".\\u9999\\u6e2f\"],\n\t\t\"cca2\": \"HK\",\n\t\t\"ccn3\": \"344\",\n\t\t\"cca3\": \"HKG\",\n\t\t\"cioc\": \"HKG\",\n\t\t\"currency\": [\"HKD\"],\n\t\t\"callingCode\": [\"852\"],\n\t\t\"capital\": \"City of Victoria\",\n\t\t\"altSpellings\": [\"HK\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"zho\": \"Chinese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Sonderverwaltungszone der Volksrepublik China\", \"common\": \"Hongkong\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9gion administrative sp\\u00e9ciale de Hong Kong de la R\\u00e9publique populaire de Chine\", \"common\": \"Hong Kong\"},\n\t\t\t\"hrv\": {\"official\": \"Hong Kong Posebnog upravnog podru\\u010djaNarodne Republike Kine\", \"common\": \"Hong Kong\"},\n\t\t\t\"ita\": {\"official\": \"Hong Kong Regione amministrativa speciale della Repubblica Popolare Cinese\", \"common\": \"Hong Kong\"},\n\t\t\t\"jpn\": {\"official\": \"\\u4e2d\\u83ef\\u4eba\\u6c11\\u5171\\u548c\\u56fd\\u9999\\u6e2f\\u7279\\u5225\\u884c\\u653f\\u533a\", \"common\": \"\\u9999\\u6e2f\"},\n\t\t\t\"nld\": {\"official\": \"Hong Kong Speciale Administratieve Regio van de Volksrepubliek China\", \"common\": \"Hongkong\"},\n\t\t\t\"por\": {\"official\": \"Hong Kong Regi\\u00e3o Administrativa Especial da Rep\\u00fablica Popular da China\", \"common\": \"Hong Kong\"},\n\t\t\t\"rus\": {\"official\": \"Hong Kong \\u0421\\u043f\\u0435\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0430\\u0434\\u043c\\u0438\\u043d\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u044b\\u0439 \\u0440\\u0430\\u0439\\u043e\\u043d \\u041a\\u0438\\u0442\\u0430\\u0439\\u0441\\u043a\\u043e\\u0439 \\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e\\u0439 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0438 \\u041a\\u0438\\u0442\\u0430\\u044f\", \"common\": \"\\u0413\\u043e\\u043d\\u043a\\u043e\\u043d\\u0433\"},\n\t\t\t\"spa\": {\"official\": \"Hong Kong Regi\\u00f3n Administrativa Especial de la Rep\\u00fablica Popular China\", \"common\": \"Hong Kong\"},\n\t\t\t\"fin\": {\"official\": \"Hong Kongin erityishallintoalue\", \"common\": \"Hongkong\"}\n\t\t},\n\t\t\"latlng\": [22.267, 114.188],\n\t\t\"demonym\": \"Hong Konger\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CHN\"],\n\t\t\"area\": 1104\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Heard Island and McDonald Islands\",\n\t\t\t\"official\": \"Heard Island and McDonald Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Heard Island and McDonald Islands\",\n\t\t\t\t\t\"common\": \"Heard Island and McDonald Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".hm\", \".aq\"],\n\t\t\"cca2\": \"HM\",\n\t\t\"ccn3\": \"334\",\n\t\t\"cca3\": \"HMD\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [],\n\t\t\"capital\": \"\",\n\t\t\"altSpellings\": [\"HM\", \"Heard Island and McDonald Mcdonald Islands\"],\n\t\t\"region\": \"\",\n\t\t\"subregion\": \"\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Heard und McDonaldinseln\", \"common\": \"Heard und die McDonaldinseln\"},\n\t\t\t\"fra\": {\"official\": \"Des \\u00eeles Heard et McDonald\", \"common\": \"\\u00celes Heard-et-MacDonald\"},\n\t\t\t\"hrv\": {\"official\": \"Otok Heard i oto\\u010dje McDonald\", \"common\": \"Otok Heard i oto\\u010dje McDonald\"},\n\t\t\t\"ita\": {\"official\": \"Isole Heard e McDonald\", \"common\": \"Isole Heard e McDonald\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cf\\u30fc\\u30c9\\u5cf6\\u3068\\u30de\\u30af\\u30c9\\u30ca\\u30eb\\u30c9\\u8af8\\u5cf6\", \"common\": \"\\u30cf\\u30fc\\u30c9\\u5cf6\\u3068\\u30de\\u30af\\u30c9\\u30ca\\u30eb\\u30c9\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Heard en McDonaldeilanden\", \"common\": \"Heard-en McDonaldeilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilha Heard e Ilhas McDonald\", \"common\": \"Ilha Heard e Ilhas McDonald\"},\n\t\t\t\"rus\": {\"official\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u0425\\u0435\\u0440\\u0434 \\u0438 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041c\\u0430\\u043a\\u0434\\u043e\\u043d\\u0430\\u043b\\u044c\\u0434\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u0425\\u0435\\u0440\\u0434 \\u0438 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041c\\u0430\\u043a\\u0434\\u043e\\u043d\\u0430\\u043b\\u044c\\u0434\"},\n\t\t\t\"spa\": {\"official\": \"Islas Heard y McDonald\", \"common\": \"Islas Heard y McDonald\"},\n\t\t\t\"fin\": {\"official\": \"Heard ja McDonaldinsaaret\", \"common\": \"Heard ja McDonaldinsaaret\"}\n\t\t},\n\t\t\"latlng\": [-53.1, 72.51666666],\n\t\t\"demonym\": \"Heard and McDonald Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 412\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Honduras\",\n\t\t\t\"official\": \"Republic of Honduras\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Honduras\",\n\t\t\t\t\t\"common\": \"Honduras\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".hn\"],\n\t\t\"cca2\": \"HN\",\n\t\t\"ccn3\": \"340\",\n\t\t\"cca3\": \"HND\",\n\t\t\"cioc\": \"HON\",\n\t\t\"currency\": [\"HNL\"],\n\t\t\"callingCode\": [\"504\"],\n\t\t\"capital\": \"Tegucigalpa\",\n\t\t\"altSpellings\": [\"HN\", \"Republic of Honduras\", \"Rep\\u00fablica de Honduras\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30db\\u30f3\\u30b8\\u30e5\\u30e9\\u30b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30db\\u30f3\\u30b8\\u30e5\\u30e9\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u043e\\u043d\\u0434\\u0443\\u0440\\u0430\\u0441\", \"common\": \"\\u0413\\u043e\\u043d\\u0434\\u0443\\u0440\\u0430\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Honduras\", \"common\": \"Honduras\"},\n\t\t\t\"fin\": {\"official\": \"Hondurasin tasavalta\", \"common\": \"Honduras\"}\n\t\t},\n\t\t\"latlng\": [15, -86.5],\n\t\t\"demonym\": \"Honduran\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GTM\", \"SLV\", \"NIC\"],\n\t\t\"area\": 112492\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Croatia\",\n\t\t\t\"official\": \"Republic of Croatia\",\n\t\t\t\"native\": {\n\t\t\t\t\"hrv\": {\n\t\t\t\t\t\"official\": \"Republika Hrvatska\",\n\t\t\t\t\t\"common\": \"Hrvatska\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".hr\"],\n\t\t\"cca2\": \"HR\",\n\t\t\"ccn3\": \"191\",\n\t\t\"cca3\": \"HRV\",\n\t\t\"cioc\": \"CRO\",\n\t\t\"currency\": [\"HRK\"],\n\t\t\"callingCode\": [\"385\"],\n\t\t\"capital\": \"Zagreb\",\n\t\t\"altSpellings\": [\"HR\", \"Hrvatska\", \"Republic of Croatia\", \"Republika Hrvatska\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"hrv\": \"Croatian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Croatia\", \"common\": \"Croatia\"},\n\t\t\t\"deu\": {\"official\": \"Republik Kroatien\", \"common\": \"Kroatien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Croatie\", \"common\": \"Croatie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Hrvatska\", \"common\": \"Hrvatska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Croazia\", \"common\": \"Croazia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30af\\u30ed\\u30a2\\u30c1\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30af\\u30ed\\u30a2\\u30c1\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Kroati\\u00eb\", \"common\": \"Kroati\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Cro\\u00e1cia\", \"common\": \"Cro\\u00e1cia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0425\\u043e\\u0440\\u0432\\u0430\\u0442\\u0438\\u044f\", \"common\": \"\\u0425\\u043e\\u0440\\u0432\\u0430\\u0442\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Croacia\", \"common\": \"Croacia\"},\n\t\t\t\"fin\": {\"official\": \"Kroatian tasavalta\", \"common\": \"Kroatia\"}\n\t\t},\n\t\t\"latlng\": [45.16666666, 15.5],\n\t\t\"demonym\": \"Croatian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BIH\", \"HUN\", \"MNE\", \"SRB\", \"SVN\"],\n\t\t\"area\": 56594\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Haiti\",\n\t\t\t\"official\": \"Republic of Haiti\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique d'Ha\\u00efti\",\n\t\t\t\t\t\"common\": \"Ha\\u00efti\"\n\t\t\t\t},\n\t\t\t\t\"hat\": {\n\t\t\t\t\t\"official\": \"Repiblik Ayiti\",\n\t\t\t\t\t\"common\": \"Ayiti\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ht\"],\n\t\t\"cca2\": \"HT\",\n\t\t\"ccn3\": \"332\",\n\t\t\"cca3\": \"HTI\",\n\t\t\"cioc\": \"HAI\",\n\t\t\"currency\": [\"HTG\", \"USD\"],\n\t\t\"callingCode\": [\"509\"],\n\t\t\"capital\": \"Port-au-Prince\",\n\t\t\"altSpellings\": [\"HT\", \"Republic of Haiti\", \"R\\u00e9publique d'Ha\\u00efti\", \"Repiblik Ayiti\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"hat\": \"Haitian Creole\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Haiti\", \"common\": \"Haiti\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Ha\\u00efti\", \"common\": \"Ha\\u00efti\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Haiti\", \"common\": \"Haiti\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Haiti\", \"common\": \"Haiti\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cf\\u30a4\\u30c1\\u5171\\u548c\\u56fd\", \"common\": \"\\u30cf\\u30a4\\u30c1\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Ha\\u00efti\", \"common\": \"Ha\\u00efti\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Haiti\", \"common\": \"Haiti\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0413\\u0430\\u0438\\u0442\\u0438\", \"common\": \"\\u0413\\u0430\\u0438\\u0442\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Hait\\u00ed\", \"common\": \"Haiti\"},\n\t\t\t\"fin\": {\"official\": \"Haitin tasavalta\", \"common\": \"Haiti\"}\n\t\t},\n\t\t\"latlng\": [19, -72.41666666],\n\t\t\"demonym\": \"Haitian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DOM\"],\n\t\t\"area\": 27750\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Hungary\",\n\t\t\t\"official\": \"Hungary\",\n\t\t\t\"native\": {\n\t\t\t\t\"hun\": {\n\t\t\t\t\t\"official\": \"Magyarorsz\\u00e1g\",\n\t\t\t\t\t\"common\": \"Magyarorsz\\u00e1g\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".hu\"],\n\t\t\"cca2\": \"HU\",\n\t\t\"ccn3\": \"348\",\n\t\t\"cca3\": \"HUN\",\n\t\t\"cioc\": \"HUN\",\n\t\t\"currency\": [\"HUF\"],\n\t\t\"callingCode\": [\"36\"],\n\t\t\"capital\": \"Budapest\",\n\t\t\"altSpellings\": [\"HU\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"hun\": \"Hungarian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Ungarn\", \"common\": \"Ungarn\"},\n\t\t\t\"fra\": {\"official\": \"Hongrie\", \"common\": \"Hongrie\"},\n\t\t\t\"hrv\": {\"official\": \"Mad\\u017earska\", \"common\": \"Ma\\u0111arska\"},\n\t\t\t\"ita\": {\"official\": \"Ungheria\", \"common\": \"Ungheria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cf\\u30f3\\u30ac\\u30ea\\u30fc\", \"common\": \"\\u30cf\\u30f3\\u30ac\\u30ea\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Hongarije\", \"common\": \"Hongarije\"},\n\t\t\t\"por\": {\"official\": \"Hungria\", \"common\": \"Hungria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u0435\\u043d\\u0433\\u0440\\u0438\\u044f\", \"common\": \"\\u0412\\u0435\\u043d\\u0433\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Hungr\\u00eda\", \"common\": \"Hungr\\u00eda\"},\n\t\t\t\"fin\": {\"official\": \"Unkari\", \"common\": \"Unkari\"}\n\t\t},\n\t\t\"latlng\": [47, 20],\n\t\t\"demonym\": \"Hungarian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AUT\", \"HRV\", \"ROU\", \"SRB\", \"SVK\", \"SVN\", \"UKR\"],\n\t\t\"area\": 93028\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Indonesia\",\n\t\t\t\"official\": \"Republic of Indonesia\",\n\t\t\t\"native\": {\n\t\t\t\t\"ind\": {\n\t\t\t\t\t\"official\": \"Republik Indonesia\",\n\t\t\t\t\t\"common\": \"Indonesia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".id\"],\n\t\t\"cca2\": \"ID\",\n\t\t\"ccn3\": \"360\",\n\t\t\"cca3\": \"IDN\",\n\t\t\"cioc\": \"INA\",\n\t\t\"currency\": [\"IDR\"],\n\t\t\"callingCode\": [\"62\"],\n\t\t\"capital\": \"Jakarta\",\n\t\t\"altSpellings\": [\"ID\", \"Republic of Indonesia\", \"Republik Indonesia\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"ind\": \"Indonesian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Indonesien\", \"common\": \"Indonesien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Indon\\u00e9sie\", \"common\": \"Indon\\u00e9sie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Indonezija\", \"common\": \"Indonezija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Indonesia\", \"common\": \"Indonesia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30f3\\u30c9\\u30cd\\u30b7\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30f3\\u30c9\\u30cd\\u30b7\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Indonesi\\u00eb\", \"common\": \"Indonesi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Indon\\u00e9sia\", \"common\": \"Indon\\u00e9sia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0418\\u043d\\u0434\\u043e\\u043d\\u0435\\u0437\\u0438\\u044f\", \"common\": \"\\u0418\\u043d\\u0434\\u043e\\u043d\\u0435\\u0437\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Indonesia\", \"common\": \"Indonesia\"},\n\t\t\t\"fin\": {\"official\": \"Indonesian tasavalta\", \"common\": \"Indonesia\"}\n\t\t},\n\t\t\"latlng\": [-5, 120],\n\t\t\"demonym\": \"Indonesian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"TLS\", \"MYS\", \"PNG\"],\n\t\t\"area\": 1904569\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Isle of Man\",\n\t\t\t\"official\": \"Isle of Man\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Isle of Man\",\n\t\t\t\t\t\"common\": \"Isle of Man\"\n\t\t\t\t},\n\t\t\t\t\"glv\": {\n\t\t\t\t\t\"official\": \"Ellan Vannin or Mannin\",\n\t\t\t\t\t\"common\": \"Mannin\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".im\"],\n\t\t\"cca2\": \"IM\",\n\t\t\"ccn3\": \"833\",\n\t\t\"cca3\": \"IMN\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"GBP\"],\n\t\t\"callingCode\": [\"44\"],\n\t\t\"capital\": \"Douglas\",\n\t\t\"altSpellings\": [\"IM\", \"Ellan Vannin\", \"Mann\", \"Mannin\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"glv\": \"Manx\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Isle of Man\", \"common\": \"Insel Man\"},\n\t\t\t\"fra\": {\"official\": \"Isle of Man\", \"common\": \"\\u00cele de Man\"},\n\t\t\t\"hrv\": {\"official\": \"Mana ostrvo\", \"common\": \"Otok Man\"},\n\t\t\t\"ita\": {\"official\": \"Isola di Man\", \"common\": \"Isola di Man\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30f3\\u5cf6\", \"common\": \"\\u30de\\u30f3\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Isle of Man\", \"common\": \"Isle of Man\"},\n\t\t\t\"por\": {\"official\": \"Isle of Man\", \"common\": \"Ilha de Man\"},\n\t\t\t\"rus\": {\"official\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u041c\\u044d\\u043d\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432 \\u041c\\u044d\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Isla de Man\", \"common\": \"Isla de Man\"},\n\t\t\t\"fin\": {\"official\": \"Mansaari\", \"common\": \"Mansaari\"}\n\t\t},\n\t\t\"latlng\": [54.25, -4.5],\n\t\t\"demonym\": \"Manx\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 572\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"India\",\n\t\t\t\"official\": \"Republic of India\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of India\",\n\t\t\t\t\t\"common\": \"India\"\n\t\t\t\t},\n\t\t\t\t\"hin\": {\n\t\t\t\t\t\"official\": \"\\u092d\\u093e\\u0930\\u0924 \\u0917\\u0923\\u0930\\u093e\\u091c\\u094d\\u092f\",\n\t\t\t\t\t\"common\": \"\\u092d\\u093e\\u0930\\u0924\"\n\t\t\t\t},\n\t\t\t\t\"tam\": {\n\t\t\t\t\t\"official\": \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0B95\\u0BCD \\u0B95\\u0BC1\\u0B9F\\u0BBF\\u0BAF\\u0BB0\\u0B9A\\u0BC1\",\n\t\t\t\t\t\"common\": \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".in\"],\n\t\t\"cca2\": \"IN\",\n\t\t\"ccn3\": \"356\",\n\t\t\"cca3\": \"IND\",\n\t\t\"cioc\": \"IND\",\n\t\t\"currency\": [\"INR\"],\n\t\t\"callingCode\": [\"91\"],\n\t\t\"capital\": \"New Delhi\",\n\t\t\"altSpellings\": [\"IN\", \"Bh\\u0101rat\", \"Republic of India\", \"Bharat Ganrajya\", \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"hin\": \"Hindi\",\n\t\t\t\"tam\": \"Tamil\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Indien\", \"common\": \"Indien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de l'Inde\", \"common\": \"Inde\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Indija\", \"common\": \"Indija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'India\", \"common\": \"India\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30f3\\u30c9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek India\", \"common\": \"India\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da \\u00cdndia\", \"common\": \"\\u00cdndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0418\\u043d\\u0434\\u0438\\u044f\", \"common\": \"\\u0418\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de la India\", \"common\": \"India\"},\n\t\t\t\"fin\": {\"official\": \"Intian tasavalta\", \"common\": \"Intia\"}\n\t\t},\n\t\t\"latlng\": [20, 77],\n\t\t\"demonym\": \"Indian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AFG\", \"BGD\", \"BTN\", \"MMR\", \"CHN\", \"NPL\", \"PAK\", \"LKA\"],\n\t\t\"area\": 3287590\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"British Indian Ocean Territory\",\n\t\t\t\"official\": \"British Indian Ocean Territory\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"British Indian Ocean Territory\",\n\t\t\t\t\t\"common\": \"British Indian Ocean Territory\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".io\"],\n\t\t\"cca2\": \"IO\",\n\t\t\"ccn3\": \"086\",\n\t\t\"cca3\": \"IOT\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"246\"],\n\t\t\"capital\": \"Diego Garcia\",\n\t\t\"altSpellings\": [\"IO\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"British Indian Ocean Territory\", \"common\": \"Tiriogaeth Brydeinig Cefnfor India\"},\n\t\t\t\"deu\": {\"official\": \"Britisch-Indischer Ozean\", \"common\": \"Britisches Territorium im Indischen Ozean\"},\n\t\t\t\"fra\": {\"official\": \"Territoire britannique de l' oc\\u00e9an Indien\", \"common\": \"Territoire britannique de l'oc\\u00e9an Indien\"},\n\t\t\t\"hrv\": {\"official\": \"British Indian Ocean Territory\", \"common\": \"Britanski Indijskooceanski teritorij\"},\n\t\t\t\"ita\": {\"official\": \"Territorio britannico dell'Oceano Indiano\", \"common\": \"Territorio britannico dell'oceano indiano\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30ae\\u30ea\\u30b9\\u9818\\u30a4\\u30f3\\u30c9\\u6d0b\\u5730\\u57df\", \"common\": \"\\u30a4\\u30ae\\u30ea\\u30b9\\u9818\\u30a4\\u30f3\\u30c9\\u6d0b\\u5730\\u57df\"},\n\t\t\t\"nld\": {\"official\": \"Brits Indische Oceaan Territorium\", \"common\": \"Britse Gebieden in de Indische Oceaan\"},\n\t\t\t\"por\": {\"official\": \"British Indian Ocean Territory\", \"common\": \"Territ\\u00f3rio Brit\\u00e2nico do Oceano \\u00cdndico\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u0440\\u0438\\u0442\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u0418\\u043d\\u0434\\u0438\\u0439\\u0441\\u043a\\u043e\\u0433\\u043e \\u043e\\u043a\\u0435\\u0430\\u043d\\u0430\", \"common\": \"\\u0411\\u0440\\u0438\\u0442\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u0432 \\u0418\\u043d\\u0434\\u0438\\u0439\\u0441\\u043a\\u043e\\u043c \\u043e\\u043a\\u0435\\u0430\\u043d\\u0435\"},\n\t\t\t\"spa\": {\"official\": \"Territorio Brit\\u00e1nico del Oc\\u00e9ano \\u00cdndico\", \"common\": \"Territorio Brit\\u00e1nico del Oc\\u00e9ano \\u00cdndico\"},\n\t\t\t\"fin\": {\"official\": \"Brittil\\u00e4inen Intian valtameren alue\", \"common\": \"Brittil\\u00e4inen Intian valtameren alue\"}\n\t\t},\n\t\t\"latlng\": [-6, 71.5],\n\t\t\"demonym\": \"Indian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 60\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ireland\",\n\t\t\t\"official\": \"Republic of Ireland\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Ireland\",\n\t\t\t\t\t\"common\": \"Ireland\"\n\t\t\t\t},\n\t\t\t\t\"gle\": {\n\t\t\t\t\t\"official\": \"Poblacht na h\\u00c9ireann\",\n\t\t\t\t\t\"common\": \"\\u00c9ire\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ie\"],\n\t\t\"cca2\": \"IE\",\n\t\t\"ccn3\": \"372\",\n\t\t\"cca3\": \"IRL\",\n\t\t\"cioc\": \"IRL\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"353\"],\n\t\t\"capital\": \"Dublin\",\n\t\t\"altSpellings\": [\"IE\", \"\\u00c9ire\", \"Republic of Ireland\", \"Poblacht na h\\u00c9ireann\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"gle\": \"Irish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Irland\", \"common\": \"Irland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Irlande\", \"common\": \"Irlande\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Irska\", \"common\": \"Irska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica d'Irlanda\", \"common\": \"Irlanda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30a4\\u30eb\\u30e9\\u30f3\\u30c9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a2\\u30a4\\u30eb\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Republic of Ireland\", \"common\": \"Ierland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Irlanda\", \"common\": \"Irlanda\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0440\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\", \"common\": \"\\u0418\\u0440\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Irlanda\", \"common\": \"Irlanda\"},\n\t\t\t\"fin\": {\"official\": \"Irlannin tasavalta\", \"common\": \"Irlanti\"}\n\t\t},\n\t\t\"latlng\": [53, -8],\n\t\t\"demonym\": \"Irish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GBR\"],\n\t\t\"area\": 70273\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Iran\",\n\t\t\t\"official\": \"Islamic Republic of Iran\",\n\t\t\t\"native\": {\n\t\t\t\t\"fas\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u06cc \\u0627\\u0633\\u0644\\u0627\\u0645\\u06cc \\u0627\\u06cc\\u0631\\u0627\\u0646\",\n\t\t\t\t\t\"common\": \"\\u0627\\u06cc\\u0631\\u0627\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ir\", \"\\u0627\\u06cc\\u0631\\u0627\\u0646.\"],\n\t\t\"cca2\": \"IR\",\n\t\t\"ccn3\": \"364\",\n\t\t\"cca3\": \"IRN\",\n\t\t\"cioc\": \"IRI\",\n\t\t\"currency\": [\"IRR\"],\n\t\t\"callingCode\": [\"98\"],\n\t\t\"capital\": \"Tehran\",\n\t\t\"altSpellings\": [\"IR\", \"Islamic Republic of Iran\", \"Iran, Islamic Republic of\", \"Jomhuri-ye Esl\\u0101mi-ye Ir\\u0101n\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"fas\": \"Persian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Islamische Republik Iran\", \"common\": \"Iran\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique islamique d'Iran\", \"common\": \"Iran\"},\n\t\t\t\"hrv\": {\"official\": \"Islamska Republika Iran\", \"common\": \"Iran\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30e9\\u30f3\\u00b7\\u30a4\\u30b9\\u30e9\\u30e0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30e9\\u30f3\\u30fb\\u30a4\\u30b9\\u30e9\\u30e0\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Islamitische Republiek Iran\", \"common\": \"Iran\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Isl\\u00e2mica do Ir\\u00e3\", \"common\": \"Ir\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0441\\u043b\\u0430\\u043c\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0418\\u0440\\u0430\\u043d\", \"common\": \"\\u0418\\u0440\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Isl\\u00e1mica de Ir\\u00e1n\", \"common\": \"Iran\"},\n\t\t\t\"fin\": {\"official\": \"Iranin islamilainen tasavalta\", \"common\": \"Iran\"}\n\t\t},\n\t\t\"latlng\": [32, 53],\n\t\t\"demonym\": \"Iranian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AFG\", \"ARM\", \"AZE\", \"IRQ\", \"PAK\", \"TUR\", \"TKM\"],\n\t\t\"area\": 1648195\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Iraq\",\n\t\t\t\"official\": \"Republic of Iraq\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\"\n\t\t\t\t},\n\t\t\t\t\"arc\": {\n\t\t\t\t\t\"official\": \"\\u0729\\u0718\\u073c\\u071b\\u0722\\u0735\\u0710 \\u0710\\u071d\\u073c\\u072a\\u0732\\u0729\",\n\t\t\t\t\t\"common\": \"\\u0729\\u0718\\u073c\\u071b\\u0722\\u0735\\u0710\"\n\t\t\t\t},\n\t\t\t\t\"ckb\": {\n\t\t\t\t\t\"official\": \"\\u06a9\\u06c6\\u0645\\u0627\\u0631\\u06cc \\u0639\\u06ce\\u0631\\u0627\\u0642\",\n\t\t\t\t\t\"common\": \"\\u06a9\\u06c6\\u0645\\u0627\\u0631\\u06cc\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".iq\"],\n\t\t\"cca2\": \"IQ\",\n\t\t\"ccn3\": \"368\",\n\t\t\"cca3\": \"IRQ\",\n\t\t\"cioc\": \"IRQ\",\n\t\t\"currency\": [\"IQD\"],\n\t\t\"callingCode\": [\"964\"],\n\t\t\"capital\": \"Baghdad\",\n\t\t\"altSpellings\": [\"IQ\", \"Republic of Iraq\", \"Jumh\\u016briyyat al-\\u2018Ir\\u0101q\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"arc\": \"Aramaic\",\n\t\t\t\"ckb\": \"Sorani\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Irak\", \"common\": \"Irak\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Irak\", \"common\": \"Irak\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Irak\", \"common\": \"Irak\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'Iraq\", \"common\": \"Iraq\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30e9\\u30af\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30e9\\u30af\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Irak\", \"common\": \"Irak\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Iraque\", \"common\": \"Iraque\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0418\\u0440\\u0430\\u043a\", \"common\": \"\\u0418\\u0440\\u0430\\u043a\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Irak\", \"common\": \"Irak\"},\n\t\t\t\"fin\": {\"official\": \"Irakin tasavalta\", \"common\": \"Irak\"}\n\t\t},\n\t\t\"latlng\": [33, 44],\n\t\t\"demonym\": \"Iraqi\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRN\", \"JOR\", \"KWT\", \"SAU\", \"SYR\", \"TUR\"],\n\t\t\"area\": 438317\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Iceland\",\n\t\t\t\"official\": \"Iceland\",\n\t\t\t\"native\": {\n\t\t\t\t\"isl\": {\n\t\t\t\t\t\"official\": \"\\u00cdsland\",\n\t\t\t\t\t\"common\": \"\\u00cdsland\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".is\"],\n\t\t\"cca2\": \"IS\",\n\t\t\"ccn3\": \"352\",\n\t\t\"cca3\": \"ISL\",\n\t\t\"cioc\": \"ISL\",\n\t\t\"currency\": [\"ISK\"],\n\t\t\"callingCode\": [\"354\"],\n\t\t\"capital\": \"Reykjavik\",\n\t\t\"altSpellings\": [\"IS\", \"Island\", \"Republic of Iceland\", \"L\\u00fd\\u00f0veldi\\u00f0 \\u00cdsland\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"isl\": \"Icelandic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Island\", \"common\": \"Island\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Islande\", \"common\": \"Islande\"},\n\t\t\t\"hrv\": {\"official\": \"Island\", \"common\": \"Island\"},\n\t\t\t\"ita\": {\"official\": \"Islanda\", \"common\": \"Islanda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30a4\\u30b9\\u30e9\\u30f3\\u30c9\", \"common\": \"\\u30a2\\u30a4\\u30b9\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"IJsland\", \"common\": \"IJsland\"},\n\t\t\t\"por\": {\"official\": \"Isl\\u00e2ndia\", \"common\": \"Isl\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0441\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\", \"common\": \"\\u0418\\u0441\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Islandia\", \"common\": \"Islandia\"},\n\t\t\t\"fin\": {\"official\": \"Islanti\", \"common\": \"Islanti\"}\n\t\t},\n\t\t\"latlng\": [65, -18],\n\t\t\"demonym\": \"Icelander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 103000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Israel\",\n\t\t\t\"official\": \"State of Israel\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062f\\u0648\\u0644\\u0629 \\u0625\\u0633\\u0631\\u0627\\u0626\\u064a\\u0644\",\n\t\t\t\t\t\"common\": \"\\u0625\\u0633\\u0631\\u0627\\u0626\\u064a\\u0644\"\n\t\t\t\t},\n\t\t\t\t\"heb\": {\n\t\t\t\t\t\"official\": \"\\u05de\\u05d3\\u05d9\\u05e0\\u05ea \\u05d9\\u05e9\\u05e8\\u05d0\\u05dc\",\n\t\t\t\t\t\"common\": \"\\u05d9\\u05e9\\u05e8\\u05d0\\u05dc\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".il\"],\n\t\t\"cca2\": \"IL\",\n\t\t\"ccn3\": \"376\",\n\t\t\"cca3\": \"ISR\",\n\t\t\"cioc\": \"ISR\",\n\t\t\"currency\": [\"ILS\"],\n\t\t\"callingCode\": [\"972\"],\n\t\t\"capital\": \"Jerusalem\",\n\t\t\"altSpellings\": [\"IL\", \"State of Israel\", \"Med\\u012bnat Yisr\\u0101'el\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"heb\": \"Hebrew\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Israel\", \"common\": \"Israel\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat d'Isra\\u00ebl\", \"common\": \"Isra\\u00ebl\"},\n\t\t\t\"hrv\": {\"official\": \"Dr\\u017eava Izrael\", \"common\": \"Izrael\"},\n\t\t\t\"ita\": {\"official\": \"Stato di Israele\", \"common\": \"Israele\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30b9\\u30e9\\u30a8\\u30eb\\u56fd\", \"common\": \"\\u30a4\\u30b9\\u30e9\\u30a8\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Staat Isra\\u00ebl\", \"common\": \"Isra\\u00ebl\"},\n\t\t\t\"por\": {\"official\": \"Estado de Israel\", \"common\": \"Israel\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u0418\\u0437\\u0440\\u0430\\u0438\\u043b\\u044c\", \"common\": \"\\u0418\\u0437\\u0440\\u0430\\u0438\\u043b\\u044c\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Israel\", \"common\": \"Israel\"},\n\t\t\t\"fin\": {\"official\": \"Israelin valtio\", \"common\": \"Israel\"}\n\t\t},\n\t\t\"latlng\": [31.47, 35.13],\n\t\t\"demonym\": \"Israeli\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"EGY\", \"JOR\", \"LBN\", \"SYR\"],\n\t\t\"area\": 20770\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Italy\",\n\t\t\t\"official\": \"Italian Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"bar\": {\n\t\t\t\t\t\"official\": \"Italienische Republik\",\n\t\t\t\t\t\"common\": \"Italien\"\n\t\t\t\t},\n\t\t\t\t\"ita\": {\n\t\t\t\t\t\"official\": \"Repubblica italiana\",\n\t\t\t\t\t\"common\": \"Italia\"\n\t\t\t\t},\n\t\t\t\t\"srd\": {\n\t\t\t\t\t\"official\": \"Repubbricanu Italia\",\n\t\t\t\t\t\"common\": \"Italia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".it\"],\n\t\t\"cca2\": \"IT\",\n\t\t\"ccn3\": \"380\",\n\t\t\"cca3\": \"ITA\",\n\t\t\"cioc\": \"ITA\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"39\"],\n\t\t\"capital\": \"Rome\",\n\t\t\"altSpellings\": [\"IT\", \"Italian Republic\", \"Repubblica italiana\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"bar\": \"Austro-Bavarian German\",\n\t\t\t\"ita\": \"Italian\",\n\t\t\t\"srd\": \"Sardinian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Italienische Republik\", \"common\": \"Italien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique italienne\", \"common\": \"Italie\"},\n\t\t\t\"hrv\": {\"official\": \"talijanska Republika\", \"common\": \"Italija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica italiana\", \"common\": \"Italia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30bf\\u30ea\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30bf\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Italiaanse Republiek\", \"common\": \"Itali\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Italiana\", \"common\": \"It\\u00e1lia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0438\\u0442\\u0430\\u043b\\u044c\\u044f\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0418\\u0442\\u0430\\u043b\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Italiana\", \"common\": \"Italia\"},\n\t\t\t\"fin\": {\"official\": \"Italian tasavalta\", \"common\": \"Italia\"}\n\t\t},\n\t\t\"latlng\": [42.83333333, 12.83333333],\n\t\t\"demonym\": \"Italian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AUT\", \"FRA\", \"SMR\", \"SVN\", \"CHE\", \"VAT\"],\n\t\t\"area\": 301336\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Jamaica\",\n\t\t\t\"official\": \"Jamaica\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Jamaica\",\n\t\t\t\t\t\"common\": \"Jamaica\"\n\t\t\t\t},\n\t\t\t\t\"jam\": {\n\t\t\t\t\t\"official\": \"Jamaica\",\n\t\t\t\t\t\"common\": \"Jamaica\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".jm\"],\n\t\t\"cca2\": \"JM\",\n\t\t\"ccn3\": \"388\",\n\t\t\"cca3\": \"JAM\",\n\t\t\"cioc\": \"JAM\",\n\t\t\"currency\": [\"JMD\"],\n\t\t\"callingCode\": [\"1876\"],\n\t\t\"capital\": \"Kingston\",\n\t\t\"altSpellings\": [\"JM\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"jam\": \"Jamaican Patois\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Jamaika\", \"common\": \"Jamaika\"},\n\t\t\t\"fra\": {\"official\": \"Jama\\u00efque\", \"common\": \"Jama\\u00efque\"},\n\t\t\t\"hrv\": {\"official\": \"Jamajka\", \"common\": \"Jamajka\"},\n\t\t\t\"ita\": {\"official\": \"Giamaica\", \"common\": \"Giamaica\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b8\\u30e3\\u30de\\u30a4\\u30ab\", \"common\": \"\\u30b8\\u30e3\\u30de\\u30a4\\u30ab\"},\n\t\t\t\"nld\": {\"official\": \"Jamaica\", \"common\": \"Jamaica\"},\n\t\t\t\"por\": {\"official\": \"Jamaica\", \"common\": \"Jamaica\"},\n\t\t\t\"rus\": {\"official\": \"\\u042f\\u043c\\u0430\\u0439\\u043a\\u0430\", \"common\": \"\\u042f\\u043c\\u0430\\u0439\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Jamaica\", \"common\": \"Jamaica\"},\n\t\t\t\"fin\": {\"official\": \"Jamaika\", \"common\": \"Jamaika\"}\n\t\t},\n\t\t\"latlng\": [18.25, -77.5],\n\t\t\"demonym\": \"Jamaican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 10991\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Jersey\",\n\t\t\t\"official\": \"Bailiwick of Jersey\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Bailiwick of Jersey\",\n\t\t\t\t\t\"common\": \"Jersey\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Bailliage de Jersey\",\n\t\t\t\t\t\"common\": \"Jersey\"\n\t\t\t\t},\n\t\t\t\t\"nrf\": {\n\t\t\t\t\t\"official\": \"Bailliage d\\u00e9 J\\u00e8rri\",\n\t\t\t\t\t\"common\": \"J\\u00e8rri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".je\"],\n\t\t\"cca2\": \"JE\",\n\t\t\"ccn3\": \"832\",\n\t\t\"cca3\": \"JEY\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"GBP\"],\n\t\t\"callingCode\": [\"44\"],\n\t\t\"capital\": \"Saint Helier\",\n\t\t\"altSpellings\": [\"JE\", \"Bailiwick of Jersey\", \"Bailliage de Jersey\", \"Bailliage d\\u00e9 J\\u00e8rri\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"nrf\": \"J\\u00e8rriais\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vogtei Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"fra\": {\"official\": \"Bailliage de Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"hrv\": {\"official\": \"Struka od Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"ita\": {\"official\": \"Baliato di Jersey\", \"common\": \"Isola di Jersey\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b8\\u30e3\\u30fc\\u30b8\\u306e\\u5f97\\u610f\\u5206\\u91ce\", \"common\": \"\\u30b8\\u30e3\\u30fc\\u30b8\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Baljuwschap Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"por\": {\"official\": \"Bailiado de Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043d\\u043d\\u043e\\u0435 \\u0432\\u043b\\u0430\\u0434\\u0435\\u043d\\u0438\\u0435 \\u0414\\u0436\\u0435\\u0440\\u0441\\u0438\", \"common\": \"\\u0414\\u0436\\u0435\\u0440\\u0441\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Bail\\u00eda de Jersey\", \"common\": \"Jersey\"},\n\t\t\t\"fin\": {\"official\": \"Jersey\", \"common\": \"Jersey\"}\n\t\t},\n\t\t\"latlng\": [49.25, -2.16666666],\n\t\t\"demonym\": \"Channel Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 116\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Jordan\",\n\t\t\t\"official\": \"Hashemite Kingdom of Jordan\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\\u064a\\u0629 \\u0627\\u0644\\u0647\\u0627\\u0634\\u0645\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".jo\", \"\\u0627\\u0644\\u0627\\u0631\\u062f\\u0646.\"],\n\t\t\"cca2\": \"JO\",\n\t\t\"ccn3\": \"400\",\n\t\t\"cca3\": \"JOR\",\n\t\t\"cioc\": \"JOR\",\n\t\t\"currency\": [\"JOD\"],\n\t\t\"callingCode\": [\"962\"],\n\t\t\"capital\": \"Amman\",\n\t\t\"altSpellings\": [\"JO\", \"Hashemite Kingdom of Jordan\", \"al-Mamlakah al-Urdun\\u012byah al-H\\u0101shim\\u012byah\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Haschemitisches K\\u00f6nigreich Jordanien\", \"common\": \"Jordanien\"},\n\t\t\t\"fra\": {\"official\": \"Royaume hach\\u00e9mite de Jordanie\", \"common\": \"Jordanie\"},\n\t\t\t\"hrv\": {\"official\": \"Ha\\u0161emitske Kraljevine Jordan\", \"common\": \"Jordan\"},\n\t\t\t\"ita\": {\"official\": \"Regno hascemita di Giordania\", \"common\": \"Giordania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e8\\u30eb\\u30c0\\u30f3\\u00b7\\u30cf\\u30b7\\u30df\\u30c6\\u738b\\u56fd\", \"common\": \"\\u30e8\\u30eb\\u30c0\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Hasjemitisch Koninkrijk Jordani\\u00eb\", \"common\": \"Jordani\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Reino Hachemita da Jord\\u00e2nia\", \"common\": \"Jord\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u043e\\u0440\\u0434\\u0430\\u043d\\u0441\\u043a\\u043e\\u0433\\u043e \\u0425\\u0430\\u0448\\u0438\\u043c\\u0438\\u0442\\u0441\\u043a\\u043e\\u0433\\u043e \\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u0430\", \"common\": \"\\u0418\\u043e\\u0440\\u0434\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino Hachemita de Jordania\", \"common\": \"Jordania\"},\n\t\t\t\"fin\": {\"official\": \"Jordanian ha\\u0161emiittinen kunigaskunta\", \"common\": \"Jordania\"}\n\t\t},\n\t\t\"latlng\": [31, 36],\n\t\t\"demonym\": \"Jordanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRQ\", \"ISR\", \"SAU\", \"SYR\"],\n\t\t\"area\": 89342\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Japan\",\n\t\t\t\"official\": \"Japan\",\n\t\t\t\"native\": {\n\t\t\t\t\"jpn\": {\n\t\t\t\t\t\"official\": \"\\u65e5\\u672c\",\n\t\t\t\t\t\"common\": \"\\u65e5\\u672c\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".jp\", \".\\u307f\\u3093\\u306a\"],\n\t\t\"cca2\": \"JP\",\n\t\t\"ccn3\": \"392\",\n\t\t\"cca3\": \"JPN\",\n\t\t\"cioc\": \"JPN\",\n\t\t\"currency\": [\"JPY\"],\n\t\t\"callingCode\": [\"81\"],\n\t\t\"capital\": \"Tokyo\",\n\t\t\"altSpellings\": [\"JP\", \"Nippon\", \"Nihon\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"jpn\": \"Japanese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Japan\", \"common\": \"Japan\"},\n\t\t\t\"fra\": {\"official\": \"Japon\", \"common\": \"Japon\"},\n\t\t\t\"hrv\": {\"official\": \"Japan\", \"common\": \"Japan\"},\n\t\t\t\"ita\": {\"official\": \"Giappone\", \"common\": \"Giappone\"},\n\t\t\t\"jpn\": {\"official\": \"\\u65e5\\u672c\", \"common\": \"\\u65e5\\u672c\"},\n\t\t\t\"nld\": {\"official\": \"Japan\", \"common\": \"Japan\"},\n\t\t\t\"por\": {\"official\": \"Jap\\u00e3o\", \"common\": \"Jap\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u042f\\u043f\\u043e\\u043d\\u0438\\u044f\", \"common\": \"\\u042f\\u043f\\u043e\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Jap\\u00f3n\", \"common\": \"Jap\\u00f3n\"},\n\t\t\t\"fin\": {\"official\": \"Japani\", \"common\": \"Japani\"}\n\t\t},\n\t\t\"latlng\": [36, 138],\n\t\t\"demonym\": \"Japanese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 377930\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kazakhstan\",\n\t\t\t\"official\": \"Republic of Kazakhstan\",\n\t\t\t\"native\": {\n\t\t\t\t\"kaz\": {\n\t\t\t\t\t\"official\": \"\\u049a\\u0430\\u0437\\u0430\\u049b\\u0441\\u0442\\u0430\\u043d \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\\u0441\\u044b\",\n\t\t\t\t\t\"common\": \"\\u049a\\u0430\\u0437\\u0430\\u049b\\u0441\\u0442\\u0430\\u043d\"\n\t\t\t\t},\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\",\n\t\t\t\t\t\"common\": \"\\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kz\", \".\\u049b\\u0430\\u0437\"],\n\t\t\"cca2\": \"KZ\",\n\t\t\"ccn3\": \"398\",\n\t\t\"cca3\": \"KAZ\",\n\t\t\"cioc\": \"KAZ\",\n\t\t\"currency\": [\"KZT\"],\n\t\t\"callingCode\": [\"76\", \"77\"],\n\t\t\"capital\": \"Astana\",\n\t\t\"altSpellings\": [\"KZ\", \"Qazaqstan\", \"\\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\", \"Republic of Kazakhstan\", \"\\u049a\\u0430\\u0437\\u0430\\u049b\\u0441\\u0442\\u0430\\u043d \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\\u0441\\u044b\", \"Qazaqstan Respubl\\u00efkas\\u0131\", \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\", \"Respublika Kazakhstan\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Central Asia\",\n\t\t\"languages\": {\n\t\t\t\"kaz\": \"Kazakh\",\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Kasachstan\", \"common\": \"Kasachstan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Kazakhstan\", \"common\": \"Kazakhstan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kazahstan\", \"common\": \"Kazahstan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Kazakhstan\", \"common\": \"Kazakistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30b6\\u30d5\\u30b9\\u30bf\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ab\\u30b6\\u30d5\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Kazachstan\", \"common\": \"Kazachstan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Cazaquist\\u00e3o\", \"common\": \"Cazaquist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Kazajst\\u00e1n\", \"common\": \"Kazajist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Kazakstanin tasavalta\", \"common\": \"Kazakstan\"}\n\t\t},\n\t\t\"latlng\": [48, 68],\n\t\t\"demonym\": \"Kazakhstani\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CHN\", \"KGZ\", \"RUS\", \"TKM\", \"UZB\"],\n\t\t\"area\": 2724900\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kenya\",\n\t\t\t\"official\": \"Republic of Kenya\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Kenya\",\n\t\t\t\t\t\"common\": \"Kenya\"\n\t\t\t\t},\n\t\t\t\t\"swa\": {\n\t\t\t\t\t\"official\": \"Republic of Kenya\",\n\t\t\t\t\t\"common\": \"Kenya\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ke\"],\n\t\t\"cca2\": \"KE\",\n\t\t\"ccn3\": \"404\",\n\t\t\"cca3\": \"KEN\",\n\t\t\"cioc\": \"KEN\",\n\t\t\"currency\": [\"KES\"],\n\t\t\"callingCode\": [\"254\"],\n\t\t\"capital\": \"Nairobi\",\n\t\t\"altSpellings\": [\"KE\", \"Republic of Kenya\", \"Jamhuri ya Kenya\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"swa\": \"Swahili\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Kenia\", \"common\": \"Kenia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Kenya\", \"common\": \"Kenya\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kenija\", \"common\": \"Kenija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Kenya\", \"common\": \"Kenya\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b1\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b1\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Kenia\", \"common\": \"Kenia\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Qu\\u00e9nia\", \"common\": \"Qu\\u00e9nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u0435\\u043d\\u0438\\u044f\", \"common\": \"\\u041a\\u0435\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Kenya\", \"common\": \"Kenia\"},\n\t\t\t\"fin\": {\"official\": \"Kenian tasavalta\", \"common\": \"Kenia\"}\n\t\t},\n\t\t\"latlng\": [1, 38],\n\t\t\"demonym\": \"Kenyan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ETH\", \"SOM\", \"SSD\", \"TZA\", \"UGA\"],\n\t\t\"area\": 580367\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kyrgyzstan\",\n\t\t\t\"official\": \"Kyrgyz Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"kir\": {\n\t\t\t\t\t\"official\": \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\\u0441\\u044b\",\n\t\t\t\t\t\"common\": \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437\\u0441\\u0442\\u0430\\u043d\"\n\t\t\t\t},\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\",\n\t\t\t\t\t\"common\": \"\\u041a\\u0438\\u0440\\u0433\\u0438\\u0437\\u0438\\u044f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kg\"],\n\t\t\"cca2\": \"KG\",\n\t\t\"ccn3\": \"417\",\n\t\t\"cca3\": \"KGZ\",\n\t\t\"cioc\": \"KGZ\",\n\t\t\"currency\": [\"KGS\"],\n\t\t\"callingCode\": [\"996\"],\n\t\t\"capital\": \"Bishkek\",\n\t\t\"altSpellings\": [\"KG\", \"\\u041a\\u0438\\u0440\\u0433\\u0438\\u0437\\u0438\\u044f\", \"Kyrgyz Republic\", \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\\u0441\\u044b\", \"Kyrgyz Respublikasy\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Central Asia\",\n\t\t\"languages\": {\n\t\t\t\"kir\": \"Kyrgyz\",\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Kirgisische Republik\", \"common\": \"Kirgisistan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique kirghize\", \"common\": \"Kirghizistan\"},\n\t\t\t\"hrv\": {\"official\": \"Kirgistanu\", \"common\": \"Kirgistan\"},\n\t\t\t\"ita\": {\"official\": \"Kirghizistan\", \"common\": \"Kirghizistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ad\\u30eb\\u30ae\\u30b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ad\\u30eb\\u30ae\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Kirgizische Republiek\", \"common\": \"Kirgizi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Quirguist\\u00e3o\", \"common\": \"Quirguist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u044b\\u0440\\u0433\\u044b\\u0437\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041a\\u0438\\u0440\\u0433\\u0438\\u0437\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Kirguisa\", \"common\": \"Kirguizist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Kirgisian tasavalta\", \"common\": \"Kirgisia\"}\n\t\t},\n\t\t\"latlng\": [41, 75],\n\t\t\"demonym\": \"Kirghiz\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CHN\", \"KAZ\", \"TJK\", \"UZB\"],\n\t\t\"area\": 199951\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Cambodia\",\n\t\t\t\"official\": \"Kingdom of Cambodia\",\n\t\t\t\"native\": {\n\t\t\t\t\"khm\": {\n\t\t\t\t\t\"official\": \"\\u1796\\u17d2\\u179a\\u17c7\\u179a\\u17b6\\u1787\\u17b6\\u178e\\u17b6\\u1785\\u1780\\u17d2\\u179a\\u1780\\u1798\\u17d2\\u1796\\u17bb\\u1787\\u17b6\",\n\t\t\t\t\t\"common\": \"K\\u00e2mp\\u016dch\\u00e9a\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kh\"],\n\t\t\"cca2\": \"KH\",\n\t\t\"ccn3\": \"116\",\n\t\t\"cca3\": \"KHM\",\n\t\t\"cioc\": \"CAM\",\n\t\t\"currency\": [\"KHR\"],\n\t\t\"callingCode\": [\"855\"],\n\t\t\"capital\": \"Phnom Penh\",\n\t\t\"altSpellings\": [\"KH\", \"Kingdom of Cambodia\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"khm\": \"Khmer\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Kingdom of Cambodia\", \"common\": \"Cambodia\"},\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Kambodscha\", \"common\": \"Kambodscha\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Cambodge\", \"common\": \"Cambodge\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Kambod\\u017ea\", \"common\": \"Kambod\\u017ea\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Cambogia\", \"common\": \"Cambogia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30f3\\u30dc\\u30b8\\u30a2\\u738b\\u56fd\", \"common\": \"\\u30ab\\u30f3\\u30dc\\u30b8\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Cambodja\", \"common\": \"Cambodja\"},\n\t\t\t\"por\": {\"official\": \"Reino do Camboja\", \"common\": \"Camboja\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u041a\\u0430\\u043c\\u0431\\u043e\\u0434\\u0436\\u0430\", \"common\": \"\\u041a\\u0430\\u043c\\u0431\\u043e\\u0434\\u0436\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Camboya\", \"common\": \"Camboya\"},\n\t\t\t\"fin\": {\"official\": \"Kambod\\u017ean kuningaskunta\", \"common\": \"Kambod\\u017ea\"}\n\t\t},\n\t\t\"latlng\": [13, 105],\n\t\t\"demonym\": \"Cambodian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"LAO\", \"THA\", \"VNM\"],\n\t\t\"area\": 181035\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kiribati\",\n\t\t\t\"official\": \"Independent and Sovereign Republic of Kiribati\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Independent and Sovereign Republic of Kiribati\",\n\t\t\t\t\t\"common\": \"Kiribati\"\n\t\t\t\t},\n\t\t\t\t\"gil\": {\n\t\t\t\t\t\"official\": \"Ribaberiki Kiribati\",\n\t\t\t\t\t\"common\": \"Kiribati\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ki\"],\n\t\t\"cca2\": \"KI\",\n\t\t\"ccn3\": \"296\",\n\t\t\"cca3\": \"KIR\",\n\t\t\"cioc\": \"KIR\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"686\"],\n\t\t\"capital\": \"South Tarawa\",\n\t\t\"altSpellings\": [\"KI\", \"Republic of Kiribati\", \"Ribaberiki Kiribati\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"gil\": \"Gilbertese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Unabh\\u00e4ngige und souver\\u00e4ne Republik Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"hrv\": {\"official\": \"Samostalne i suverene Republike Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica indipendente e sovrano di Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ad\\u30ea\\u30d0\\u30b9\\u306e\\u72ec\\u7acb\\u3068\\u4e3b\\u6a29\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ad\\u30ea\\u30d0\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Onafhankelijke en soevereine republiek Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"por\": {\"official\": \"Independente e soberano Rep\\u00fablica de Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0435\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e\\u0439 \\u0438 \\u0441\\u0443\\u0432\\u0435\\u0440\\u0435\\u043d\\u043d\\u043e\\u0439 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0438 \\u041a\\u0438\\u0440\\u0438\\u0431\\u0430\\u0442\\u0438\", \"common\": \"\\u041a\\u0438\\u0440\\u0438\\u0431\\u0430\\u0442\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Independiente y Soberano de Kiribati\", \"common\": \"Kiribati\"},\n\t\t\t\"fin\": {\"official\": \"Kiribatin tasavalta\", \"common\": \"Kiribati\"}\n\t\t},\n\t\t\"latlng\": [1.41666666, 173],\n\t\t\"demonym\": \"I-Kiribati\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 811\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Kitts and Nevis\",\n\t\t\t\"official\": \"Federation of Saint Christopher and Nevisa\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Federation of Saint Christopher and Nevisa\",\n\t\t\t\t\t\"common\": \"Saint Kitts and Nevis\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kn\"],\n\t\t\"cca2\": \"KN\",\n\t\t\"ccn3\": \"659\",\n\t\t\"cca3\": \"KNA\",\n\t\t\"cioc\": \"SKN\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1869\"],\n\t\t\"capital\": \"Basseterre\",\n\t\t\"altSpellings\": [\"KN\", \"Federation of Saint Christopher and Nevis\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"F\\u00f6deration von Saint Kitts und Nevisa\", \"common\": \"Saint Christopher und Nevis\"},\n\t\t\t\"fra\": {\"official\": \"F\\u00e9d\\u00e9ration de Saint -Christophe-et Nevisa\", \"common\": \"Saint-Christophe-et-Ni\\u00e9v\\u00e8s\"},\n\t\t\t\"hrv\": {\"official\": \"Federacija Sv.Kristofora i Nevisa\", \"common\": \"Sveti Kristof i Nevis\"},\n\t\t\t\"ita\": {\"official\": \"Federazione di Saint Christopher e Nevisa\", \"common\": \"Saint Kitts e Nevis\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30f3\\u30c8\\u30af\\u30ea\\u30b9\\u30c8\\u30d5\\u30a1\\u30fcNevisa\\u9023\\u76df\", \"common\": \"\\u30bb\\u30f3\\u30c8\\u30af\\u30ea\\u30b9\\u30c8\\u30d5\\u30a1\\u30fc\\u30fb\\u30cd\\u30a4\\u30d3\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Federatie van Saint Kitts en Nevisa\", \"common\": \"Saint Kitts en Nevis\"},\n\t\t\t\"por\": {\"official\": \"Federa\\u00e7\\u00e3o de S\\u00e3o Crist\\u00f3v\\u00e3o e Nevisa\", \"common\": \"S\\u00e3o Crist\\u00f3v\\u00e3o e Nevis\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f \\u0421\\u0435\\u043d\\u0442-\\u041a\\u0440\\u0438\\u0441\\u0442\\u043e\\u0444\\u0435\\u0440 \\u0438 Nevisa\", \"common\": \"\\u0421\\u0435\\u043d\\u0442-\\u041a\\u0438\\u0442\\u0441 \\u0438 \\u041d\\u0435\\u0432\\u0438\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Federaci\\u00f3n de San Crist\\u00f3bal y Nevisa\", \"common\": \"San Crist\\u00f3bal y Nieves\"},\n\t\t\t\"fin\": {\"official\": \"Saint Christopherin ja Nevisin federaatio\", \"common\": \"Saint Kitts ja Nevis\"}\n\t\t},\n\t\t\"latlng\": [17.33333333, -62.75],\n\t\t\"demonym\": \"Kittitian or Nevisian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 261\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"South Korea\",\n\t\t\t\"official\": \"Republic of Korea\",\n\t\t\t\"native\": {\n\t\t\t\t\"kor\": {\n\t\t\t\t\t\"official\": \"\\ud55c\\uad6d\",\n\t\t\t\t\t\"common\": \"\\ub300\\ud55c\\ubbfc\\uad6d\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kr\", \".\\ud55c\\uad6d\"],\n\t\t\"cca2\": \"KR\",\n\t\t\"ccn3\": \"410\",\n\t\t\"cca3\": \"KOR\",\n\t\t\"cioc\": \"KOR\",\n\t\t\"currency\": [\"KRW\"],\n\t\t\"callingCode\": [\"82\"],\n\t\t\"capital\": \"Seoul\",\n\t\t\"altSpellings\": [\"KR\", \"Korea, Republic of\", \"Republic of Korea\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"kor\": \"Korean\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Korea\", \"common\": \"S\\u00fcdkorea\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Cor\\u00e9e\", \"common\": \"Cor\\u00e9e du Sud\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Koreja\", \"common\": \"Ju\\u017ena Koreja\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Corea\", \"common\": \"Corea del Sud\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5927\\u97d3\\u6c11\\u56fd\", \"common\": \"\\u5927\\u97d3\\u6c11\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Korea\", \"common\": \"Zuid-Korea\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Coreia\", \"common\": \"Coreia do Sul\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0440\\u0435\\u044f\", \"common\": \"\\u042e\\u0436\\u043d\\u0430\\u044f \\u041a\\u043e\\u0440\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Corea\", \"common\": \"Corea del Sur\"},\n\t\t\t\"fin\": {\"official\": \"Korean tasavalta\", \"common\": \"Etel\\u00e4-Korea\"}\n\t\t},\n\t\t\"latlng\": [37, 127.5],\n\t\t\"demonym\": \"South Korean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"PRK\"],\n\t\t\"area\": 100210\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kosovo\",\n\t\t\t\"official\": \"Republic of Kosovo\",\n\t\t\t\"native\": {\n\t\t\t\t\"sqi\": {\n\t\t\t\t\t\"official\": \"Republika e Kosov\\u00ebs\",\n\t\t\t\t\t\"common\": \"Kosova\"\n\t\t\t\t},\n\t\t\t\t\"srp\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0441\\u043e\\u0432\\u043e\",\n\t\t\t\t\t\"common\": \"\\u041a\\u043e\\u0441\\u043e\\u0432\\u043e\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [],\n\t\t\"cca2\": \"XK\",\n\t\t\"ccn3\": \"\",\n\t\t\"cca3\": \"KOS\",\n\t\t\"cioc\": \"KOS\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"383\"],\n\t\t\"capital\": \"Pristina\",\n\t\t\"altSpellings\": [\"XK\", \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0441\\u043e\\u0432\\u043e\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"sqi\": \"Albanian\",\n\t\t\t\"srp\": \"Serbian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"hrv\": {\"official\": \"Republika Kosovo\", \"common\": \"Kosovo\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Kosovo\", \"common\": \"Kosovo\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0441\\u043e\\u0432\\u043e\", \"common\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0441\\u043e\\u0432\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Kosovo\", \"common\": \"Kosovo\"},\n\t\t\t\"fin\": {\"official\": \"Kosovon tasavalta\", \"common\": \"Kosovo\"}\n\t\t},\n\t\t\"latlng\": [42.666667, 21.166667],\n\t\t\"demonym\": \"Kosovar\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ALB\", \"MKD\", \"MNE\", \"SRB\"],\n\t\t\"area\": 10908\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Kuwait\",\n\t\t\t\"official\": \"State of Kuwait\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062f\\u0648\\u0644\\u0629 \\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kw\"],\n\t\t\"cca2\": \"KW\",\n\t\t\"ccn3\": \"414\",\n\t\t\"cca3\": \"KWT\",\n\t\t\"cioc\": \"KUW\",\n\t\t\"currency\": [\"KWD\"],\n\t\t\"callingCode\": [\"965\"],\n\t\t\"capital\": \"Kuwait City\",\n\t\t\"altSpellings\": [\"KW\", \"State of Kuwait\", \"Dawlat al-Kuwait\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Kuwait\", \"common\": \"Kuwait\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat du Kowe\\u00eft\", \"common\": \"Kowe\\u00eft\"},\n\t\t\t\"hrv\": {\"official\": \"Dr\\u017eava Kuvajt\", \"common\": \"Kuvajt\"},\n\t\t\t\"ita\": {\"official\": \"Stato del Kuwait\", \"common\": \"Kuwait\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30af\\u30a6\\u30a7\\u30fc\\u30c8\\u56fd\", \"common\": \"\\u30af\\u30a6\\u30a7\\u30fc\\u30c8\"},\n\t\t\t\"nld\": {\"official\": \"Staat Koeweit\", \"common\": \"Koeweit\"},\n\t\t\t\"por\": {\"official\": \"Estado do Kuwait\", \"common\": \"Kuwait\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u041a\\u0443\\u0432\\u0435\\u0439\\u0442\", \"common\": \"\\u041a\\u0443\\u0432\\u0435\\u0439\\u0442\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Kuwait\", \"common\": \"Kuwait\"},\n\t\t\t\"fin\": {\"official\": \"Kuwaitin valtio\", \"common\": \"Kuwait\"}\n\t\t},\n\t\t\"latlng\": [29.5, 45.75],\n\t\t\"demonym\": \"Kuwaiti\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRQ\", \"SAU\"],\n\t\t\"area\": 17818\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Laos\",\n\t\t\t\"official\": \"Lao People's Democratic Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"lao\": {\n\t\t\t\t\t\"official\": \"\\u0eaa\\u0eb2\\u0e97\\u0eb2\\u0ea5\\u0eb0\\u0e99\\u0eb0 \\u0e8a\\u0eb2\\u0e97\\u0eb4\\u0e9b\\u0eb0\\u0ec4\\u0e95 \\u0e84\\u0ebb\\u0e99\\u0ea5\\u0eb2\\u0ea7 \\u0e82\\u0ead\\u0e87\",\n\t\t\t\t\t\"common\": \"\\u0eaa\\u0e9b\\u0e9b\\u0ea5\\u0eb2\\u0ea7\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".la\"],\n\t\t\"cca2\": \"LA\",\n\t\t\"ccn3\": \"418\",\n\t\t\"cca3\": \"LAO\",\n\t\t\"cioc\": \"LAO\",\n\t\t\"currency\": [\"LAK\"],\n\t\t\"callingCode\": [\"856\"],\n\t\t\"capital\": \"Vientiane\",\n\t\t\"altSpellings\": [\"LA\", \"Lao\", \"Lao People's Democratic Republic\", \"Sathalanalat Paxathipatai Paxaxon Lao\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"lao\": \"Lao\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Laos, Demokratische Volksrepublik\", \"common\": \"Laos\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique populaire lao\", \"common\": \"Laos\"},\n\t\t\t\"hrv\": {\"official\": \"Narodna Demokratska Republika\", \"common\": \"Laos\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica democratica popolare del Laos\", \"common\": \"Laos\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e9\\u30aa\\u30b9\\u4eba\\u6c11\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e9\\u30aa\\u30b9\\u4eba\\u6c11\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Lao Democratische Volksrepubliek\", \"common\": \"Laos\"},\n\t\t\t\"por\": {\"official\": \"Laos, Rep\\u00fablica Democr\\u00e1tica\", \"common\": \"Laos\"},\n\t\t\t\"rus\": {\"official\": \"\\u041b\\u0430\\u043e\\u0441\\u0441\\u043a\\u0430\\u044f \\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e-\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041b\\u0430\\u043e\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Popular Lao\", \"common\": \"Laos\"},\n\t\t\t\"fin\": {\"official\": \"Laosin demokraattinen kansantasavalta\", \"common\": \"Laos\"}\n\t\t},\n\t\t\"latlng\": [18, 105],\n\t\t\"demonym\": \"Laotian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"MMR\", \"KHM\", \"CHN\", \"THA\", \"VNM\"],\n\t\t\"area\": 236800\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Lebanon\",\n\t\t\t\"official\": \"Lebanese Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0644\\u0628\\u0646\\u0627\\u0646\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0644\\u0628\\u0646\\u0627\\u0646\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique libanaise\",\n\t\t\t\t\t\"common\": \"Liban\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lb\"],\n\t\t\"cca2\": \"LB\",\n\t\t\"ccn3\": \"422\",\n\t\t\"cca3\": \"LBN\",\n\t\t\"cioc\": \"LIB\",\n\t\t\"currency\": [\"LBP\"],\n\t\t\"callingCode\": [\"961\"],\n\t\t\"capital\": \"Beirut\",\n\t\t\"altSpellings\": [\"LB\", \"Lebanese Republic\", \"Al-Jumh\\u016br\\u012byah Al-Libn\\u0101n\\u012byah\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Libanesische Republik\", \"common\": \"Libanon\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique libanaise\", \"common\": \"Liban\"},\n\t\t\t\"hrv\": {\"official\": \"Libanonska Republika\", \"common\": \"Libanon\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica libanese\", \"common\": \"Libano\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ec\\u30d0\\u30ce\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ec\\u30d0\\u30ce\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Libanese Republiek\", \"common\": \"Libanon\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Libanesa\", \"common\": \"L\\u00edbano\"},\n\t\t\t\"rus\": {\"official\": \"\\u041b\\u0438\\u0432\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041b\\u0438\\u0432\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Libanesa\", \"common\": \"L\\u00edbano\"},\n\t\t\t\"fin\": {\"official\": \"Libanonin tasavalta\", \"common\": \"Libanon\"}\n\t\t},\n\t\t\"latlng\": [33.83333333, 35.83333333],\n\t\t\"demonym\": \"Lebanese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ISR\", \"SYR\"],\n\t\t\"area\": 10452\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Liberia\",\n\t\t\t\"official\": \"Republic of Liberia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Liberia\",\n\t\t\t\t\t\"common\": \"Liberia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lr\"],\n\t\t\"cca2\": \"LR\",\n\t\t\"ccn3\": \"430\",\n\t\t\"cca3\": \"LBR\",\n\t\t\"cioc\": \"LBR\",\n\t\t\"currency\": [\"LRD\"],\n\t\t\"callingCode\": [\"231\"],\n\t\t\"capital\": \"Monrovia\",\n\t\t\"altSpellings\": [\"LR\", \"Republic of Liberia\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Liberia\", \"common\": \"Liberia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Lib\\u00e9ria\", \"common\": \"Liberia\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Liberija\", \"common\": \"Liberija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Liberia\", \"common\": \"Liberia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ea\\u30d9\\u30ea\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ea\\u30d9\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Liberia\", \"common\": \"Liberia\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Lib\\u00e9ria\", \"common\": \"Lib\\u00e9ria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041b\\u0438\\u0431\\u0435\\u0440\\u0438\\u044f\", \"common\": \"\\u041b\\u0438\\u0431\\u0435\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Liberia\", \"common\": \"Liberia\"},\n\t\t\t\"fin\": {\"official\": \"Liberian tasavalta\", \"common\": \"Liberia\"}\n\t\t},\n\t\t\"latlng\": [6.5, -9.5],\n\t\t\"demonym\": \"Liberian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GIN\", \"CIV\", \"SLE\"],\n\t\t\"area\": 111369\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Libya\",\n\t\t\t\"official\": \"State of Libya\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062f\\u0648\\u0644\\u0629 \\u0644\\u064a\\u0628\\u064a\\u0627\",\n\t\t\t\t\t\"common\": \"\\u200f\\u0644\\u064a\\u0628\\u064a\\u0627\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ly\"],\n\t\t\"cca2\": \"LY\",\n\t\t\"ccn3\": \"434\",\n\t\t\"cca3\": \"LBY\",\n\t\t\"cioc\": \"LBA\",\n\t\t\"currency\": [\"LYD\"],\n\t\t\"callingCode\": [\"218\"],\n\t\t\"capital\": \"Tripoli\",\n\t\t\"altSpellings\": [\"LY\", \"State of Libya\", \"Dawlat Libya\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Libyen\", \"common\": \"Libyen\"},\n\t\t\t\"fra\": {\"official\": \"Grande R\\u00e9publique arabe libyenne populaire et socialiste\", \"common\": \"Libye\"},\n\t\t\t\"hrv\": {\"official\": \"Dr\\u017eava Libiji\", \"common\": \"Libija\"},\n\t\t\t\"ita\": {\"official\": \"Stato della Libia\", \"common\": \"Libia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ea\\u30d3\\u30a2\\u306e\\u56fd\\u5bb6\", \"common\": \"\\u30ea\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Staat van Libi\\u00eb\", \"common\": \"Libi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Estado da L\\u00edbia\", \"common\": \"L\\u00edbia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u041b\\u0438\\u0432\\u0438\\u0438\", \"common\": \"\\u041b\\u0438\\u0432\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Libia\", \"common\": \"Libia\"},\n\t\t\t\"fin\": {\"official\": \"Libyan valtio\", \"common\": \"Libya\"}\n\t\t},\n\t\t\"latlng\": [25, 17],\n\t\t\"demonym\": \"Libyan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DZA\", \"TCD\", \"EGY\", \"NER\", \"SDN\", \"TUN\"],\n\t\t\"area\": 1759540\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Lucia\",\n\t\t\t\"official\": \"Saint Lucia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Saint Lucia\",\n\t\t\t\t\t\"common\": \"Saint Lucia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lc\"],\n\t\t\"cca2\": \"LC\",\n\t\t\"ccn3\": \"662\",\n\t\t\"cca3\": \"LCA\",\n\t\t\"cioc\": \"LCA\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1758\"],\n\t\t\"capital\": \"Castries\",\n\t\t\"altSpellings\": [\"LC\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"St. Lucia\", \"common\": \"Saint Lucia\"},\n\t\t\t\"fra\": {\"official\": \"Sainte-Lucie\", \"common\": \"Sainte-Lucie\"},\n\t\t\t\"hrv\": {\"official\": \"Sveta Lucija\", \"common\": \"Sveta Lucija\"},\n\t\t\t\"ita\": {\"official\": \"Santa Lucia\", \"common\": \"Santa Lucia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30f3\\u30c8\\u30eb\\u30b7\\u30a2\", \"common\": \"\\u30bb\\u30f3\\u30c8\\u30eb\\u30b7\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Saint Lucia\", \"common\": \"Saint Lucia\"},\n\t\t\t\"por\": {\"official\": \"Santa L\\u00facia\", \"common\": \"Santa L\\u00facia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0435\\u043d\\u0442-\\u041b\\u044e\\u0441\\u0438\\u044f\", \"common\": \"\\u0421\\u0435\\u043d\\u0442-\\u041b\\u044e\\u0441\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Santa Luc\\u00eda\", \"common\": \"Santa Luc\\u00eda\"},\n\t\t\t\"fin\": {\"official\": \"Saint Lucia\", \"common\": \"Saint Lucia\"}\n\t\t},\n\t\t\"latlng\": [13.88333333, -60.96666666],\n\t\t\"demonym\": \"Saint Lucian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 616\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Liechtenstein\",\n\t\t\t\"official\": \"Principality of Liechtenstein\",\n\t\t\t\"native\": {\n\t\t\t\t\"deu\": {\n\t\t\t\t\t\"official\": \"F\\u00fcrstentum Liechtenstein\",\n\t\t\t\t\t\"common\": \"Liechtenstein\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".li\"],\n\t\t\"cca2\": \"LI\",\n\t\t\"ccn3\": \"438\",\n\t\t\"cca3\": \"LIE\",\n\t\t\"cioc\": \"LIE\",\n\t\t\"currency\": [\"CHF\"],\n\t\t\"callingCode\": [\"423\"],\n\t\t\"capital\": \"Vaduz\",\n\t\t\"altSpellings\": [\"LI\", \"Principality of Liechtenstein\", \"F\\u00fcrstentum Liechtenstein\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"deu\": \"German\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"F\\u00fcrstentum Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"fra\": {\"official\": \"Principaut\\u00e9 du Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"hrv\": {\"official\": \"Kne\\u017eevina Lihten\\u0161tajn\", \"common\": \"Lihten\\u0161tajn\"},\n\t\t\t\"ita\": {\"official\": \"Principato del Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ea\\u30d2\\u30c6\\u30f3\\u30b7\\u30e5\\u30bf\\u30a4\\u30f3\\u516c\\u56fd\", \"common\": \"\\u30ea\\u30d2\\u30c6\\u30f3\\u30b7\\u30e5\\u30bf\\u30a4\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Vorstendom Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"por\": {\"official\": \"Principado de Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043d\\u044f\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u041b\\u0438\\u0445\\u0442\\u0435\\u043d\\u0448\\u0442\\u0435\\u0439\\u043d\", \"common\": \"\\u041b\\u0438\\u0445\\u0442\\u0435\\u043d\\u0448\\u0442\\u0435\\u0439\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Principado de Liechtenstein\", \"common\": \"Liechtenstein\"},\n\t\t\t\"fin\": {\"official\": \"Liechensteinin ruhtinaskunta\", \"common\": \"Liechenstein\"}\n\t\t},\n\t\t\"latlng\": [47.26666666, 9.53333333],\n\t\t\"demonym\": \"Liechtensteiner\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AUT\", \"CHE\"],\n\t\t\"area\": 160\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Sri Lanka\",\n\t\t\t\"official\": \"Democratic Socialist Republic of Sri Lanka\",\n\t\t\t\"native\": {\n\t\t\t\t\"sin\": {\n\t\t\t\t\t\"official\": \"\\u0dc1\\u0dca\\u200d\\u0dbb\\u0dd3 \\u0dbd\\u0d82\\u0d9a\\u0dcf \\u0db4\\u0dca\\u200d\\u0dbb\\u0da2\\u0dcf\\u0dad\\u0dcf\\u0db1\\u0dca\\u0dad\\u0dca\\u200d\\u0dbb\\u0dd2\\u0d9a \\u0dc3\\u0db8\\u0dcf\\u0da2\\u0dc0\\u0dcf\\u0daf\\u0dd3 \\u0da2\\u0db1\\u0dbb\\u0da2\\u0dba\",\n\t\t\t\t\t\"common\": \"\\u0dc1\\u0dca\\u200d\\u0dbb\\u0dd3 \\u0dbd\\u0d82\\u0d9a\\u0dcf\\u0dc0\"\n\t\t\t\t},\n\t\t\t\t\"tam\": {\n\t\t\t\t\t\"official\": \"\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8 \\u0b9a\\u0ba9\\u0ba8\\u0bbe\\u0baf\\u0b95 \\u0b9a\\u0bcb\\u0b9a\\u0bb2\\u0bbf\\u0b9a\\u0b95\\u0bcd \\u0b95\\u0bc1\\u0b9f\\u0bbf\\u0baf\\u0bb0\\u0b9a\\u0bc1\",\n\t\t\t\t\t\"common\": \"\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lk\", \".\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8\", \".\\u0dbd\\u0d82\\u0d9a\\u0dcf\"],\n\t\t\"cca2\": \"LK\",\n\t\t\"ccn3\": \"144\",\n\t\t\"cca3\": \"LKA\",\n\t\t\"cioc\": \"SRI\",\n\t\t\"currency\": [\"LKR\"],\n\t\t\"callingCode\": [\"94\"],\n\t\t\"capital\": \"Colombo\",\n\t\t\"altSpellings\": [\"LK\", \"ila\\u1e45kai\", \"Democratic Socialist Republic of Sri Lanka\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"sin\": \"Sinhala\",\n\t\t\t\"tam\": \"Tamil\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratische Sozialistische Republik Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique socialiste du Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"hrv\": {\"official\": \"Demokratska Socijalisti\\u010dke Republike \\u0160ri Lanke\", \"common\": \"\\u0160ri Lanka\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica democratica socialista dello Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30ea\\u30e9\\u30f3\\u30ab\\u6c11\\u4e3b\\u793e\\u4f1a\\u4e3b\\u7fa9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b9\\u30ea\\u30e9\\u30f3\\u30ab\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Socialistische Republiek Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Socialista do Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0421\\u043e\\u0446\\u0438\\u0430\\u043b\\u0438\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0428\\u0440\\u0438-\\u041b\\u0430\\u043d\\u043a\\u0430\", \"common\": \"\\u0428\\u0440\\u0438-\\u041b\\u0430\\u043d\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Socialista de Sri Lanka\", \"common\": \"Sri Lanka\"},\n\t\t\t\"fin\": {\"official\": \"Sri Lankan demokraattinen sosialistinen tasavalta\", \"common\": \"Sri Lanka\"}\n\t\t},\n\t\t\"latlng\": [7, 81],\n\t\t\"demonym\": \"Sri Lankan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IND\"],\n\t\t\"area\": 65610\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Lesotho\",\n\t\t\t\"official\": \"Kingdom of Lesotho\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Kingdom of Lesotho\",\n\t\t\t\t\t\"common\": \"Lesotho\"\n\t\t\t\t},\n\t\t\t\t\"sot\": {\n\t\t\t\t\t\"official\": \"Kingdom of Lesotho\",\n\t\t\t\t\t\"common\": \"Lesotho\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ls\"],\n\t\t\"cca2\": \"LS\",\n\t\t\"ccn3\": \"426\",\n\t\t\"cca3\": \"LSO\",\n\t\t\"cioc\": \"LES\",\n\t\t\"currency\": [\"LSL\", \"ZAR\"],\n\t\t\"callingCode\": [\"266\"],\n\t\t\"capital\": \"Maseru\",\n\t\t\"altSpellings\": [\"LS\", \"Kingdom of Lesotho\", \"Muso oa Lesotho\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Southern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"sot\": \"Sotho\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Lesotho\", \"common\": \"Lesotho\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Lesotho\", \"common\": \"Lesotho\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Lesoto\", \"common\": \"Lesoto\"},\n\t\t\t\"ita\": {\"official\": \"Regno del Lesotho\", \"common\": \"Lesotho\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ec\\u30bd\\u30c8\\u738b\\u56fd\", \"common\": \"\\u30ec\\u30bd\\u30c8\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Lesotho\", \"common\": \"Lesotho\"},\n\t\t\t\"por\": {\"official\": \"Reino do Lesoto\", \"common\": \"Lesoto\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u041b\\u0435\\u0441\\u043e\\u0442\\u043e\", \"common\": \"\\u041b\\u0435\\u0441\\u043e\\u0442\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Lesotho\", \"common\": \"Lesotho\"},\n\t\t\t\"fin\": {\"official\": \"Lesothon kuningaskunta\", \"common\": \"Lesotho\"}\n\t\t},\n\t\t\"latlng\": [-29.5, 28.5],\n\t\t\"demonym\": \"Mosotho\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ZAF\"],\n\t\t\"area\": 30355\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Lithuania\",\n\t\t\t\"official\": \"Republic of Lithuania\",\n\t\t\t\"native\": {\n\t\t\t\t\"lit\": {\n\t\t\t\t\t\"official\": \"Lietuvos Respublikos\",\n\t\t\t\t\t\"common\": \"Lietuva\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lt\"],\n\t\t\"cca2\": \"LT\",\n\t\t\"ccn3\": \"440\",\n\t\t\"cca3\": \"LTU\",\n\t\t\"cioc\": \"LTU\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"370\"],\n\t\t\"capital\": \"Vilnius\",\n\t\t\"altSpellings\": [\"LT\", \"Republic of Lithuania\", \"Lietuvos Respublika\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"lit\": \"Lithuanian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Litauen\", \"common\": \"Litauen\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Lituanie\", \"common\": \"Lituanie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Litva\", \"common\": \"Litva\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Lituania\", \"common\": \"Lituania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ea\\u30c8\\u30a2\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ea\\u30c8\\u30a2\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Litouwen\", \"common\": \"Litouwen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Litu\\u00e2nia\", \"common\": \"Litu\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041b\\u0438\\u0442\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041b\\u0438\\u0442\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Lituania\", \"common\": \"Lituania\"},\n\t\t\t\"fin\": {\"official\": \"Liettuan tasavalta\", \"common\": \"Liettua\"}\n\t\t},\n\t\t\"latlng\": [56, 24],\n\t\t\"demonym\": \"Lithuanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLR\", \"LVA\", \"POL\", \"RUS\"],\n\t\t\"area\": 65300\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Luxembourg\",\n\t\t\t\"official\": \"Grand Duchy of Luxembourg\",\n\t\t\t\"native\": {\n\t\t\t\t\"deu\": {\n\t\t\t\t\t\"official\": \"Gro\\u00dfherzogtum Luxemburg\",\n\t\t\t\t\t\"common\": \"Luxemburg\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Grand-Duch\\u00e9 de Luxembourg\",\n\t\t\t\t\t\"common\": \"Luxembourg\"\n\t\t\t\t},\n\t\t\t\t\"ltz\": {\n\t\t\t\t\t\"official\": \"Groussherzogtum L\\u00ebtzebuerg\",\n\t\t\t\t\t\"common\": \"L\\u00ebtzebuerg\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lu\"],\n\t\t\"cca2\": \"LU\",\n\t\t\"ccn3\": \"442\",\n\t\t\"cca3\": \"LUX\",\n\t\t\"cioc\": \"LUX\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"352\"],\n\t\t\"capital\": \"Luxembourg\",\n\t\t\"altSpellings\": [\"LU\", \"Grand Duchy of Luxembourg\", \"Grand-Duch\\u00e9 de Luxembourg\", \"Gro\\u00dfherzogtum Luxemburg\", \"Groussherzogtum L\\u00ebtzebuerg\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"deu\": \"German\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"ltz\": \"Luxembourgish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gro\\u00dfherzogtum Luxemburg,\", \"common\": \"Luxemburg\"},\n\t\t\t\"fra\": {\"official\": \"Grand-Duch\\u00e9 de Luxembourg\", \"common\": \"Luxembourg\"},\n\t\t\t\"hrv\": {\"official\": \"Veliko Vojvodstvo Luksemburg\", \"common\": \"Luksemburg\"},\n\t\t\t\"ita\": {\"official\": \"Granducato di Lussemburgo\", \"common\": \"Lussemburgo\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30eb\\u30af\\u30bb\\u30f3\\u30d6\\u30eb\\u30af\\u5927\\u516c\\u56fd\", \"common\": \"\\u30eb\\u30af\\u30bb\\u30f3\\u30d6\\u30eb\\u30af\"},\n\t\t\t\"nld\": {\"official\": \"Groothertogdom Luxemburg\", \"common\": \"Luxemburg\"},\n\t\t\t\"por\": {\"official\": \"Gr\\u00e3o-Ducado do Luxemburgo\", \"common\": \"Luxemburgo\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u0435\\u043b\\u0438\\u043a\\u043e\\u0435 \\u0413\\u0435\\u0440\\u0446\\u043e\\u0433\\u0441\\u0442\\u0432\\u043e \\u041b\\u044e\\u043a\\u0441\\u0435\\u043c\\u0431\\u0443\\u0440\\u0433\", \"common\": \"\\u041b\\u044e\\u043a\\u0441\\u0435\\u043c\\u0431\\u0443\\u0440\\u0433\"},\n\t\t\t\"spa\": {\"official\": \"Gran Ducado de Luxemburgo\", \"common\": \"Luxemburgo\"},\n\t\t\t\"fin\": {\"official\": \"Luxemburgin suurherttuakunta\", \"common\": \"Luxemburg\"}\n\t\t},\n\t\t\"latlng\": [49.75, 6.16666666],\n\t\t\"demonym\": \"Luxembourger\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"BEL\", \"FRA\", \"DEU\"],\n\t\t\"area\": 2586\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Latvia\",\n\t\t\t\"official\": \"Republic of Latvia\",\n\t\t\t\"native\": {\n\t\t\t\t\"lav\": {\n\t\t\t\t\t\"official\": \"Latvijas Republikas\",\n\t\t\t\t\t\"common\": \"Latvija\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".lv\"],\n\t\t\"cca2\": \"LV\",\n\t\t\"ccn3\": \"428\",\n\t\t\"cca3\": \"LVA\",\n\t\t\"cioc\": \"LAT\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"371\"],\n\t\t\"capital\": \"Riga\",\n\t\t\"altSpellings\": [\"LV\", \"Republic of Latvia\", \"Latvijas Republika\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"lav\": \"Latvian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Lettland\", \"common\": \"Lettland\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Lettonie\", \"common\": \"Lettonie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Latvija\", \"common\": \"Latvija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Lettonia\", \"common\": \"Lettonia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e9\\u30c8\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e9\\u30c8\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Letland\", \"common\": \"Letland\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Let\\u00f3nia\", \"common\": \"Let\\u00f3nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041b\\u0430\\u0442\\u0432\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041b\\u0430\\u0442\\u0432\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Letonia\", \"common\": \"Letonia\"},\n\t\t\t\"fin\": {\"official\": \"Latvian tasavalta\", \"common\": \"Latvia\"}\n\t\t},\n\t\t\"latlng\": [57, 25],\n\t\t\"demonym\": \"Latvian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLR\", \"EST\", \"LTU\", \"RUS\"],\n\t\t\"area\": 64559\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Macau\",\n\t\t\t\"official\": \"Macao Special Administrative Region of the People's Republic of China\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Regi\\u00e3o Administrativa Especial de Macau da Rep\\u00fablica Popular da China\",\n\t\t\t\t\t\"common\": \"Macau\"\n\t\t\t\t},\n\t\t\t\t\"zho\": {\n\t\t\t\t\t\"official\": \"\\u6fb3\\u95e8\\u7279\\u522b\\u884c\\u653f\\u533a\\u4e2d\\u56fd\\u4eba\\u6c11\\u5171\\u548c\\u56fd\",\n\t\t\t\t\t\"common\": \"\\u6fb3\\u9580\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mo\"],\n\t\t\"cca2\": \"MO\",\n\t\t\"ccn3\": \"446\",\n\t\t\"cca3\": \"MAC\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"MOP\"],\n\t\t\"callingCode\": [\"853\"],\n\t\t\"capital\": \"\",\n\t\t\"altSpellings\": [\"MO\", \"\\u6fb3\\u95e8\", \"Macao\", \"Macao Special Administrative Region of the People's Republic of China\", \"\\u4e2d\\u83ef\\u4eba\\u6c11\\u5171\\u548c\\u570b\\u6fb3\\u9580\\u7279\\u5225\\u884c\\u653f\\u5340\", \"Regi\\u00e3o Administrativa Especial de Macau da Rep\\u00fablica Popular da China\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\",\n\t\t\t\"zho\": \"Chinese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Sonderverwaltungsregion Macau der Volksrepublik China\", \"common\": \"Macao\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9gion administrative sp\\u00e9ciale de Macao de la R\\u00e9publique populaire de Chine\", \"common\": \"Macao\"},\n\t\t\t\"hrv\": {\"official\": \"Makao Posebnog upravnog podru\\u010djaNarodne Republike Kine\", \"common\": \"Makao\"},\n\t\t\t\"ita\": {\"official\": \"Macao Regione amministrativa speciale della Repubblica Popolare Cinese\", \"common\": \"Macao\"},\n\t\t\t\"jpn\": {\"official\": \"\\u4e2d\\u83ef\\u4eba\\u6c11\\u5171\\u548c\\u56fd\\u30de\\u30ab\\u30aa\\u7279\\u5225\\u884c\\u653f\\u533a\", \"common\": \"\\u30de\\u30ab\\u30aa\"},\n\t\t\t\"nld\": {\"official\": \"Speciale Administratieve Regio Macau van de Volksrepubliek China\", \"common\": \"Macao\"},\n\t\t\t\"por\": {\"official\": \"Macau Regi\\u00e3o Administrativa Especial da Rep\\u00fablica Popular da China\", \"common\": \"Macau\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043f\\u0435\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0430\\u0434\\u043c\\u0438\\u043d\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u044b\\u0439 \\u0440\\u0430\\u0439\\u043e\\u043d \\u041c\\u0430\\u043a\\u0430\\u043e \\u041a\\u0438\\u0442\\u0430\\u0439\\u0441\\u043a\\u043e\\u0439 \\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e\\u0439 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0438 \\u041a\\u0438\\u0442\\u0430\\u0439\", \"common\": \"\\u041c\\u0430\\u043a\\u0430\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Macao, Regi\\u00f3n Administrativa Especial de la Rep\\u00fablica Popular China\", \"common\": \"Macao\"},\n\t\t\t\"fin\": {\"official\": \"Macaon Kiinan kansantasavallan erityishallintoalue\", \"common\": \"Macao\"}\n\t\t},\n\t\t\"latlng\": [22.16666666, 113.55],\n\t\t\"demonym\": \"Chinese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CHN\"],\n\t\t\"area\": 30\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Martin\",\n\t\t\t\"official\": \"Saint Martin\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Saint-Martin\",\n\t\t\t\t\t\"common\": \"Saint-Martin\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".fr\", \".gp\"],\n\t\t\"cca2\": \"MF\",\n\t\t\"ccn3\": \"663\",\n\t\t\"cca3\": \"MAF\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"590\"],\n\t\t\"capital\": \"Marigot\",\n\t\t\"altSpellings\": [\"MF\", \"Collectivity of Saint Martin\", \"Collectivit\\u00e9 de Saint-Martin\", \"Saint Martin (French part)\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"St. Martin\", \"common\": \"Saint Martin\"},\n\t\t\t\"fra\": {\"official\": \"Saint-Martin\", \"common\": \"Saint-Martin\"},\n\t\t\t\"hrv\": {\"official\": \"Saint Martin\", \"common\": \"Sveti Martin\"},\n\t\t\t\"ita\": {\"official\": \"saint Martin\", \"common\": \"Saint Martin\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30f3\\u30de\\u30eb\\u30bf\\u30f3\\u5cf6\", \"common\": \"\\u30b5\\u30f3\\u30fb\\u30de\\u30eb\\u30bf\\u30f3\\uff08\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\uff09\"},\n\t\t\t\"nld\": {\"official\": \"Saint Martin\", \"common\": \"Saint-Martin\"},\n\t\t\t\"por\": {\"official\": \"saint Martin\", \"common\": \"S\\u00e3o Martinho\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0435\\u043d-\\u041c\\u0430\\u0440\\u0442\\u0435\\u043d\", \"common\": \"\\u0421\\u0435\\u043d-\\u041c\\u0430\\u0440\\u0442\\u0435\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Saint Martin\", \"common\": \"Saint Martin\"},\n\t\t\t\"fin\": {\"official\": \"Saint-Martin\", \"common\": \"Saint-Martin\"}\n\t\t},\n\t\t\"latlng\": [18.08333333, -63.95],\n\t\t\"demonym\": \"Saint Martin Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"SXM\"],\n\t\t\"area\": 53\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Morocco\",\n\t\t\t\"official\": \"Kingdom of Morocco\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\"\n\t\t\t\t},\n\t\t\t\t\"ber\": {\n\t\t\t\t\t\"official\": \"\\u2d5c\\u2d30\\u2d33\\u2d4d\\u2d37\\u2d49\\u2d5c \\u2d4f \\u2d4d\\u2d4e\\u2d56\\u2d54\\u2d49\\u2d31\",\n\t\t\t\t\t\"common\": \"\\u2d4d\\u2d4e\\u2d30\\u2d56\\u2d54\\u2d49\\u2d31\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ma\", \"\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628.\"],\n\t\t\"cca2\": \"MA\",\n\t\t\"ccn3\": \"504\",\n\t\t\"cca3\": \"MAR\",\n\t\t\"cioc\": \"MAR\",\n\t\t\"currency\": [\"MAD\"],\n\t\t\"callingCode\": [\"212\"],\n\t\t\"capital\": \"Rabat\",\n\t\t\"altSpellings\": [\"MA\", \"Kingdom of Morocco\", \"Al-Mamlakah al-Ma\\u0121ribiyah\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"ber\": \"Berber\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Marokko\", \"common\": \"Marokko\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Maroc\", \"common\": \"Maroc\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Maroko\", \"common\": \"Maroko\"},\n\t\t\t\"ita\": {\"official\": \"Regno del Marocco\", \"common\": \"Marocco\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30ed\\u30c3\\u30b3\\u738b\\u56fd\", \"common\": \"\\u30e2\\u30ed\\u30c3\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Marokko\", \"common\": \"Marokko\"},\n\t\t\t\"por\": {\"official\": \"Reino de Marrocos\", \"common\": \"Marrocos\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u041c\\u0430\\u0440\\u043e\\u043a\\u043a\\u043e\", \"common\": \"\\u041c\\u0430\\u0440\\u043e\\u043a\\u043a\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Marruecos\", \"common\": \"Marruecos\"},\n\t\t\t\"fin\": {\"official\": \"Marokon kuningaskunta\", \"common\": \"Marokko\"}\n\t\t},\n\t\t\"latlng\": [32, -5],\n\t\t\"demonym\": \"Moroccan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DZA\", \"ESH\", \"ESP\"],\n\t\t\"area\": 446550\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Monaco\",\n\t\t\t\"official\": \"Principality of Monaco\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Principaut\\u00e9 de Monaco\",\n\t\t\t\t\t\"common\": \"Monaco\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mc\"],\n\t\t\"cca2\": \"MC\",\n\t\t\"ccn3\": \"492\",\n\t\t\"cca3\": \"MCO\",\n\t\t\"cioc\": \"MON\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"377\"],\n\t\t\"capital\": \"Monaco\",\n\t\t\"altSpellings\": [\"MC\", \"Principality of Monaco\", \"Principaut\\u00e9 de Monaco\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"F\\u00fcrstentum Monaco\", \"common\": \"Monaco\"},\n\t\t\t\"fra\": {\"official\": \"Principaut\\u00e9 de Monaco\", \"common\": \"Monaco\"},\n\t\t\t\"hrv\": {\"official\": \"Kne\\u017eevina Monako\", \"common\": \"Monako\"},\n\t\t\t\"ita\": {\"official\": \"Principato di Monaco\", \"common\": \"Principato di Monaco\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30ca\\u30b3\\u516c\\u56fd\", \"common\": \"\\u30e2\\u30ca\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Vorstendom Monaco\", \"common\": \"Monaco\"},\n\t\t\t\"por\": {\"official\": \"Principado do M\\u00f3naco\", \"common\": \"M\\u00f3naco\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043d\\u044f\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u041c\\u043e\\u043d\\u0430\\u043a\\u043e\", \"common\": \"\\u041c\\u043e\\u043d\\u0430\\u043a\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Principado de M\\u00f3naco\", \"common\": \"M\\u00f3naco\"},\n\t\t\t\"fin\": {\"official\": \"Monacon ruhtinaskunta\", \"common\": \"Monaco\"}\n\t\t},\n\t\t\"latlng\": [43.73333333, 7.4],\n\t\t\"demonym\": \"Monegasque\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"FRA\"],\n\t\t\"area\": 2.02\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Moldova\",\n\t\t\t\"official\": \"Republic of Moldova\",\n\t\t\t\"native\": {\n\t\t\t\t\"ron\": {\n\t\t\t\t\t\"official\": \"Republica Moldova\",\n\t\t\t\t\t\"common\": \"Moldova\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".md\"],\n\t\t\"cca2\": \"MD\",\n\t\t\"ccn3\": \"498\",\n\t\t\"cca3\": \"MDA\",\n\t\t\"cioc\": \"MDA\",\n\t\t\"currency\": [\"MDL\"],\n\t\t\"callingCode\": [\"373\"],\n\t\t\"capital\": \"Chi\\u0219in\\u0103u\",\n\t\t\"altSpellings\": [\"MD\", \"Moldova, Republic of\", \"Republic of Moldova\", \"Republica Moldova\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ron\": \"Moldavian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Moldau\", \"common\": \"Moldawie\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Moldavie\", \"common\": \"Moldavie\"},\n\t\t\t\"hrv\": {\"official\": \"Moldavija\", \"common\": \"Moldova\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Moldova\", \"common\": \"Moldavia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30eb\\u30c9\\u30d0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e2\\u30eb\\u30c9\\u30d0\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Moldavi\\u00eb\", \"common\": \"Moldavi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Mold\\u00e1via\", \"common\": \"Mold\\u00e1via\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u043e\\u043b\\u0434\\u043e\\u0432\\u0430\", \"common\": \"\\u041c\\u043e\\u043b\\u0434\\u0430\\u0432\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Moldova\", \"common\": \"Moldavia\"},\n\t\t\t\"fin\": {\"official\": \"Moldovan tasavalta\", \"common\": \"Moldova\"}\n\t\t},\n\t\t\"latlng\": [47, 29],\n\t\t\"demonym\": \"Moldovan\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ROU\", \"UKR\"],\n\t\t\"area\": 33846\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Madagascar\",\n\t\t\t\"official\": \"Republic of Madagascar\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de Madagascar\",\n\t\t\t\t\t\"common\": \"Madagascar\"\n\t\t\t\t},\n\t\t\t\t\"mlg\": {\n\t\t\t\t\t\"official\": \"Repoblikan'i Madagasikara\",\n\t\t\t\t\t\"common\": \"Madagasikara\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mg\"],\n\t\t\"cca2\": \"MG\",\n\t\t\"ccn3\": \"450\",\n\t\t\"cca3\": \"MDG\",\n\t\t\"cioc\": \"MAD\",\n\t\t\"currency\": [\"MGA\"],\n\t\t\"callingCode\": [\"261\"],\n\t\t\"capital\": \"Antananarivo\",\n\t\t\"altSpellings\": [\"MG\", \"Republic of Madagascar\", \"Repoblikan'i Madagasikara\", \"R\\u00e9publique de Madagascar\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\",\n\t\t\t\"mlg\": \"Malagasy\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Madagaskar\", \"common\": \"Madagaskar\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Madagascar\", \"common\": \"Madagascar\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Madagaskar\", \"common\": \"Madagaskar\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Madagascar\", \"common\": \"Madagascar\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30c0\\u30ac\\u30b9\\u30ab\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30c0\\u30ac\\u30b9\\u30ab\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Madagaskar\", \"common\": \"Madagaskar\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Madag\\u00e1scar\", \"common\": \"Madag\\u00e1scar\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u0434\\u0430\\u0433\\u0430\\u0441\\u043a\\u0430\\u0440\", \"common\": \"\\u041c\\u0430\\u0434\\u0430\\u0433\\u0430\\u0441\\u043a\\u0430\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Madagascar\", \"common\": \"Madagascar\"},\n\t\t\t\"fin\": {\"official\": \"Madagaskarin tasavalta\", \"common\": \"Madagaskar\"}\n\t\t},\n\t\t\"latlng\": [-20, 47],\n\t\t\"demonym\": \"Malagasy\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 587041\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Maldives\",\n\t\t\t\"official\": \"Republic of the Maldives\",\n\t\t\t\"native\": {\n\t\t\t\t\"div\": {\n\t\t\t\t\t\"official\": \"\\u078b\\u07a8\\u0788\\u07ac\\u0780\\u07a8\\u0783\\u07a7\\u0787\\u07b0\\u0796\\u07ad\\u078e\\u07ac \\u0796\\u07aa\\u0789\\u07b0\\u0780\\u07ab\\u0783\\u07a8\\u0787\\u07b0\\u0794\\u07a7\",\n\t\t\t\t\t\"common\": \"\\u078b\\u07a8\\u0788\\u07ac\\u0780\\u07a8\\u0783\\u07a7\\u0787\\u07b0\\u0796\\u07ad\\u078e\\u07ac\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mv\"],\n\t\t\"cca2\": \"MV\",\n\t\t\"ccn3\": \"462\",\n\t\t\"cca3\": \"MDV\",\n\t\t\"cioc\": \"MDV\",\n\t\t\"currency\": [\"MVR\"],\n\t\t\"callingCode\": [\"960\"],\n\t\t\"capital\": \"Mal\\u00e9\",\n\t\t\"altSpellings\": [\"MV\", \"Maldive Islands\", \"Republic of the Maldives\", \"Dhivehi Raajjeyge Jumhooriyya\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"div\": \"Maldivian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Malediven\", \"common\": \"Malediven\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des Maldives\", \"common\": \"Maldives\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Maldivi\", \"common\": \"Maldivi\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica delle Maldive\", \"common\": \"Maldive\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30eb\\u30c7\\u30a3\\u30d6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e2\\u30eb\\u30c7\\u30a3\\u30d6\"},\n\t\t\t\"nld\": {\"official\": \"Republiek van de Malediven\", \"common\": \"Maldiven\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica das Maldivas\", \"common\": \"Maldivas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043b\\u044c\\u0434\\u0438\\u0432\\u044b\", \"common\": \"\\u041c\\u0430\\u043b\\u044c\\u0434\\u0438\\u0432\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de las Maldivas\", \"common\": \"Maldivas\"},\n\t\t\t\"fin\": {\"official\": \"Malediivien tasavalta\", \"common\": \"Malediivit\"}\n\t\t},\n\t\t\"latlng\": [3.25, 73],\n\t\t\"demonym\": \"Maldivan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 300\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mexico\",\n\t\t\t\"official\": \"United Mexican States\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Estados Unidos Mexicanos\",\n\t\t\t\t\t\"common\": \"M\\u00e9xico\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mx\"],\n\t\t\"cca2\": \"MX\",\n\t\t\"ccn3\": \"484\",\n\t\t\"cca3\": \"MEX\",\n\t\t\"cioc\": \"MEX\",\n\t\t\"currency\": [\"MXN\"],\n\t\t\"callingCode\": [\"52\"],\n\t\t\"capital\": \"Mexico City\",\n\t\t\"altSpellings\": [\"MX\", \"Mexicanos\", \"United Mexican States\", \"Estados Unidos Mexicanos\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vereinigte Mexikanische Staaten\", \"common\": \"Mexiko\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tats-Unis du Mexique\", \"common\": \"Mexique\"},\n\t\t\t\"hrv\": {\"official\": \"Sjedinjene Meksi\\u010dke Dr\\u017eave\", \"common\": \"Meksiko\"},\n\t\t\t\"ita\": {\"official\": \"Stati Uniti del Messico\", \"common\": \"Messico\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e1\\u30ad\\u30b7\\u30b3\\u5408\\u8846\\u56fd\", \"common\": \"\\u30e1\\u30ad\\u30b7\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Verenigde Mexicaanse Staten\", \"common\": \"Mexico\"},\n\t\t\t\"por\": {\"official\": \"Estados Unidos Mexicanos\", \"common\": \"M\\u00e9xico\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u0435\\u043a\\u0441\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0438\\u0445 \\u0421\\u043e\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0428\\u0442\\u0430\\u0442\\u043e\\u0432\", \"common\": \"\\u041c\\u0435\\u043a\\u0441\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Estados Unidos Mexicanos\", \"common\": \"M\\u00e9xico\"},\n\t\t\t\"fin\": {\"official\": \"Meksikon yhdysvallat\", \"common\": \"Meksiko\"}\n\t\t},\n\t\t\"latlng\": [23, -102],\n\t\t\"demonym\": \"Mexican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLZ\", \"GTM\", \"USA\"],\n\t\t\"area\": 1964375\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Marshall Islands\",\n\t\t\t\"official\": \"Republic of the Marshall Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of the Marshall Islands\",\n\t\t\t\t\t\"common\": \"Marshall Islands\"\n\t\t\t\t},\n\t\t\t\t\"mah\": {\n\t\t\t\t\t\"official\": \"Republic of the Marshall Islands\",\n\t\t\t\t\t\"common\": \"M\\u0327aje\\u013c\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mh\"],\n\t\t\"cca2\": \"MH\",\n\t\t\"ccn3\": \"584\",\n\t\t\"cca3\": \"MHL\",\n\t\t\"cioc\": \"MHL\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"692\"],\n\t\t\"capital\": \"Majuro\",\n\t\t\"altSpellings\": [\"MH\", \"Republic of the Marshall Islands\", \"Aolep\\u0101n Aor\\u014dkin M\\u0327aje\\u013c\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"mah\": \"Marshallese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik der Marshall-Inseln\", \"common\": \"Marshallinseln\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des \\u00celes Marshall\", \"common\": \"\\u00celes Marshall\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Mar\\u0161alovi Otoci\", \"common\": \"Mar\\u0161alovi Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica delle Isole Marshall\", \"common\": \"Isole Marshall\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30fc\\u30b7\\u30e3\\u30eb\\u8af8\\u5cf6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30fc\\u30b7\\u30e3\\u30eb\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Republiek van de Marshall-eilanden\", \"common\": \"Marshalleilanden\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica das Ilhas Marshall\", \"common\": \"Ilhas Marshall\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u0440\\u0448\\u0430\\u043b\\u043b\\u043e\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u041c\\u0430\\u0440\\u0448\\u0430\\u043b\\u043b\\u043e\\u0432\\u044b \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de las Islas Marshall\", \"common\": \"Islas Marshall\"},\n\t\t\t\"fin\": {\"official\": \"Marshallinsaarten tasavalta\", \"common\": \"Marshallinsaaret\"}\n\t\t},\n\t\t\"latlng\": [9, 168],\n\t\t\"demonym\": \"Marshallese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 181\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Macedonia\",\n\t\t\t\"official\": \"Republic of Macedonia\",\n\t\t\t\"native\": {\n\t\t\t\t\"mkd\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\",\n\t\t\t\t\t\"common\": \"\\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mk\"],\n\t\t\"cca2\": \"MK\",\n\t\t\"ccn3\": \"807\",\n\t\t\"cca3\": \"MKD\",\n\t\t\"cioc\": \"MKD\",\n\t\t\"currency\": [\"MKD\"],\n\t\t\"callingCode\": [\"389\"],\n\t\t\"capital\": \"Skopje\",\n\t\t\"altSpellings\": [\"MK\", \"Macedonia, the Former Yugoslav Republic of\", \"Republic of Macedonia\", \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"mkd\": \"Macedonian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Mazedonien\", \"common\": \"Mazedonien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Mac\\u00e9doine\", \"common\": \"Mac\\u00e9doine\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Makedonija\", \"common\": \"Makedonija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Macedonia\", \"common\": \"Macedonia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30b1\\u30c9\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30b1\\u30c9\\u30cb\\u30a2\\u65e7\\u30e6\\u30fc\\u30b4\\u30b9\\u30e9\\u30d3\\u30a2\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Republic of Macedonia\", \"common\": \"Macedoni\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Maced\\u00f3nia\", \"common\": \"Maced\\u00f3nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u044f\", \"common\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Macedonia\", \"common\": \"Macedonia\"},\n\t\t\t\"fin\": {\"official\": \"Makedonian tasavalta\", \"common\": \"Makedonia\"}\n\t\t},\n\t\t\"latlng\": [41.83333333, 22],\n\t\t\"demonym\": \"Macedonian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ALB\", \"BGR\", \"GRC\", \"KOS\", \"SRB\"],\n\t\t\"area\": 25713\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mali\",\n\t\t\t\"official\": \"Republic of Mali\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Mali\",\n\t\t\t\t\t\"common\": \"Mali\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ml\"],\n\t\t\"cca2\": \"ML\",\n\t\t\"ccn3\": \"466\",\n\t\t\"cca3\": \"MLI\",\n\t\t\"cioc\": \"MLI\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"223\"],\n\t\t\"capital\": \"Bamako\",\n\t\t\"altSpellings\": [\"ML\", \"Republic of Mali\", \"R\\u00e9publique du Mali\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Mali\", \"common\": \"Mali\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Mali\", \"common\": \"Mali\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Mali\", \"common\": \"Mali\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Mali\", \"common\": \"Mali\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30ea\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30ea\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Mali\", \"common\": \"Mali\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Mali\", \"common\": \"Mali\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043b\\u0438\", \"common\": \"\\u041c\\u0430\\u043b\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Mal\\u00ed\", \"common\": \"Mali\"},\n\t\t\t\"fin\": {\"official\": \"Malin tasavalta\", \"common\": \"Mali\"}\n\t\t},\n\t\t\"latlng\": [17, -4],\n\t\t\"demonym\": \"Malian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"DZA\", \"BFA\", \"GIN\", \"CIV\", \"MRT\", \"NER\", \"SEN\"],\n\t\t\"area\": 1240192\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Malta\",\n\t\t\t\"official\": \"Republic of Malta\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Malta\",\n\t\t\t\t\t\"common\": \"Malta\"\n\t\t\t\t},\n\t\t\t\t\"mlt\": {\n\t\t\t\t\t\"official\": \"Repubblika ta ' Malta\",\n\t\t\t\t\t\"common\": \"Malta\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mt\"],\n\t\t\"cca2\": \"MT\",\n\t\t\"ccn3\": \"470\",\n\t\t\"cca3\": \"MLT\",\n\t\t\"cioc\": \"MLT\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"356\"],\n\t\t\"capital\": \"Valletta\",\n\t\t\"altSpellings\": [\"MT\", \"Republic of Malta\", \"Repubblika ta' Malta\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"mlt\": \"Maltese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Malta\", \"common\": \"Malta\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Malte\", \"common\": \"Malte\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Malta\", \"common\": \"Malta\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Malta\", \"common\": \"Malta\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30eb\\u30bf\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30eb\\u30bf\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Malta\", \"common\": \"Malta\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Malta\", \"common\": \"Malta\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043b\\u044c\\u0442\\u0430\", \"common\": \"\\u041c\\u0430\\u043b\\u044c\\u0442\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Malta\", \"common\": \"Malta\"},\n\t\t\t\"fin\": {\"official\": \"Maltan tasavalta\", \"common\": \"Malta\"}\n\t\t},\n\t\t\"latlng\": [35.83333333, 14.58333333],\n\t\t\"demonym\": \"Maltese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 316\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Myanmar\",\n\t\t\t\"official\": \"Republic of the Union of Myanmar\",\n\t\t\t\"native\": {\n\t\t\t\t\"mya\": {\n\t\t\t\t\t\"official\": \"\\u1015\\u103c\\u100a\\u103a\\u1011\\u1031\\u102c\\u1004\\u103a\\u1005\\u102f \\u101e\\u1019\\u1039\\u1019\\u1010 \\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\\u1014\\u102d\\u102f\\u1004\\u103a\\u1004\\u1036\\u1010\\u1031\\u102c\\u103a\",\n\t\t\t\t\t\"common\": \"\\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mm\"],\n\t\t\"cca2\": \"MM\",\n\t\t\"ccn3\": \"104\",\n\t\t\"cca3\": \"MMR\",\n\t\t\"cioc\": \"MYA\",\n\t\t\"currency\": [\"MMK\"],\n\t\t\"callingCode\": [\"95\"],\n\t\t\"capital\": \"Naypyidaw\",\n\t\t\"altSpellings\": [\"MM\", \"Burma\", \"Republic of the Union of Myanmar\", \"Pyidaunzu Thanm\\u0103da My\\u0103ma Nainngandaw\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"mya\": \"Burmese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik der Union von Myanmar\", \"common\": \"Myanmar\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de l'Union du Myanmar\", \"common\": \"Birmanie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Unije Mijanmar\", \"common\": \"Mijanmar\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dell'Unione di Myanmar\", \"common\": \"Birmania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30df\\u30e3\\u30f3\\u30de\\u30fc\\u9023\\u90a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30df\\u30e3\\u30f3\\u30de\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Republiek van de Unie van Myanmar\", \"common\": \"Myanmar\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Uni\\u00e3o de Myanmar\", \"common\": \"Myanmar\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u043e\\u044e\\u0437\\u0430 \\u041c\\u044c\\u044f\\u043d\\u043c\\u0430\", \"common\": \"\\u041c\\u044c\\u044f\\u043d\\u043c\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de la Uni\\u00f3n de Myanmar\", \"common\": \"Myanmar\"},\n\t\t\t\"fin\": {\"official\": \"Myanmarin liiton tasavalta\", \"common\": \"Myanmar\"}\n\t\t},\n\t\t\"latlng\": [22, 98],\n\t\t\"demonym\": \"Bamar\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BGD\", \"CHN\", \"IND\", \"LAO\", \"THA\"],\n\t\t\"area\": 676578\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Montenegro\",\n\t\t\t\"official\": \"Montenegro\",\n\t\t\t\"native\": {\n\t\t\t\t\"srp\": {\n\t\t\t\t\t\"official\": \"\\u0426\\u0440\\u043d\\u0430 \\u0413\\u043e\\u0440\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0426\\u0440\\u043d\\u0430 \\u0413\\u043e\\u0440\\u0430\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".me\"],\n\t\t\"cca2\": \"ME\",\n\t\t\"ccn3\": \"499\",\n\t\t\"cca3\": \"MNE\",\n\t\t\"cioc\": \"MNE\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"382\"],\n\t\t\"capital\": \"Podgorica\",\n\t\t\"altSpellings\": [\"ME\", \"Crna Gora\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"srp\": \"Montenegrin\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"},\n\t\t\t\"fra\": {\"official\": \"Mont\\u00e9n\\u00e9gro\", \"common\": \"Mont\\u00e9n\\u00e9gro\"},\n\t\t\t\"hrv\": {\"official\": \"Crna Gora\", \"common\": \"Crna Gora\"},\n\t\t\t\"ita\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30f3\\u30c6\\u30cd\\u30b0\\u30ed\", \"common\": \"\\u30e2\\u30f3\\u30c6\\u30cd\\u30b0\\u30ed\"},\n\t\t\t\"nld\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"},\n\t\t\t\"por\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"},\n\t\t\t\"rus\": {\"official\": \"\\u0427\\u0435\\u0440\\u043d\\u043e\\u0433\\u043e\\u0440\\u0438\\u044f\", \"common\": \"\\u0427\\u0435\\u0440\\u043d\\u043e\\u0433\\u043e\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"},\n\t\t\t\"fin\": {\"official\": \"Montenegro\", \"common\": \"Montenegro\"}\n\t\t},\n\t\t\"latlng\": [42.5, 19.3],\n\t\t\"demonym\": \"Montenegrin\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ALB\", \"BIH\", \"HRV\", \"KOS\", \"SRB\"],\n\t\t\"area\": 13812\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mongolia\",\n\t\t\t\"official\": \"Mongolia\",\n\t\t\t\"native\": {\n\t\t\t\t\"mon\": {\n\t\t\t\t\t\"official\": \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b \\u0443\\u043b\\u0441\",\n\t\t\t\t\t\"common\": \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b \\u0443\\u043b\\u0441\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mn\"],\n\t\t\"cca2\": \"MN\",\n\t\t\"ccn3\": \"496\",\n\t\t\"cca3\": \"MNG\",\n\t\t\"cioc\": \"MGL\",\n\t\t\"currency\": [\"MNT\"],\n\t\t\"callingCode\": [\"976\"],\n\t\t\"capital\": \"Ulan Bator\",\n\t\t\"altSpellings\": [\"MN\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"mon\": \"Mongolian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Mongolei\", \"common\": \"Mongolei\"},\n\t\t\t\"fra\": {\"official\": \"Mongolie\", \"common\": \"Mongolie\"},\n\t\t\t\"hrv\": {\"official\": \"Mongolija\", \"common\": \"Mongolija\"},\n\t\t\t\"ita\": {\"official\": \"Mongolia\", \"common\": \"Mongolia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30f3\\u30b4\\u30eb\", \"common\": \"\\u30e2\\u30f3\\u30b4\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Mongoli\\u00eb\", \"common\": \"Mongoli\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Mong\\u00f3lia\", \"common\": \"Mong\\u00f3lia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\\u0438\\u044f\", \"common\": \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Mongolia\", \"common\": \"Mongolia\"},\n\t\t\t\"fin\": {\"official\": \"Mongolian tasavalta\", \"common\": \"Mongolia\"}\n\t\t},\n\t\t\"latlng\": [46, 105],\n\t\t\"demonym\": \"Mongolian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CHN\", \"RUS\"],\n\t\t\"area\": 1564110\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Northern Mariana Islands\",\n\t\t\t\"official\": \"Commonwealth of the Northern Mariana Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"cal\": {\n\t\t\t\t\t\"official\": \"Commonwealth of the Northern Mariana Islands\",\n\t\t\t\t\t\"common\": \"Northern Mariana Islands\"\n\t\t\t\t},\n\t\t\t\t\"cha\": {\n\t\t\t\t\t\"official\": \"Sankattan Siha Na Islas Mari\\u00e5nas\",\n\t\t\t\t\t\"common\": \"Na Islas Mari\\u00e5nas\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Commonwealth of the Northern Mariana Islands\",\n\t\t\t\t\t\"common\": \"Northern Mariana Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mp\"],\n\t\t\"cca2\": \"MP\",\n\t\t\"ccn3\": \"580\",\n\t\t\"cca3\": \"MNP\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1670\"],\n\t\t\"capital\": \"Saipan\",\n\t\t\"altSpellings\": [\"MP\", \"Commonwealth of the Northern Mariana Islands\", \"Sankattan Siha Na Islas Mari\\u00e5nas\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"cal\": \"Carolinian\",\n\t\t\t\"cha\": \"Chamorro\",\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Commonwealth der N\\u00f6rdlichen Marianen\", \"common\": \"N\\u00f6rdliche Marianen\"},\n\t\t\t\"fra\": {\"official\": \"Commonwealth des \\u00eeles Mariannes du Nord\", \"common\": \"\\u00celes Mariannes du Nord\"},\n\t\t\t\"hrv\": {\"official\": \"Zajednica je Sjeverni Marijanski otoci\", \"common\": \"Sjevernomarijanski otoci\"},\n\t\t\t\"ita\": {\"official\": \"Commonwealth delle Isole Marianne Settentrionali\", \"common\": \"Isole Marianne Settentrionali\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5317\\u30de\\u30ea\\u30a2\\u30ca\\u8af8\\u5cf6\", \"common\": \"\\u5317\\u30de\\u30ea\\u30a2\\u30ca\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Commonwealth van de Noordelijke Marianen\", \"common\": \"Noordelijke Marianeneilanden\"},\n\t\t\t\"por\": {\"official\": \"Comunidade das Ilhas Marianas do Norte\", \"common\": \"Marianas Setentrionais\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0434\\u0440\\u0443\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u044b\\u0445 \\u041c\\u0430\\u0440\\u0438\\u0430\\u043d\\u0441\\u043a\\u0438\\u0445 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u043e\\u0432\", \"common\": \"\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u044b\\u0435 \\u041c\\u0430\\u0440\\u0438\\u0430\\u043d\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Mancomunidad de las Islas Marianas del Norte\", \"common\": \"Islas Marianas del Norte\"},\n\t\t\t\"fin\": {\"official\": \"Pohjois-Mariaanit\", \"common\": \"Pohjois-Mariaanit\"}\n\t\t},\n\t\t\"latlng\": [15.2, 145.75],\n\t\t\"demonym\": \"American\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 464\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mozambique\",\n\t\t\t\"official\": \"Republic of Mozambique\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Mo\\u00e7ambique\",\n\t\t\t\t\t\"common\": \"Mo\\u00e7ambique\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mz\"],\n\t\t\"cca2\": \"MZ\",\n\t\t\"ccn3\": \"508\",\n\t\t\"cca3\": \"MOZ\",\n\t\t\"cioc\": \"MOZ\",\n\t\t\"currency\": [\"MZN\"],\n\t\t\"callingCode\": [\"258\"],\n\t\t\"capital\": \"Maputo\",\n\t\t\"altSpellings\": [\"MZ\", \"Republic of Mozambique\", \"Rep\\u00fablica de Mo\\u00e7ambique\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Mosambik\", \"common\": \"Mosambik\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Mozambique\", \"common\": \"Mozambique\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Mozambiku\", \"common\": \"Mozambik\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Mozambico\", \"common\": \"Mozambico\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30b6\\u30f3\\u30d3\\u30fc\\u30af\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e2\\u30b6\\u30f3\\u30d3\\u30fc\\u30af\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Mozambique\", \"common\": \"Mozambique\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Mo\\u00e7ambique\", \"common\": \"Mo\\u00e7ambique\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u043e\\u0437\\u0430\\u043c\\u0431\\u0438\\u043a\", \"common\": \"\\u041c\\u043e\\u0437\\u0430\\u043c\\u0431\\u0438\\u043a\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Mozambique\", \"common\": \"Mozambique\"},\n\t\t\t\"fin\": {\"official\": \"Mosambikin tasavalta\", \"common\": \"Mosambik\"}\n\t\t},\n\t\t\"latlng\": [-18.25, 35],\n\t\t\"demonym\": \"Mozambican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MWI\", \"ZAF\", \"SWZ\", \"TZA\", \"ZMB\", \"ZWE\"],\n\t\t\"area\": 801590\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mauritania\",\n\t\t\t\"official\": \"Islamic Republic of Mauritania\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0625\\u0633\\u0644\\u0627\\u0645\\u064a\\u0629 \\u0627\\u0644\\u0645\\u0648\\u0631\\u064a\\u062a\\u0627\\u0646\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0645\\u0648\\u0631\\u064a\\u062a\\u0627\\u0646\\u064a\\u0627\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mr\"],\n\t\t\"cca2\": \"MR\",\n\t\t\"ccn3\": \"478\",\n\t\t\"cca3\": \"MRT\",\n\t\t\"cioc\": \"MTN\",\n\t\t\"currency\": [\"MRO\"],\n\t\t\"callingCode\": [\"222\"],\n\t\t\"capital\": \"Nouakchott\",\n\t\t\"altSpellings\": [\"MR\", \"Islamic Republic of Mauritania\", \"al-Jumh\\u016briyyah al-\\u02beIsl\\u0101miyyah al-M\\u016br\\u012bt\\u0101niyyah\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Islamische Republik Mauretanien\", \"common\": \"Mauretanien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique islamique de Mauritanie\", \"common\": \"Mauritanie\"},\n\t\t\t\"hrv\": {\"official\": \"Islamska Republika Mauritanija\", \"common\": \"Mauritanija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica islamica di Mauritania\", \"common\": \"Mauritania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30fc\\u30ea\\u30bf\\u30cb\\u30a2\\u00b7\\u30a4\\u30b9\\u30e9\\u30e0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e2\\u30fc\\u30ea\\u30bf\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Islamitische Republiek Mauritani\\u00eb\", \"common\": \"Mauritani\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Isl\\u00e2mica da Maurit\\u00e2nia\", \"common\": \"Maurit\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0441\\u043b\\u0430\\u043c\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u0432\\u0440\\u0438\\u0442\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u041c\\u0430\\u0432\\u0440\\u0438\\u0442\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Isl\\u00e1mica de Mauritania\", \"common\": \"Mauritania\"},\n\t\t\t\"fin\": {\"official\": \"Mauritanian islamilainen tasavalta\", \"common\": \"Mauritania\"}\n\t\t},\n\t\t\"latlng\": [20, -12],\n\t\t\"demonym\": \"Mauritanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DZA\", \"MLI\", \"SEN\", \"ESH\"],\n\t\t\"area\": 1030700\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Montserrat\",\n\t\t\t\"official\": \"Montserrat\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Montserrat\",\n\t\t\t\t\t\"common\": \"Montserrat\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ms\"],\n\t\t\"cca2\": \"MS\",\n\t\t\"ccn3\": \"500\",\n\t\t\"cca3\": \"MSR\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1664\"],\n\t\t\"capital\": \"Plymouth\",\n\t\t\"altSpellings\": [\"MS\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"fra\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"hrv\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"ita\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30f3\\u30c8\\u30bb\\u30e9\\u30c8\", \"common\": \"\\u30e2\\u30f3\\u30c8\\u30bb\\u30e9\\u30c8\"},\n\t\t\t\"nld\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"por\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u043e\\u043d\\u0442\\u0441\\u0435\\u0440\\u0440\\u0430\\u0442\", \"common\": \"\\u041c\\u043e\\u043d\\u0442\\u0441\\u0435\\u0440\\u0440\\u0430\\u0442\"},\n\t\t\t\"spa\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"},\n\t\t\t\"fin\": {\"official\": \"Montserrat\", \"common\": \"Montserrat\"}\n\t\t},\n\t\t\"latlng\": [16.75, -62.2],\n\t\t\"demonym\": \"Montserratian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 102\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Martinique\",\n\t\t\t\"official\": \"Martinique\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Martinique\",\n\t\t\t\t\t\"common\": \"Martinique\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mq\"],\n\t\t\"cca2\": \"MQ\",\n\t\t\"ccn3\": \"474\",\n\t\t\"cca3\": \"MTQ\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"596\"],\n\t\t\"capital\": \"Fort-de-France\",\n\t\t\"altSpellings\": [\"MQ\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Martinique\", \"common\": \"Martinique\"},\n\t\t\t\"fra\": {\"official\": \"Martinique\", \"common\": \"Martinique\"},\n\t\t\t\"hrv\": {\"official\": \"Martinique\", \"common\": \"Martinique\"},\n\t\t\t\"ita\": {\"official\": \"Martinique\", \"common\": \"Martinica\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30eb\\u30c6\\u30a3\\u30cb\\u30fc\\u30af\\u5cf6\", \"common\": \"\\u30de\\u30eb\\u30c6\\u30a3\\u30cb\\u30fc\\u30af\"},\n\t\t\t\"nld\": {\"official\": \"Martinique\", \"common\": \"Martinique\"},\n\t\t\t\"por\": {\"official\": \"Martinique\", \"common\": \"Martinica\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u0430\\u0440\\u0442\\u0438\\u043d\\u0438\\u043a\\u0430\", \"common\": \"\\u041c\\u0430\\u0440\\u0442\\u0438\\u043d\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Martinica\", \"common\": \"Martinica\"},\n\t\t\t\"fin\": {\"official\": \"Martinique\", \"common\": \"Martinique\"}\n\t\t},\n\t\t\"latlng\": [14.666667, -61],\n\t\t\"demonym\": \"French\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 1128\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mauritius\",\n\t\t\t\"official\": \"Republic of Mauritius\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Mauritius\",\n\t\t\t\t\t\"common\": \"Mauritius\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de Maurice\",\n\t\t\t\t\t\"common\": \"Maurice\"\n\t\t\t\t},\n\t\t\t\t\"mfe\": {\n\t\t\t\t\t\"official\": \"Republik Moris\",\n\t\t\t\t\t\"common\": \"Moris\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mu\"],\n\t\t\"cca2\": \"MU\",\n\t\t\"ccn3\": \"480\",\n\t\t\"cca3\": \"MUS\",\n\t\t\"cioc\": \"MRI\",\n\t\t\"currency\": [\"MUR\"],\n\t\t\"callingCode\": [\"230\"],\n\t\t\"capital\": \"Port Louis\",\n\t\t\"altSpellings\": [\"MU\", \"Republic of Mauritius\", \"R\\u00e9publique de Maurice\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"mfe\": \"Mauritian Creole\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Mauritius\", \"common\": \"Mauritius\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Maurice\", \"common\": \"\\u00cele Maurice\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Mauricijus\", \"common\": \"Mauricijus\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Mauritius\", \"common\": \"Mauritius\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30e2\\u30fc\\u30ea\\u30b7\\u30e3\\u30b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30e2\\u30fc\\u30ea\\u30b7\\u30e3\\u30b9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Mauritius\", \"common\": \"Mauritius\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica das Maur\\u00edcias\", \"common\": \"Maur\\u00edcio\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u0432\\u0440\\u0438\\u043a\\u0438\\u0439\", \"common\": \"\\u041c\\u0430\\u0432\\u0440\\u0438\\u043a\\u0438\\u0439\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Mauricio\", \"common\": \"Mauricio\"},\n\t\t\t\"fin\": {\"official\": \"Mauritiuksen tasavalta\", \"common\": \"Mauritius\"}\n\t\t},\n\t\t\"latlng\": [-20.28333333, 57.55],\n\t\t\"demonym\": \"Mauritian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 2040\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Malawi\",\n\t\t\t\"official\": \"Republic of Malawi\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Malawi\",\n\t\t\t\t\t\"common\": \"Malawi\"\n\t\t\t\t},\n\t\t\t\t\"nya\": {\n\t\t\t\t\t\"official\": \"Chalo cha Malawi, Dziko la Mala\\u0175i\",\n\t\t\t\t\t\"common\": \"Mala\\u0175i\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".mw\"],\n\t\t\"cca2\": \"MW\",\n\t\t\"ccn3\": \"454\",\n\t\t\"cca3\": \"MWI\",\n\t\t\"cioc\": \"MAW\",\n\t\t\"currency\": [\"MWK\"],\n\t\t\"callingCode\": [\"265\"],\n\t\t\"capital\": \"Lilongwe\",\n\t\t\"altSpellings\": [\"MW\", \"Republic of Malawi\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"nya\": \"Chewa\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Malavi\", \"common\": \"Malavi\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30e9\\u30a6\\u30a4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30de\\u30e9\\u30a6\\u30a4\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041c\\u0430\\u043b\\u0430\\u0432\\u0438\", \"common\": \"\\u041c\\u0430\\u043b\\u0430\\u0432\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Malawi\", \"common\": \"Malawi\"},\n\t\t\t\"fin\": {\"official\": \"Malawin tasavalta\", \"common\": \"Malawi\"}\n\t\t},\n\t\t\"latlng\": [-13.5, 34],\n\t\t\"demonym\": \"Malawian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"MOZ\", \"TZA\", \"ZMB\"],\n\t\t\"area\": 118484\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Malaysia\",\n\t\t\t\"official\": \"Malaysia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Malaysia\",\n\t\t\t\t\t\"common\": \"Malaysia\"\n\t\t\t\t},\n\t\t\t\t\"msa\": {\n\t\t\t\t\t\"official\": \"\\u0645\\u0644\\u064a\\u0633\\u064a\\u0627\",\n\t\t\t\t\t\"common\": \"\\u0645\\u0644\\u064a\\u0633\\u064a\\u0627\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".my\"],\n\t\t\"cca2\": \"MY\",\n\t\t\"ccn3\": \"458\",\n\t\t\"cca3\": \"MYS\",\n\t\t\"cioc\": \"MAS\",\n\t\t\"currency\": [\"MYR\"],\n\t\t\"callingCode\": [\"60\"],\n\t\t\"capital\": \"Kuala Lumpur\",\n\t\t\"altSpellings\": [\"MY\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"msa\": \"Malay\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Malaysia\", \"common\": \"Malaysia\"},\n\t\t\t\"fra\": {\"official\": \"F\\u00e9d\\u00e9ration de Malaisie\", \"common\": \"Malaisie\"},\n\t\t\t\"hrv\": {\"official\": \"Malezija\", \"common\": \"Malezija\"},\n\t\t\t\"ita\": {\"official\": \"Malaysia\", \"common\": \"Malesia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30ec\\u30fc\\u30b7\\u30a2\", \"common\": \"\\u30de\\u30ec\\u30fc\\u30b7\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Maleisi\\u00eb\", \"common\": \"Maleisi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Mal\\u00e1sia\", \"common\": \"Mal\\u00e1sia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041c\\u0430\\u043b\\u0430\\u0439\\u0437\\u0438\\u044f\", \"common\": \"\\u041c\\u0430\\u043b\\u0430\\u0439\\u0437\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Malasia\", \"common\": \"Malasia\"},\n\t\t\t\"fin\": {\"official\": \"Malesia\", \"common\": \"Malesia\"}\n\t\t},\n\t\t\"latlng\": [2.5, 112.5],\n\t\t\"demonym\": \"Malaysian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRN\", \"IDN\", \"THA\"],\n\t\t\"area\": 330803\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Mayotte\",\n\t\t\t\"official\": \"Department of Mayotte\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"D\\u00e9partement de Mayotte\",\n\t\t\t\t\t\"common\": \"Mayotte\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".yt\"],\n\t\t\"cca2\": \"YT\",\n\t\t\"ccn3\": \"175\",\n\t\t\"cca3\": \"MYT\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"262\"],\n\t\t\"capital\": \"Mamoudzou\",\n\t\t\"altSpellings\": [\"YT\", \"Department of Mayotte\", \"D\\u00e9partement de Mayotte\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"\\u00dcbersee-D\\u00e9partement Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"fra\": {\"official\": \"D\\u00e9partement de Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"hrv\": {\"official\": \"Odjel Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"ita\": {\"official\": \"Dipartimento di Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30de\\u30e8\\u30c3\\u30c8\\u79d1\", \"common\": \"\\u30de\\u30e8\\u30c3\\u30c8\"},\n\t\t\t\"nld\": {\"official\": \"Afdeling Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"por\": {\"official\": \"Departamento de Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u0435\\u043f\\u0430\\u0440\\u0442\\u0430\\u043c\\u0435\\u043d\\u0442 \\u041c\\u0430\\u0439\\u043e\\u0442\\u0442\\u0430\", \"common\": \"\\u041c\\u0430\\u0439\\u043e\\u0442\\u0442\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Departamento de Mayotte\", \"common\": \"Mayotte\"},\n\t\t\t\"fin\": {\"official\": \"Mayotte\", \"common\": \"Mayotte\"}\n\t\t},\n\t\t\"latlng\": [-12.83333333, 45.16666666],\n\t\t\"demonym\": \"Mahoran\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 374\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Namibia\",\n\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\"native\": {\n\t\t\t\t\"afr\": {\n\t\t\t\t\t\"official\": \"Republiek van Namibi\\u00eb\",\n\t\t\t\t\t\"common\": \"Namibi\\u00eb\"\n\t\t\t\t},\n\t\t\t\t\"deu\": {\n\t\t\t\t\t\"official\": \"Republik Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"her\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"hgm\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"kwn\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"loz\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"ndo\": {\n\t\t\t\t\t\"official\": \"Republic of Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t},\n\t\t\t\t\"tsn\": {\n\t\t\t\t\t\"official\": \"Lefatshe la Namibia\",\n\t\t\t\t\t\"common\": \"Namibia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".na\"],\n\t\t\"cca2\": \"NA\",\n\t\t\"ccn3\": \"516\",\n\t\t\"cca3\": \"NAM\",\n\t\t\"cioc\": \"NAM\",\n\t\t\"currency\": [\"NAD\", \"ZAR\"],\n\t\t\"callingCode\": [\"264\"],\n\t\t\"capital\": \"Windhoek\",\n\t\t\"altSpellings\": [\"NA\", \"Namibi\\u00eb\", \"Republic of Namibia\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Southern Africa\",\n\t\t\"languages\": {\n\t\t\t\"afr\": \"Afrikaans\",\n\t\t\t\"deu\": \"German\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"her\": \"Herero\",\n\t\t\t\"hgm\": \"Khoekhoe\",\n\t\t\t\"kwn\": \"Kwangali\",\n\t\t\t\"loz\": \"Lozi\",\n\t\t\t\"ndo\": \"Ndonga\",\n\t\t\t\"tsn\": \"Tswana\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Namibia\", \"common\": \"Namibia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Namibie\", \"common\": \"Namibie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Namibija\", \"common\": \"Namibija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Namibia\", \"common\": \"Namibia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ca\\u30df\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ca\\u30df\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Namibi\\u00eb\", \"common\": \"Namibi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Nam\\u00edbia\", \"common\": \"Nam\\u00edbia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0430\\u043c\\u0438\\u0431\\u0438\\u044f\", \"common\": \"\\u041d\\u0430\\u043c\\u0438\\u0431\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Namibia\", \"common\": \"Namibia\"},\n\t\t\t\"fin\": {\"official\": \"Namibian tasavalta\", \"common\": \"Namibia\"}\n\t\t},\n\t\t\"latlng\": [-22, 17],\n\t\t\"demonym\": \"Namibian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AGO\", \"BWA\", \"ZAF\", \"ZMB\"],\n\t\t\"area\": 825615\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"New Caledonia\",\n\t\t\t\"official\": \"New Caledonia\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Nouvelle-Cal\\u00e9donie\",\n\t\t\t\t\t\"common\": \"Nouvelle-Cal\\u00e9donie\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nc\"],\n\t\t\"cca2\": \"NC\",\n\t\t\"ccn3\": \"540\",\n\t\t\"cca3\": \"NCL\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"XPF\"],\n\t\t\"callingCode\": [\"687\"],\n\t\t\"capital\": \"Noum\\u00e9a\",\n\t\t\"altSpellings\": [\"NC\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Melanesia\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Neukaledonien\", \"common\": \"Neukaledonien\"},\n\t\t\t\"fra\": {\"official\": \"Nouvelle-Cal\\u00e9donie\", \"common\": \"Nouvelle-Cal\\u00e9donie\"},\n\t\t\t\"hrv\": {\"official\": \"Nova Kaledonija\", \"common\": \"Nova Kaledonija\"},\n\t\t\t\"ita\": {\"official\": \"Nuova Caledonia\", \"common\": \"Nuova Caledonia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cb\\u30e5\\u30fc\\u30ab\\u30ec\\u30c9\\u30cb\\u30a2\", \"common\": \"\\u30cb\\u30e5\\u30fc\\u30ab\\u30ec\\u30c9\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"nieuw -Caledoni\\u00eb\", \"common\": \"Nieuw-Caledoni\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"New Caledonia\", \"common\": \"Nova Caled\\u00f3nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u043e\\u0432\\u0430\\u044f \\u041a\\u0430\\u043b\\u0435\\u0434\\u043e\\u043d\\u0438\\u044f\", \"common\": \"\\u041d\\u043e\\u0432\\u0430\\u044f \\u041a\\u0430\\u043b\\u0435\\u0434\\u043e\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"nueva Caledonia\", \"common\": \"Nueva Caledonia\"},\n\t\t\t\"fin\": {\"official\": \"Uusi-Kaledonia\", \"common\": \"Uusi-Kaledonia\"}\n\t\t},\n\t\t\"latlng\": [-21.5, 165.5],\n\t\t\"demonym\": \"New Caledonian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 18575\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Niger\",\n\t\t\t\"official\": \"Republic of Niger\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Niger\",\n\t\t\t\t\t\"common\": \"Niger\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ne\"],\n\t\t\"cca2\": \"NE\",\n\t\t\"ccn3\": \"562\",\n\t\t\"cca3\": \"NER\",\n\t\t\"cioc\": \"NIG\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"227\"],\n\t\t\"capital\": \"Niamey\",\n\t\t\"altSpellings\": [\"NE\", \"Nijar\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Niger\", \"common\": \"Niger\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Niger\", \"common\": \"Niger\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Niger\", \"common\": \"Niger\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Niger\", \"common\": \"Niger\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cb\\u30b8\\u30a7\\u30fc\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30cb\\u30b8\\u30a7\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Niger\", \"common\": \"Niger\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do N\\u00edger\", \"common\": \"N\\u00edger\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0438\\u0433\\u0435\\u0440\", \"common\": \"\\u041d\\u0438\\u0433\\u0435\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de N\\u00edger\", \"common\": \"N\\u00edger\"},\n\t\t\t\"fin\": {\"official\": \"Nigerin tasavalta\", \"common\": \"Niger\"}\n\t\t},\n\t\t\"latlng\": [16, 8],\n\t\t\"demonym\": \"Nigerien\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"DZA\", \"BEN\", \"BFA\", \"TCD\", \"LBY\", \"MLI\", \"NGA\"],\n\t\t\"area\": 1267000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Norfolk Island\",\n\t\t\t\"official\": \"Territory of Norfolk Island\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Territory of Norfolk Island\",\n\t\t\t\t\t\"common\": \"Norfolk Island\"\n\t\t\t\t},\n\t\t\t\t\"pih\": {\n\t\t\t\t\t\"official\": \"Teratri of Norf'k Ailen\",\n\t\t\t\t\t\"common\": \"Norf'k Ailen\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nf\"],\n\t\t\"cca2\": \"NF\",\n\t\t\"ccn3\": \"574\",\n\t\t\"cca3\": \"NFK\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"672\"],\n\t\t\"capital\": \"Kingston\",\n\t\t\"altSpellings\": [\"NF\", \"Territory of Norfolk Island\", \"Teratri of Norf'k Ailen\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Australia and New Zealand\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"pih\": \"Norfuk\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gebiet der Norfolk-Insel\", \"common\": \"Norfolkinsel\"},\n\t\t\t\"fra\": {\"official\": \"Territoire de l'\\u00eele Norfolk\", \"common\": \"\\u00cele Norfolk\"},\n\t\t\t\"hrv\": {\"official\": \"Teritorij Norfolk Island\", \"common\": \"Otok Norfolk\"},\n\t\t\t\"ita\": {\"official\": \"Territorio di Norfolk Island\", \"common\": \"Isola Norfolk\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ce\\u30fc\\u30d5\\u30a9\\u30fc\\u30af\\u5cf6\\u306e\\u9818\\u571f\", \"common\": \"\\u30ce\\u30fc\\u30d5\\u30a9\\u30fc\\u30af\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Grondgebied van Norfolk Island\", \"common\": \"Norfolkeiland\"},\n\t\t\t\"por\": {\"official\": \"Territ\\u00f3rio da Ilha Norfolk\", \"common\": \"Ilha Norfolk\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041d\\u043e\\u0440\\u0444\\u043e\\u043b\\u043a\", \"common\": \"\\u041d\\u043e\\u0440\\u0444\\u043e\\u043b\\u043a\"},\n\t\t\t\"spa\": {\"official\": \"Territorio de la Isla Norfolk\", \"common\": \"Isla de Norfolk\"},\n\t\t\t\"fin\": {\"official\": \"Norfolkinsaaren territorio\", \"common\": \"Norfolkinsaari\"}\n\t\t},\n\t\t\"latlng\": [-29.03333333, 167.95],\n\t\t\"demonym\": \"Norfolk Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 36\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Nigeria\",\n\t\t\t\"official\": \"Federal Republic of Nigeria\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Federal Republic of Nigeria\",\n\t\t\t\t\t\"common\": \"Nigeria\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ng\"],\n\t\t\"cca2\": \"NG\",\n\t\t\"ccn3\": \"566\",\n\t\t\"cca3\": \"NGA\",\n\t\t\"cioc\": \"NGR\",\n\t\t\"currency\": [\"NGN\"],\n\t\t\"callingCode\": [\"234\"],\n\t\t\"capital\": \"Abuja\",\n\t\t\"altSpellings\": [\"NG\", \"Nijeriya\", \"Na\\u00edj\\u00edr\\u00ed\\u00e0\", \"Federal Republic of Nigeria\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Bundesrepublik Nigeria\", \"common\": \"Nigeria\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique f\\u00e9d\\u00e9rale du Nigeria\", \"common\": \"Nig\\u00e9ria\"},\n\t\t\t\"hrv\": {\"official\": \"Savezna Republika Nigerija\", \"common\": \"Nigerija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federale di Nigeria\", \"common\": \"Nigeria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ca\\u30a4\\u30b8\\u30a7\\u30ea\\u30a2\\u9023\\u90a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ca\\u30a4\\u30b8\\u30a7\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Federale Republiek Nigeria\", \"common\": \"Nigeria\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Federal da Nig\\u00e9ria\", \"common\": \"Nig\\u00e9ria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0438\\u0433\\u0435\\u0440\\u0438\\u044f\", \"common\": \"\\u041d\\u0438\\u0433\\u0435\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Federal de Nigeria\", \"common\": \"Nigeria\"},\n\t\t\t\"fin\": {\"official\": \"Nigerian liittotasavalta\", \"common\": \"Nigeria\"}\n\t\t},\n\t\t\"latlng\": [10, 8],\n\t\t\"demonym\": \"Nigerian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BEN\", \"CMR\", \"TCD\", \"NER\"],\n\t\t\"area\": 923768\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Nicaragua\",\n\t\t\t\"official\": \"Republic of Nicaragua\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Nicaragua\",\n\t\t\t\t\t\"common\": \"Nicaragua\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ni\"],\n\t\t\"cca2\": \"NI\",\n\t\t\"ccn3\": \"558\",\n\t\t\"cca3\": \"NIC\",\n\t\t\"cioc\": \"NCA\",\n\t\t\"currency\": [\"NIO\"],\n\t\t\"callingCode\": [\"505\"],\n\t\t\"capital\": \"Managua\",\n\t\t\"altSpellings\": [\"NI\", \"Republic of Nicaragua\", \"Rep\\u00fablica de Nicaragua\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Nicaragua\", \"common\": \"Nicaragua\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Nicaragua\", \"common\": \"Nicaragua\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Nikaragva\", \"common\": \"Nikaragva\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Nicaragua\", \"common\": \"Nicaragua\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cb\\u30ab\\u30e9\\u30b0\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30cb\\u30ab\\u30e9\\u30b0\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Nicaragua\", \"common\": \"Nicaragua\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Nicar\\u00e1gua\", \"common\": \"Nicar\\u00e1gua\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0438\\u043a\\u0430\\u0440\\u0430\\u0433\\u0443\\u0430\", \"common\": \"\\u041d\\u0438\\u043a\\u0430\\u0440\\u0430\\u0433\\u0443\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Nicaragua\", \"common\": \"Nicaragua\"},\n\t\t\t\"fin\": {\"official\": \"Nicaraguan tasavalta\", \"common\": \"Nicaragua\"}\n\t\t},\n\t\t\"latlng\": [13, -85],\n\t\t\"demonym\": \"Nicaraguan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CRI\", \"HND\"],\n\t\t\"area\": 130373\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Niue\",\n\t\t\t\"official\": \"Niue\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Niue\",\n\t\t\t\t\t\"common\": \"Niue\"\n\t\t\t\t},\n\t\t\t\t\"niu\": {\n\t\t\t\t\t\"official\": \"Niu\\u0113\",\n\t\t\t\t\t\"common\": \"Niu\\u0113\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nu\"],\n\t\t\"cca2\": \"NU\",\n\t\t\"ccn3\": \"570\",\n\t\t\"cca3\": \"NIU\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"NZD\"],\n\t\t\"callingCode\": [\"683\"],\n\t\t\"capital\": \"Alofi\",\n\t\t\"altSpellings\": [\"NU\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"niu\": \"Niuean\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"fra\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"hrv\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"ita\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cb\\u30a6\\u30a8\", \"common\": \"\\u30cb\\u30a6\\u30a8\"},\n\t\t\t\"nld\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"por\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0438\\u0443\\u044d\", \"common\": \"\\u041d\\u0438\\u0443\\u044d\"},\n\t\t\t\"spa\": {\"official\": \"Niue\", \"common\": \"Niue\"},\n\t\t\t\"fin\": {\"official\": \"Niue\", \"common\": \"Niue\"}\n\t\t},\n\t\t\"latlng\": [-19.03333333, -169.86666666],\n\t\t\"demonym\": \"Niuean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 260\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Netherlands\",\n\t\t\t\"official\": \"Netherlands\",\n\t\t\t\"native\": {\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Nederland\",\n\t\t\t\t\t\"common\": \"Nederland\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nl\"],\n\t\t\"cca2\": \"NL\",\n\t\t\"ccn3\": \"528\",\n\t\t\"cca3\": \"NLD\",\n\t\t\"cioc\": \"NED\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"31\"],\n\t\t\"capital\": \"Amsterdam\",\n\t\t\"altSpellings\": [\"NL\", \"Holland\", \"Nederland\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Western Europe\",\n\t\t\"languages\": {\n\t\t\t\"nld\": \"Dutch\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Niederlande\", \"common\": \"Niederlande\"},\n\t\t\t\"fra\": {\"official\": \"Pays-Bas\", \"common\": \"Pays-Bas\"},\n\t\t\t\"hrv\": {\"official\": \"Holandija\", \"common\": \"Nizozemska\"},\n\t\t\t\"ita\": {\"official\": \"Paesi Bassi\", \"common\": \"Paesi Bassi\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30aa\\u30e9\\u30f3\\u30c0\", \"common\": \"\\u30aa\\u30e9\\u30f3\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Nederland\", \"common\": \"Nederland\"},\n\t\t\t\"por\": {\"official\": \"Holanda\", \"common\": \"Holanda\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0438\\u0434\\u0435\\u0440\\u043b\\u0430\\u043d\\u0434\\u044b\", \"common\": \"\\u041d\\u0438\\u0434\\u0435\\u0440\\u043b\\u0430\\u043d\\u0434\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"Pa\\u00edses Bajos\", \"common\": \"Pa\\u00edses Bajos\"},\n\t\t\t\"fin\": {\"official\": \"Alankomaat\", \"common\": \"Alankomaat\"}\n\t\t},\n\t\t\"latlng\": [52.5, 5.75],\n\t\t\"demonym\": \"Dutch\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BEL\", \"DEU\"],\n\t\t\"area\": 41850\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Norway\",\n\t\t\t\"official\": \"Kingdom of Norway\",\n\t\t\t\"native\": {\n\t\t\t\t\"nno\": {\n\t\t\t\t\t\"official\": \"Kongeriket Noreg\",\n\t\t\t\t\t\"common\": \"Noreg\"\n\t\t\t\t},\n\t\t\t\t\"nob\": {\n\t\t\t\t\t\"official\": \"Kongeriket Norge\",\n\t\t\t\t\t\"common\": \"Norge\"\n\t\t\t\t},\n\t\t\t\t\"smi\": {\n\t\t\t\t\t\"official\": \"Norgga gonagasriika\",\n\t\t\t\t\t\"common\": \"Norgga\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".no\"],\n\t\t\"cca2\": \"NO\",\n\t\t\"ccn3\": \"578\",\n\t\t\"cca3\": \"NOR\",\n\t\t\"cioc\": \"NOR\",\n\t\t\"currency\": [\"NOK\"],\n\t\t\"callingCode\": [\"47\"],\n\t\t\"capital\": \"Oslo\",\n\t\t\"altSpellings\": [\"NO\", \"Norge\", \"Noreg\", \"Kingdom of Norway\", \"Kongeriket Norge\", \"Kongeriket Noreg\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"nno\": \"Norwegian Nynorsk\",\n\t\t\t\"nob\": \"Norwegian Bokm\\u00e5l\",\n\t\t\t\"smi\": \"Sami\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Norwegen\", \"common\": \"Norwegen\"},\n\t\t\t\"fra\": {\"official\": \"Royaume de Norv\\u00e8ge\", \"common\": \"Norv\\u00e8ge\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Norve\\u0161ka\", \"common\": \"Norve\\u0161ka\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Norvegia\", \"common\": \"Norvegia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ce\\u30eb\\u30a6\\u30a7\\u30fc\\u738b\\u56fd\", \"common\": \"\\u30ce\\u30eb\\u30a6\\u30a7\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Noorwegen\", \"common\": \"Noorwegen\"},\n\t\t\t\"por\": {\"official\": \"Reino da Noruega\", \"common\": \"Noruega\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u041d\\u043e\\u0440\\u0432\\u0435\\u0433\\u0438\\u044f\", \"common\": \"\\u041d\\u043e\\u0440\\u0432\\u0435\\u0433\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Noruega\", \"common\": \"Noruega\"},\n\t\t\t\"fin\": {\"official\": \"Norjan kuningaskunta\", \"common\": \"Norja\"}\n\t\t},\n\t\t\"latlng\": [62, 10],\n\t\t\"demonym\": \"Norwegian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"FIN\", \"SWE\", \"RUS\"],\n\t\t\"area\": 323802\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Nepal\",\n\t\t\t\"official\": \"Federal Democratic Republic of Nepal\",\n\t\t\t\"native\": {\n\t\t\t\t\"nep\": {\n\t\t\t\t\t\"official\": \"\\u0928\\u0947\\u092a\\u093e\\u0932 \\u0938\\u0902\\u0918\\u0940\\u092f \\u0932\\u094b\\u0915\\u0924\\u093e\\u0928\\u094d\\u0924\\u094d\\u0930\\u093f\\u0915 \\u0917\\u0923\\u0924\\u0928\\u094d\\u0924\\u094d\\u0930\",\n\t\t\t\t\t\"common\": \"\\u0928\\u092a\\u0932\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".np\"],\n\t\t\"cca2\": \"NP\",\n\t\t\"ccn3\": \"524\",\n\t\t\"cca3\": \"NPL\",\n\t\t\"cioc\": \"NEP\",\n\t\t\"currency\": [\"NPR\"],\n\t\t\"callingCode\": [\"977\"],\n\t\t\"capital\": \"Kathmandu\",\n\t\t\"altSpellings\": [\"NP\", \"Federal Democratic Republic of Nepal\", \"Lokt\\u0101ntrik Ganatantra Nep\\u0101l\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"nep\": \"Nepali\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratischen Bundesrepublik Nepal\", \"common\": \"N\\u00e9pal\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du N\\u00e9pal\", \"common\": \"N\\u00e9pal\"},\n\t\t\t\"hrv\": {\"official\": \"Savezna Demokratska Republika Nepal\", \"common\": \"Nepal\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federale democratica del Nepal\", \"common\": \"Nepal\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cd\\u30d1\\u30fc\\u30eb\\u9023\\u90a6\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30cd\\u30d1\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Federale Democratische Republiek Nepal\", \"common\": \"Nepal\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Federal do Nepal\", \"common\": \"Nepal\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0435\\u043f\\u0430\\u043b\", \"common\": \"\\u041d\\u0435\\u043f\\u0430\\u043b\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica Federal de Nepal\", \"common\": \"Nepal\"},\n\t\t\t\"fin\": {\"official\": \"Nepalin demokraattinen liittotasavalta\", \"common\": \"Nepal\"}\n\t\t},\n\t\t\"latlng\": [28, 84],\n\t\t\"demonym\": \"Nepalese\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CHN\", \"IND\"],\n\t\t\"area\": 147181\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Nauru\",\n\t\t\t\"official\": \"Republic of Nauru\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Nauru\",\n\t\t\t\t\t\"common\": \"Nauru\"\n\t\t\t\t},\n\t\t\t\t\"nau\": {\n\t\t\t\t\t\"official\": \"Republic of Nauru\",\n\t\t\t\t\t\"common\": \"Nauru\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nr\"],\n\t\t\"cca2\": \"NR\",\n\t\t\"ccn3\": \"520\",\n\t\t\"cca3\": \"NRU\",\n\t\t\"cioc\": \"NRU\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"674\"],\n\t\t\"capital\": \"Yaren\",\n\t\t\"altSpellings\": [\"NR\", \"Naoero\", \"Pleasant Island\", \"Republic of Nauru\", \"Ripublik Naoero\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"nau\": \"Nauru\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ca\\u30a6\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30ca\\u30a6\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041d\\u0430\\u0443\\u0440\\u0443\", \"common\": \"\\u041d\\u0430\\u0443\\u0440\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Nauru\", \"common\": \"Nauru\"},\n\t\t\t\"fin\": {\"official\": \"Naurun tasavalta\", \"common\": \"Nauru\"}\n\t\t},\n\t\t\"latlng\": [-0.53333333, 166.91666666],\n\t\t\"demonym\": \"Nauruan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 21\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"New Zealand\",\n\t\t\t\"official\": \"New Zealand\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"New Zealand\",\n\t\t\t\t\t\"common\": \"New Zealand\"\n\t\t\t\t},\n\t\t\t\t\"mri\": {\n\t\t\t\t\t\"official\": \"Aotearoa\",\n\t\t\t\t\t\"common\": \"Aotearoa\"\n\t\t\t\t},\n\t\t\t\t\"nzs\": {\n\t\t\t\t\t\"official\": \"New Zealand\",\n\t\t\t\t\t\"common\": \"New Zealand\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".nz\"],\n\t\t\"cca2\": \"NZ\",\n\t\t\"ccn3\": \"554\",\n\t\t\"cca3\": \"NZL\",\n\t\t\"cioc\": \"NZL\",\n\t\t\"currency\": [\"NZD\"],\n\t\t\"callingCode\": [\"64\"],\n\t\t\"capital\": \"Wellington\",\n\t\t\"altSpellings\": [\"NZ\", \"Aotearoa\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Australia and New Zealand\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"mri\": \"M\\u0101ori\",\n\t\t\t\"nzs\": \"New Zealand Sign Language\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Neuseeland\", \"common\": \"Neuseeland\"},\n\t\t\t\"fra\": {\"official\": \"Nouvelle-Z\\u00e9lande\", \"common\": \"Nouvelle-Z\\u00e9lande\"},\n\t\t\t\"hrv\": {\"official\": \"Novi Zeland\", \"common\": \"Novi Zeland\"},\n\t\t\t\"ita\": {\"official\": \"Nuova Zelanda\", \"common\": \"Nuova Zelanda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30cb\\u30e5\\u30fc\\u30b8\\u30fc\\u30e9\\u30f3\\u30c9\", \"common\": \"\\u30cb\\u30e5\\u30fc\\u30b8\\u30fc\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Nieuw Zeeland\", \"common\": \"Nieuw-Zeeland\"},\n\t\t\t\"por\": {\"official\": \"nova Zel\\u00e2ndia\", \"common\": \"Nova Zel\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u043e\\u0432\\u0430\\u044f \\u0417\\u0435\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\", \"common\": \"\\u041d\\u043e\\u0432\\u0430\\u044f \\u0417\\u0435\\u043b\\u0430\\u043d\\u0434\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"nueva Zelanda\", \"common\": \"Nueva Zelanda\"},\n\t\t\t\"fin\": {\"official\": \"Uusi-Seelanti\", \"common\": \"Uusi-Seelanti\"}\n\t\t},\n\t\t\"latlng\": [-41, 174],\n\t\t\"demonym\": \"New Zealander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 270467\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Oman\",\n\t\t\t\"official\": \"Sultanate of Oman\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0633\\u0644\\u0637\\u0646\\u0629 \\u0639\\u0645\\u0627\\u0646\",\n\t\t\t\t\t\"common\": \"\\u0639\\u0645\\u0627\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".om\"],\n\t\t\"cca2\": \"OM\",\n\t\t\"ccn3\": \"512\",\n\t\t\"cca3\": \"OMN\",\n\t\t\"cioc\": \"OMA\",\n\t\t\"currency\": [\"OMR\"],\n\t\t\"callingCode\": [\"968\"],\n\t\t\"capital\": \"Muscat\",\n\t\t\"altSpellings\": [\"OM\", \"Sultanate of Oman\", \"Sal\\u1e6danat \\u02bbUm\\u0101n\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Sultanat Oman\", \"common\": \"Oman\"},\n\t\t\t\"fra\": {\"official\": \"Sultanat d'Oman\", \"common\": \"Oman\"},\n\t\t\t\"hrv\": {\"official\": \"Sultanat Oman\", \"common\": \"Oman\"},\n\t\t\t\"ita\": {\"official\": \"Sultanato dell'Oman\", \"common\": \"oman\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30aa\\u30de\\u30fc\\u30f3\\u00b7\\u30b9\\u30eb\\u30bf\\u30f3\\u56fd\", \"common\": \"\\u30aa\\u30de\\u30fc\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Sultanaat van Oman\", \"common\": \"Oman\"},\n\t\t\t\"por\": {\"official\": \"Sultanato de Om\\u00e3\", \"common\": \"Om\\u00e3\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0443\\u043b\\u0442\\u0430\\u043d\\u0430\\u0442 \\u041e\\u043c\\u0430\\u043d\", \"common\": \"\\u041e\\u043c\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Sultanato de Om\\u00e1n\", \"common\": \"Om\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Omanin sulttaanikunta\", \"common\": \"Oman\"}\n\t\t},\n\t\t\"latlng\": [21, 57],\n\t\t\"demonym\": \"Omani\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"SAU\", \"ARE\", \"YEM\"],\n\t\t\"area\": 309500\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Pakistan\",\n\t\t\t\"official\": \"Islamic Republic of Pakistan\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Islamic Republic of Pakistan\",\n\t\t\t\t\t\"common\": \"Pakistan\"\n\t\t\t\t},\n\t\t\t\t\"urd\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0633\\u0644\\u0627\\u0645\\u06cc \\u062c\\u0645\\u06c1\\u0648\\u0631\\u06cc\\u06c2 \\u067e\\u0627\\u0643\\u0633\\u062a\\u0627\\u0646\",\n\t\t\t\t\t\"common\": \"\\u067e\\u0627\\u0643\\u0633\\u062a\\u0627\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pk\"],\n\t\t\"cca2\": \"PK\",\n\t\t\"ccn3\": \"586\",\n\t\t\"cca3\": \"PAK\",\n\t\t\"cioc\": \"PAK\",\n\t\t\"currency\": [\"PKR\"],\n\t\t\"callingCode\": [\"92\"],\n\t\t\"capital\": \"Islamabad\",\n\t\t\"altSpellings\": [\"PK\", \"P\\u0101kist\\u0101n\", \"Islamic Republic of Pakistan\", \"Isl\\u0101m\\u012b Jumh\\u016briya'eh P\\u0101kist\\u0101n\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Southern Asia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"urd\": \"Urdu\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Islamische Republik Pakistan\", \"common\": \"Pakistan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique islamique du Pakistan\", \"common\": \"Pakistan\"},\n\t\t\t\"hrv\": {\"official\": \"Islamska Republika Pakistan\", \"common\": \"Pakistan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica islamica del Pakistan\", \"common\": \"Pakistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30ad\\u30b9\\u30bf\\u30f3\", \"common\": \"\\u30d1\\u30ad\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Islamitische Republiek Pakistan\", \"common\": \"Pakistan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Isl\\u00e2mica do Paquist\\u00e3o\", \"common\": \"Paquist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0418\\u0441\\u043b\\u0430\\u043c\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u0430\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u041f\\u0430\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Isl\\u00e1mica de Pakist\\u00e1n\", \"common\": \"Pakist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Pakistanin islamilainen tasavalta\", \"common\": \"Pakistan\"}\n\t\t},\n\t\t\"latlng\": [30, 70],\n\t\t\"demonym\": \"Pakistani\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AFG\", \"CHN\", \"IND\", \"IRN\"],\n\t\t\"area\": 881912\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Panama\",\n\t\t\t\"official\": \"Republic of Panama\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Panam\\u00e1\",\n\t\t\t\t\t\"common\": \"Panam\\u00e1\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pa\"],\n\t\t\"cca2\": \"PA\",\n\t\t\"ccn3\": \"591\",\n\t\t\"cca3\": \"PAN\",\n\t\t\"cioc\": \"PAN\",\n\t\t\"currency\": [\"PAB\", \"USD\"],\n\t\t\"callingCode\": [\"507\"],\n\t\t\"capital\": \"Panama City\",\n\t\t\"altSpellings\": [\"PA\", \"Republic of Panama\", \"Rep\\u00fablica de Panam\\u00e1\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Panama\", \"common\": \"Panama\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Panama\", \"common\": \"Panama\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Panama\", \"common\": \"Panama\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Panama\", \"common\": \"Panama\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30ca\\u30de\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d1\\u30ca\\u30de\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Panama\", \"common\": \"Panama\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Panam\\u00e1\", \"common\": \"Panam\\u00e1\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u0430\\u043d\\u0430\\u043c\\u0430\", \"common\": \"\\u041f\\u0430\\u043d\\u0430\\u043c\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Panam\\u00e1\", \"common\": \"Panam\\u00e1\"},\n\t\t\t\"fin\": {\"official\": \"Panaman tasavalta\", \"common\": \"Panama\"}\n\t\t},\n\t\t\"latlng\": [9, -80],\n\t\t\"demonym\": \"Panamanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"COL\", \"CRI\"],\n\t\t\"area\": 75417\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Pitcairn Islands\",\n\t\t\t\"official\": \"Pitcairn Group of Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Pitcairn Group of Islands\",\n\t\t\t\t\t\"common\": \"Pitcairn Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pn\"],\n\t\t\"cca2\": \"PN\",\n\t\t\"ccn3\": \"612\",\n\t\t\"cca3\": \"PCN\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"NZD\"],\n\t\t\"callingCode\": [\"64\"],\n\t\t\"capital\": \"Adamstown\",\n\t\t\"altSpellings\": [\"PN\", \"Pitcairn\", \"Pitcairn Henderson Ducie and Oeno Islands\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Pitcairn Inselgruppe\", \"common\": \"Pitcairn\"},\n\t\t\t\"fra\": {\"official\": \"Groupe d'\\u00eeles Pitcairn\", \"common\": \"\\u00celes Pitcairn\"},\n\t\t\t\"hrv\": {\"official\": \"Pitcairn skupine otoka\", \"common\": \"Pitcairnovo oto\\u010dje\"},\n\t\t\t\"ita\": {\"official\": \"Pitcairn gruppo di isole\", \"common\": \"Isole Pitcairn\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5cf6\\u306e\\u30d4\\u30c8\\u30b1\\u30a2\\u30f3\\u30b0\\u30eb\\u30fc\\u30d7\", \"common\": \"\\u30d4\\u30c8\\u30b1\\u30a2\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Pitcairn groep eilanden\", \"common\": \"Pitcairneilanden\"},\n\t\t\t\"por\": {\"official\": \"Pitcairn grupo de ilhas\", \"common\": \"Ilhas Pitcairn\"},\n\t\t\t\"rus\": {\"official\": \"\\u041f\\u0438\\u0442\\u043a\\u044d\\u0440\\u043d \\u0433\\u0440\\u0443\\u043f\\u043f\\u0430 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u043e\\u0432\", \"common\": \"\\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u041f\\u0438\\u0442\\u043a\\u044d\\u0440\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Grupo de Islas Pitcairn\", \"common\": \"Islas Pitcairn\"},\n\t\t\t\"fin\": {\"official\": \"Pitcairn\", \"common\": \"Pitcairn\"}\n\t\t},\n\t\t\"latlng\": [-25.06666666, -130.1],\n\t\t\"demonym\": \"Pitcairn Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 47\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Peru\",\n\t\t\t\"official\": \"Republic of Peru\",\n\t\t\t\"native\": {\n\t\t\t\t\"aym\": {\n\t\t\t\t\t\"official\": \"Piruw Suyu\",\n\t\t\t\t\t\"common\": \"Piruw\"\n\t\t\t\t},\n\t\t\t\t\"que\": {\n\t\t\t\t\t\"official\": \"Piruw Ripuwlika\",\n\t\t\t\t\t\"common\": \"Piruw\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica del Per\\u00fa\",\n\t\t\t\t\t\"common\": \"Per\\u00fa\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pe\"],\n\t\t\"cca2\": \"PE\",\n\t\t\"ccn3\": \"604\",\n\t\t\"cca3\": \"PER\",\n\t\t\"cioc\": \"PER\",\n\t\t\"currency\": [\"PEN\"],\n\t\t\"callingCode\": [\"51\"],\n\t\t\"capital\": \"Lima\",\n\t\t\"altSpellings\": [\"PE\", \"Republic of Peru\", \"Rep\\u00fablica del Per\\u00fa\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"aym\": \"Aymara\",\n\t\t\t\"que\": \"Quechua\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Peru\", \"common\": \"Peru\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du P\\u00e9rou\", \"common\": \"P\\u00e9rou\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Peru\", \"common\": \"Peru\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Per\\u00f9\", \"common\": \"Per\\u00f9\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30da\\u30eb\\u30fc\\u5171\\u548c\\u56fd\", \"common\": \"\\u30da\\u30eb\\u30fc\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Peru\", \"common\": \"Peru\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Peru\", \"common\": \"Per\\u00fa\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u0435\\u0440\\u0443\", \"common\": \"\\u041f\\u0435\\u0440\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Per\\u00fa\", \"common\": \"Per\\u00fa\"},\n\t\t\t\"fin\": {\"official\": \"Perun tasavalta\", \"common\": \"Peru\"}\n\t\t},\n\t\t\"latlng\": [-10, -76],\n\t\t\"demonym\": \"Peruvian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BOL\", \"BRA\", \"CHL\", \"COL\", \"ECU\"],\n\t\t\"area\": 1285216\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Philippines\",\n\t\t\t\"official\": \"Republic of the Philippines\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of the Philippines\",\n\t\t\t\t\t\"common\": \"Philippines\"\n\t\t\t\t},\n\t\t\t\t\"fil\": {\n\t\t\t\t\t\"official\": \"Republic of the Philippines\",\n\t\t\t\t\t\"common\": \"Pilipinas\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ph\"],\n\t\t\"cca2\": \"PH\",\n\t\t\"ccn3\": \"608\",\n\t\t\"cca3\": \"PHL\",\n\t\t\"cioc\": \"PHI\",\n\t\t\"currency\": [\"PHP\"],\n\t\t\"callingCode\": [\"63\"],\n\t\t\"capital\": \"Manila\",\n\t\t\"altSpellings\": [\"PH\", \"Republic of the Philippines\", \"Rep\\u00fablika ng Pilipinas\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fil\": \"Filipino\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik der Philippinen\", \"common\": \"Philippinen\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des Philippines\", \"common\": \"Philippines\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Filipini\", \"common\": \"Filipini\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica delle Filippine\", \"common\": \"Filippine\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30a3\\u30ea\\u30d4\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d5\\u30a3\\u30ea\\u30d4\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek der Filipijnen\", \"common\": \"Filipijnen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica das Filipinas\", \"common\": \"Filipinas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0424\\u0438\\u043b\\u0438\\u043f\\u043f\\u0438\\u043d\\u044b\", \"common\": \"\\u0424\\u0438\\u043b\\u0438\\u043f\\u043f\\u0438\\u043d\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de las Filipinas\", \"common\": \"Filipinas\"},\n\t\t\t\"fin\": {\"official\": \"Filippiinien tasavalta\", \"common\": \"Filippiinit\"}\n\t\t},\n\t\t\"latlng\": [13, 122],\n\t\t\"demonym\": \"Filipino\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 342353\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Palau\",\n\t\t\t\"official\": \"Republic of Palau\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Palau\",\n\t\t\t\t\t\"common\": \"Palau\"\n\t\t\t\t},\n\t\t\t\t\"pau\": {\n\t\t\t\t\t\"official\": \"Beluu er a Belau\",\n\t\t\t\t\t\"common\": \"Belau\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pw\"],\n\t\t\"cca2\": \"PW\",\n\t\t\"ccn3\": \"585\",\n\t\t\"cca3\": \"PLW\",\n\t\t\"cioc\": \"PLW\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"680\"],\n\t\t\"capital\": \"Ngerulmud\",\n\t\t\"altSpellings\": [\"PW\", \"Republic of Palau\", \"Beluu er a Belau\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Micronesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"pau\": \"Palauan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Palau\", \"common\": \"Palau\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des Palaos (Palau)\", \"common\": \"Palaos (Palau)\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Palau\", \"common\": \"Palau\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Palau\", \"common\": \"Palau\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30e9\\u30aa\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d1\\u30e9\\u30aa\"},\n\t\t\t\"nld\": {\"official\": \"Republiek van Palau\", \"common\": \"Palau\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Palau\", \"common\": \"Palau\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u0430\\u043b\\u0430\\u0443\", \"common\": \"\\u041f\\u0430\\u043b\\u0430\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Palau\", \"common\": \"Palau\"},\n\t\t\t\"fin\": {\"official\": \"Palaun tasavalta\", \"common\": \"Palau\"}\n\t\t},\n\t\t\"latlng\": [7.5, 134.5],\n\t\t\"demonym\": \"Palauan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 459\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Papua New Guinea\",\n\t\t\t\"official\": \"Independent State of Papua New Guinea\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Independent State of Papua New Guinea\",\n\t\t\t\t\t\"common\": \"Papua New Guinea\"\n\t\t\t\t},\n\t\t\t\t\"hmo\": {\n\t\t\t\t\t\"official\": \"Independen Stet bilong Papua Niugini\",\n\t\t\t\t\t\"common\": \"Papua Niu Gini\"\n\t\t\t\t},\n\t\t\t\t\"tpi\": {\n\t\t\t\t\t\"official\": \"Independen Stet bilong Papua Niugini\",\n\t\t\t\t\t\"common\": \"Papua Niugini\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pg\"],\n\t\t\"cca2\": \"PG\",\n\t\t\"ccn3\": \"598\",\n\t\t\"cca3\": \"PNG\",\n\t\t\"cioc\": \"PNG\",\n\t\t\"currency\": [\"PGK\"],\n\t\t\"callingCode\": [\"675\"],\n\t\t\"capital\": \"Port Moresby\",\n\t\t\"altSpellings\": [\"PG\", \"Independent State of Papua New Guinea\", \"Independen Stet bilong Papua Niugini\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Melanesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"hmo\": \"Hiri Motu\",\n\t\t\t\"tpi\": \"Tok Pisin\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Unabh\\u00e4ngige Staat Papua-Neuguinea\", \"common\": \"Papua-Neuguinea\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat ind\\u00e9pendant de Papouasie-Nouvelle-Guin\\u00e9e\", \"common\": \"Papouasie-Nouvelle-Guin\\u00e9e\"},\n\t\t\t\"hrv\": {\"official\": \"Nezavisna Dr\\u017eava Papui Novoj Gvineji\", \"common\": \"Papua Nova Gvineja\"},\n\t\t\t\"ita\": {\"official\": \"Stato indipendente di Papua Nuova Guinea\", \"common\": \"Papua Nuova Guinea\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30d7\\u30a2\\u30cb\\u30e5\\u30fc\\u30ae\\u30cb\\u30a2\\u72ec\\u7acb\\u56fd\", \"common\": \"\\u30d1\\u30d7\\u30a2\\u30cb\\u30e5\\u30fc\\u30ae\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Onafhankelijke Staat Papoea -Nieuw-Guinea\", \"common\": \"Papoea-Nieuw-Guinea\"},\n\t\t\t\"por\": {\"official\": \"Estado Independente da Papua Nova Guin\\u00e9\", \"common\": \"Papua Nova Guin\\u00e9\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0435\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e\\u0435 \\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u041f\\u0430\\u043f\\u0443\\u0430-\\u041d\\u043e\\u0432\\u043e\\u0439 \\u0413\\u0432\\u0438\\u043d\\u0435\\u0438\", \"common\": \"\\u041f\\u0430\\u043f\\u0443\\u0430 \\u2014 \\u041d\\u043e\\u0432\\u0430\\u044f \\u0413\\u0432\\u0438\\u043d\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Estado Independiente de Pap\\u00faa Nueva Guinea\", \"common\": \"Pap\\u00faa Nueva Guinea\"},\n\t\t\t\"fin\": {\"official\": \"Papua-Uuden-Guinean Itsen\\u00e4inen valtio\", \"common\": \"Papua-Uusi-Guinea\"}\n\t\t},\n\t\t\"latlng\": [-6, 147],\n\t\t\"demonym\": \"Papua New Guinean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IDN\"],\n\t\t\"area\": 462840\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Poland\",\n\t\t\t\"official\": \"Republic of Poland\",\n\t\t\t\"native\": {\n\t\t\t\t\"pol\": {\n\t\t\t\t\t\"official\": \"Rzeczpospolita Polska\",\n\t\t\t\t\t\"common\": \"Polska\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pl\"],\n\t\t\"cca2\": \"PL\",\n\t\t\"ccn3\": \"616\",\n\t\t\"cca3\": \"POL\",\n\t\t\"cioc\": \"POL\",\n\t\t\"currency\": [\"PLN\"],\n\t\t\"callingCode\": [\"48\"],\n\t\t\"capital\": \"Warsaw\",\n\t\t\"altSpellings\": [\"PL\", \"Republic of Poland\", \"Rzeczpospolita Polska\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"pol\": \"Polish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Polen\", \"common\": \"Polen\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Pologne\", \"common\": \"Pologne\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Poljska\", \"common\": \"Poljska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Polonia\", \"common\": \"Polonia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30dd\\u30fc\\u30e9\\u30f3\\u30c9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30dd\\u30fc\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Polen\", \"common\": \"Polen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Pol\\u00f3nia\", \"common\": \"Pol\\u00f3nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u043e\\u043b\\u044c\\u0448\\u0430\", \"common\": \"\\u041f\\u043e\\u043b\\u044c\\u0448\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Polonia\", \"common\": \"Polonia\"},\n\t\t\t\"fin\": {\"official\": \"Puolan tasavalta\", \"common\": \"Puola\"}\n\t\t},\n\t\t\"latlng\": [52, 20],\n\t\t\"demonym\": \"Polish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLR\", \"CZE\", \"DEU\", \"LTU\", \"RUS\", \"SVK\", \"UKR\"],\n\t\t\"area\": 312679\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Puerto Rico\",\n\t\t\t\"official\": \"Commonwealth of Puerto Rico\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Commonwealth of Puerto Rico\",\n\t\t\t\t\t\"common\": \"Puerto Rico\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Estado Libre Asociado de Puerto Rico\",\n\t\t\t\t\t\"common\": \"Puerto Rico\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pr\"],\n\t\t\"cca2\": \"PR\",\n\t\t\"ccn3\": \"630\",\n\t\t\"cca3\": \"PRI\",\n\t\t\"cioc\": \"PUR\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1787\", \"1939\"],\n\t\t\"capital\": \"San Juan\",\n\t\t\"altSpellings\": [\"PR\", \"Commonwealth of Puerto Rico\", \"Estado Libre Asociado de Puerto Rico\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Commonwealth von Puerto Rico\", \"common\": \"Puerto Rico\"},\n\t\t\t\"fra\": {\"official\": \"Porto Rico\", \"common\": \"Porto Rico\"},\n\t\t\t\"hrv\": {\"official\": \"Zajednica Puerto Rico\", \"common\": \"Portoriko\"},\n\t\t\t\"ita\": {\"official\": \"Commonwealth di Porto Rico\", \"common\": \"Porto Rico\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d7\\u30a8\\u30eb\\u30c8\\u30ea\\u30b3\\u306e\\u30b3\\u30e2\\u30f3\\u30a6\\u30a7\\u30eb\\u30b9\", \"common\": \"\\u30d7\\u30a8\\u30eb\\u30c8\\u30ea\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Gemenebest van Puerto Rico\", \"common\": \"Puerto Rico\"},\n\t\t\t\"por\": {\"official\": \"Commonwealth of Puerto Rico\", \"common\": \"Porto Rico\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0434\\u0440\\u0443\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u041f\\u0443\\u044d\\u0440\\u0442\\u043e-\\u0420\\u0438\\u043a\\u043e\", \"common\": \"\\u041f\\u0443\\u044d\\u0440\\u0442\\u043e-\\u0420\\u0438\\u043a\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Asociado de Puerto Rico\", \"common\": \"Puerto Rico\"},\n\t\t\t\"fin\": {\"official\": \"Puerto Rico\", \"common\": \"Puerto Rico\"}\n\t\t},\n\t\t\"latlng\": [18.25, -66.5],\n\t\t\"demonym\": \"Puerto Rican\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 8870\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"North Korea\",\n\t\t\t\"official\": \"Democratic People's Republic of Korea\",\n\t\t\t\"native\": {\n\t\t\t\t\"kor\": {\n\t\t\t\t\t\"official\": \"\\uc870\\uc120 \\ubbfc\\uc8fc\\uc8fc\\uc758 \\uc778\\ubbfc \\uacf5\\ud654\\uad6d\",\n\t\t\t\t\t\"common\": \"\\ubd81\\ud55c\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".kp\"],\n\t\t\"cca2\": \"KP\",\n\t\t\"ccn3\": \"408\",\n\t\t\"cca3\": \"PRK\",\n\t\t\"cioc\": \"PRK\",\n\t\t\"currency\": [\"KPW\"],\n\t\t\"callingCode\": [\"850\"],\n\t\t\"capital\": \"Pyongyang\",\n\t\t\"altSpellings\": [\"KP\", \"Democratic People's Republic of Korea\", \"\\uc870\\uc120\\ubbfc\\uc8fc\\uc8fc\\uc758\\uc778\\ubbfc\\uacf5\\ud654\\uad6d\", \"Chos\\u014fn Minjuju\\u016di Inmin Konghwaguk\", \"Korea, Democratic People's Republic of\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"kor\": \"Korean\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratische Volksrepublik Korea\", \"common\": \"Nordkorea\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique populaire d\\u00e9mocratique de Cor\\u00e9e\", \"common\": \"Cor\\u00e9e du Nord\"},\n\t\t\t\"hrv\": {\"official\": \"Demokratska Narodna Republika Koreja\", \"common\": \"Sjeverna Koreja\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica democratica popolare di Corea\", \"common\": \"Corea del Nord\"},\n\t\t\t\"jpn\": {\"official\": \"\\u671d\\u9bae\\u6c11\\u4e3b\\u4e3b\\u7fa9\\u4eba\\u6c11\\u5171\\u548c\\u56fd\", \"common\": \"\\u671d\\u9bae\\u6c11\\u4e3b\\u4e3b\\u7fa9\\u4eba\\u6c11\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Volksrepubliek Korea\", \"common\": \"Noord-Korea\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Popular Democr\\u00e1tica da Coreia\", \"common\": \"Coreia do Norte\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u0435\\u0439\\u0441\\u043a\\u0430\\u044f \\u041d\\u0430\\u0440\\u043e\\u0434\\u043d\\u043e-\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u0440\\u0435\\u044f\", \"common\": \"\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u0430\\u044f \\u041a\\u043e\\u0440\\u0435\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Popular Democr\\u00e1tica de Corea\", \"common\": \"Corea del Norte\"},\n\t\t\t\"fin\": {\"official\": \"Korean demokraattinen kansantasavalta\", \"common\": \"Pohjois-Korea\"}\n\t\t},\n\t\t\"latlng\": [40, 127],\n\t\t\"demonym\": \"North Korean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CHN\", \"KOR\", \"RUS\"],\n\t\t\"area\": 120538\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Portugal\",\n\t\t\t\"official\": \"Portuguese Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica portugu\\u00eas\",\n\t\t\t\t\t\"common\": \"Portugal\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pt\"],\n\t\t\"cca2\": \"PT\",\n\t\t\"ccn3\": \"620\",\n\t\t\"cca3\": \"PRT\",\n\t\t\"cioc\": \"POR\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"351\"],\n\t\t\"capital\": \"Lisbon\",\n\t\t\"altSpellings\": [\"PT\", \"Portuguesa\", \"Portuguese Republic\", \"Rep\\u00fablica Portuguesa\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Portugiesische Republik\", \"common\": \"Portugal\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique portugaise\", \"common\": \"Portugal\"},\n\t\t\t\"hrv\": {\"official\": \"Portugalska Republika\", \"common\": \"Portugal\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica portoghese\", \"common\": \"Portogallo\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30dd\\u30eb\\u30c8\\u30ac\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30dd\\u30eb\\u30c8\\u30ac\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Portugese Republiek\", \"common\": \"Portugal\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica portugu\\u00eas\", \"common\": \"Portugal\"},\n\t\t\t\"rus\": {\"official\": \"\\u041f\\u043e\\u0440\\u0442\\u0443\\u0433\\u0430\\u043b\\u044c\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u041f\\u043e\\u0440\\u0442\\u0443\\u0433\\u0430\\u043b\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Portuguesa\", \"common\": \"Portugal\"},\n\t\t\t\"fin\": {\"official\": \"Portugalin tasavalta\", \"common\": \"Portugali\"}\n\t\t},\n\t\t\"latlng\": [39.5, -8],\n\t\t\"demonym\": \"Portuguese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ESP\"],\n\t\t\"area\": 92090\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Paraguay\",\n\t\t\t\"official\": \"Republic of Paraguay\",\n\t\t\t\"native\": {\n\t\t\t\t\"grn\": {\n\t\t\t\t\t\"official\": \"Tet\\u00e3 Paragu\\u00e1i\",\n\t\t\t\t\t\"common\": \"Paragu\\u00e1i\"\n\t\t\t\t},\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de Paraguay\",\n\t\t\t\t\t\"common\": \"Paraguay\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".py\"],\n\t\t\"cca2\": \"PY\",\n\t\t\"ccn3\": \"600\",\n\t\t\"cca3\": \"PRY\",\n\t\t\"cioc\": \"PAR\",\n\t\t\"currency\": [\"PYG\"],\n\t\t\"callingCode\": [\"595\"],\n\t\t\"capital\": \"Asunci\\u00f3n\",\n\t\t\"altSpellings\": [\"PY\", \"Republic of Paraguay\", \"Rep\\u00fablica del Paraguay\", \"Tet\\u00e3 Paragu\\u00e1i\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"grn\": \"Guaran\\u00ed\",\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Paraguay\", \"common\": \"Paraguay\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Paraguay\", \"common\": \"Paraguay\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Paragvaj\", \"common\": \"Paragvaj\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Paraguay\", \"common\": \"Paraguay\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30e9\\u30b0\\u30a2\\u30a4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d1\\u30e9\\u30b0\\u30a2\\u30a4\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Paraguay\", \"common\": \"Paraguay\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Paraguai\", \"common\": \"Paraguai\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041f\\u0430\\u0440\\u0430\\u0433\\u0432\\u0430\\u0439\", \"common\": \"\\u041f\\u0430\\u0440\\u0430\\u0433\\u0432\\u0430\\u0439\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Paraguay\", \"common\": \"Paraguay\"},\n\t\t\t\"fin\": {\"official\": \"Paraguayn tasavalta\", \"common\": \"Paraguay\"}\n\t\t},\n\t\t\"latlng\": [-23, -58],\n\t\t\"demonym\": \"Paraguayan\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ARG\", \"BOL\", \"BRA\"],\n\t\t\"area\": 406752\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Palestine\",\n\t\t\t\"official\": \"State of Palestine\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062f\\u0648\\u0644\\u0629 \\u0641\\u0644\\u0633\\u0637\\u064a\\u0646\",\n\t\t\t\t\t\"common\": \"\\u0641\\u0644\\u0633\\u0637\\u064a\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ps\", \"\\u0641\\u0644\\u0633\\u0637\\u064a\\u0646.\"],\n\t\t\"cca2\": \"PS\",\n\t\t\"ccn3\": \"275\",\n\t\t\"cca3\": \"PSE\",\n\t\t\"cioc\": \"PLE\",\n\t\t\"currency\": [\"ILS\"],\n\t\t\"callingCode\": [\"970\"],\n\t\t\"capital\": \"Ramallah\",\n\t\t\"altSpellings\": [\"PS\", \"Palestine, State of\", \"State of Palestine\", \"Dawlat Filas\\u1e6din\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Pal\\u00e4stina\", \"common\": \"Pal\\u00e4stina\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat de Palestine\", \"common\": \"Palestine\"},\n\t\t\t\"hrv\": {\"official\": \"State of Palestine\", \"common\": \"Palestina\"},\n\t\t\t\"ita\": {\"official\": \"Stato di Palestina\", \"common\": \"Palestina\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d1\\u30ec\\u30b9\\u30c1\\u30ca\\u81ea\\u6cbb\\u653f\\u5e9c\", \"common\": \"\\u30d1\\u30ec\\u30b9\\u30c1\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Staat Palestina\", \"common\": \"Palestijnse gebieden\"},\n\t\t\t\"por\": {\"official\": \"Estado da Palestina\", \"common\": \"Palestina\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u041f\\u0430\\u043b\\u0435\\u0441\\u0442\\u0438\\u043d\\u0430\", \"common\": \"\\u041f\\u0430\\u043b\\u0435\\u0441\\u0442\\u0438\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Palestina\", \"common\": \"Palestina\"},\n\t\t\t\"fin\": {\"official\": \"Palestiinan valtio\", \"common\": \"Palestiina\"}\n\t\t},\n\t\t\"latlng\": [31.9, 35.2],\n\t\t\"demonym\": \"Palestinian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ISR\", \"EGY\", \"JOR\"],\n\t\t\"area\": 6220\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"French Polynesia\",\n\t\t\t\"official\": \"French Polynesia\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Polyn\\u00e9sie fran\\u00e7aise\",\n\t\t\t\t\t\"common\": \"Polyn\\u00e9sie fran\\u00e7aise\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pf\"],\n\t\t\"cca2\": \"PF\",\n\t\t\"ccn3\": \"258\",\n\t\t\"cca3\": \"PYF\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"XPF\"],\n\t\t\"callingCode\": [\"689\"],\n\t\t\"capital\": \"Papeet\\u0113\",\n\t\t\"altSpellings\": [\"PF\", \"Polyn\\u00e9sie fran\\u00e7aise\", \"French Polynesia\", \"P\\u014dr\\u012bnetia Far\\u0101ni\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Franz\\u00f6sisch-Polynesien\", \"common\": \"Franz\\u00f6sisch-Polynesien\"},\n\t\t\t\"fra\": {\"official\": \"Polyn\\u00e9sie fran\\u00e7aise\", \"common\": \"Polyn\\u00e9sie fran\\u00e7aise\"},\n\t\t\t\"hrv\": {\"official\": \"Francuska Polinezija\", \"common\": \"Francuska Polinezija\"},\n\t\t\t\"ita\": {\"official\": \"Polinesia Francese\", \"common\": \"Polinesia Francese\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\u30dd\\u30ea\\u30cd\\u30b7\\u30a2\", \"common\": \"\\u30d5\\u30e9\\u30f3\\u30b9\\u9818\\u30dd\\u30ea\\u30cd\\u30b7\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Frans-Polynesi\\u00eb\", \"common\": \"Frans-Polynesi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Polin\\u00e9sia Francesa\", \"common\": \"Polin\\u00e9sia Francesa\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0430\\u044f \\u041f\\u043e\\u043b\\u0438\\u043d\\u0435\\u0437\\u0438\\u044f\", \"common\": \"\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0437\\u0441\\u043a\\u0430\\u044f \\u041f\\u043e\\u043b\\u0438\\u043d\\u0435\\u0437\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Polinesia franc\\u00e9s\", \"common\": \"Polinesia Francesa\"},\n\t\t\t\"fin\": {\"official\": \"Ranskan Polynesia\", \"common\": \"Ranskan Polynesia\"}\n\t\t},\n\t\t\"latlng\": [-15, -140],\n\t\t\"demonym\": \"French Polynesian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 4167\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Qatar\",\n\t\t\t\"official\": \"State of Qatar\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062f\\u0648\\u0644\\u0629 \\u0642\\u0637\\u0631\",\n\t\t\t\t\t\"common\": \"\\u0642\\u0637\\u0631\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".qa\", \"\\u0642\\u0637\\u0631.\"],\n\t\t\"cca2\": \"QA\",\n\t\t\"ccn3\": \"634\",\n\t\t\"cca3\": \"QAT\",\n\t\t\"cioc\": \"QAT\",\n\t\t\"currency\": [\"QAR\"],\n\t\t\"callingCode\": [\"974\"],\n\t\t\"capital\": \"Doha\",\n\t\t\"altSpellings\": [\"QA\", \"State of Qatar\", \"Dawlat Qa\\u1e6dar\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Katar\", \"common\": \"Katar\"},\n\t\t\t\"fra\": {\"official\": \"\\u00c9tat du Qatar\", \"common\": \"Qatar\"},\n\t\t\t\"hrv\": {\"official\": \"Dr\\u017eava Katar\", \"common\": \"Katar\"},\n\t\t\t\"ita\": {\"official\": \"Stato del Qatar\", \"common\": \"Qatar\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ab\\u30bf\\u30fc\\u30eb\\u56fd\", \"common\": \"\\u30ab\\u30bf\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Staat Qatar\", \"common\": \"Qatar\"},\n\t\t\t\"por\": {\"official\": \"Estado do Qatar\", \"common\": \"Catar\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u041a\\u0430\\u0442\\u0430\\u0440\", \"common\": \"\\u041a\\u0430\\u0442\\u0430\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Estado de Qatar\", \"common\": \"Catar\"},\n\t\t\t\"fin\": {\"official\": \"Qatarin valtio\", \"common\": \"Qatar\"}\n\t\t},\n\t\t\"latlng\": [25.5, 51.25],\n\t\t\"demonym\": \"Qatari\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"SAU\"],\n\t\t\"area\": 11586\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"R\\u00e9union\",\n\t\t\t\"official\": \"R\\u00e9union Island\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Ile de la R\\u00e9union\",\n\t\t\t\t\t\"common\": \"La R\\u00e9union\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".re\"],\n\t\t\"cca2\": \"RE\",\n\t\t\"ccn3\": \"638\",\n\t\t\"cca3\": \"REU\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"262\"],\n\t\t\"capital\": \"Saint-Denis\",\n\t\t\"altSpellings\": [\"RE\", \"Reunion\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"R\\u00e9union\", \"common\": \"R\\u00e9union\"},\n\t\t\t\"fra\": {\"official\": \"Ile de la R\\u00e9union\", \"common\": \"R\\u00e9union\"},\n\t\t\t\"hrv\": {\"official\": \"R\\u00e9union Island\", \"common\": \"R\\u00e9union\"},\n\t\t\t\"ita\": {\"official\": \"R\\u00e9union\", \"common\": \"Riunione\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ec\\u30e6\\u30cb\\u30aa\\u30f3\\u5cf6\", \"common\": \"\\u30ec\\u30e6\\u30cb\\u30aa\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"R\\u00e9union\", \"common\": \"R\\u00e9union\"},\n\t\t\t\"por\": {\"official\": \"Ilha da Reuni\\u00e3o\", \"common\": \"Reuni\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u044e\\u043d\\u044c\\u043e\\u043d\", \"common\": \"\\u0420\\u0435\\u044e\\u043d\\u044c\\u043e\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Isla de la Reuni\\u00f3n\", \"common\": \"Reuni\\u00f3n\"},\n\t\t\t\"fin\": {\"official\": \"R\\u00e9union\", \"common\": \"R\\u00e9union\"}\n\t\t},\n\t\t\"latlng\": [-21.15, 55.5],\n\t\t\"demonym\": \"French\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 2511\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Romania\",\n\t\t\t\"official\": \"Romania\",\n\t\t\t\"native\": {\n\t\t\t\t\"ron\": {\n\t\t\t\t\t\"official\": \"Rom\\u00e2nia\",\n\t\t\t\t\t\"common\": \"Rom\\u00e2nia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ro\"],\n\t\t\"cca2\": \"RO\",\n\t\t\"ccn3\": \"642\",\n\t\t\"cca3\": \"ROU\",\n\t\t\"cioc\": \"ROU\",\n\t\t\"currency\": [\"RON\"],\n\t\t\"callingCode\": [\"40\"],\n\t\t\"capital\": \"Bucharest\",\n\t\t\"altSpellings\": [\"RO\", \"Rumania\", \"Roumania\", \"Rom\\u00e2nia\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ron\": \"Romanian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Rum\\u00e4nien\", \"common\": \"Rum\\u00e4nien\"},\n\t\t\t\"fra\": {\"official\": \"Roumanie\", \"common\": \"Roumanie\"},\n\t\t\t\"hrv\": {\"official\": \"Rumunija\", \"common\": \"Rumunjska\"},\n\t\t\t\"ita\": {\"official\": \"Romania\", \"common\": \"Romania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30eb\\u30fc\\u30de\\u30cb\\u30a2\", \"common\": \"\\u30eb\\u30fc\\u30de\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Roemeni\\u00eb\", \"common\": \"Roemeni\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rom\\u00eania\", \"common\": \"Rom\\u00e9nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0443\\u043c\\u044b\\u043d\\u0438\\u044f\", \"common\": \"\\u0420\\u0443\\u043c\\u044b\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rumania\", \"common\": \"Rumania\"},\n\t\t\t\"fin\": {\"official\": \"Romania\", \"common\": \"Romania\"}\n\t\t},\n\t\t\"latlng\": [46, 25],\n\t\t\"demonym\": \"Romanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BGR\", \"HUN\", \"MDA\", \"SRB\", \"UKR\"],\n\t\t\"area\": 238391\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Russia\",\n\t\t\t\"official\": \"Russian Federation\",\n\t\t\t\"native\": {\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0430\\u044f \\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f\",\n\t\t\t\t\t\"common\": \"\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ru\", \".su\", \".\\u0440\\u0444\"],\n\t\t\"cca2\": \"RU\",\n\t\t\"ccn3\": \"643\",\n\t\t\"cca3\": \"RUS\",\n\t\t\"cioc\": \"RUS\",\n\t\t\"currency\": [\"RUB\"],\n\t\t\"callingCode\": [\"7\"],\n\t\t\"capital\": \"Moscow\",\n\t\t\"altSpellings\": [\"RU\", \"Rossiya\", \"Russian Federation\", \"\\u0420\\u043e\\u0441\\u0441\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f\", \"Rossiyskaya Federatsiya\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"rus\": \"Russian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Russische F\\u00f6deration\", \"common\": \"Russland\"},\n\t\t\t\"fra\": {\"official\": \"F\\u00e9d\\u00e9ration de Russie\", \"common\": \"Russie\"},\n\t\t\t\"hrv\": {\"official\": \"Ruska Federacija\", \"common\": \"Rusija\"},\n\t\t\t\"ita\": {\"official\": \"Federazione russa\", \"common\": \"Russia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30ed\\u30b7\\u30a2\\u9023\\u90a6\", \"common\": \"\\u30ed\\u30b7\\u30a2\\u9023\\u90a6\"},\n\t\t\t\"nld\": {\"official\": \"Russische Federatie\", \"common\": \"Rusland\"},\n\t\t\t\"por\": {\"official\": \"Federa\\u00e7\\u00e3o Russa\", \"common\": \"R\\u00fassia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f \\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f\", \"common\": \"\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Federaci\\u00f3n de Rusia\", \"common\": \"Rusia\"},\n\t\t\t\"fin\": {\"official\": \"Ven\\u00e4j\\u00e4n federaatio\", \"common\": \"Ven\\u00e4j\\u00e4\"}\n\t\t},\n\t\t\"latlng\": [60, 100],\n\t\t\"demonym\": \"Russian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AZE\", \"BLR\", \"CHN\", \"EST\", \"FIN\", \"GEO\", \"KAZ\", \"PRK\", \"LVA\", \"LTU\", \"MNG\", \"NOR\", \"POL\", \"UKR\"],\n\t\t\"area\": 17098242\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Rwanda\",\n\t\t\t\"official\": \"Republic of Rwanda\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Rwanda\",\n\t\t\t\t\t\"common\": \"Rwanda\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique rwandaise\",\n\t\t\t\t\t\"common\": \"Rwanda\"\n\t\t\t\t},\n\t\t\t\t\"kin\": {\n\t\t\t\t\t\"official\": \"Repubulika y'u Rwanda\",\n\t\t\t\t\t\"common\": \"Rwanda\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".rw\"],\n\t\t\"cca2\": \"RW\",\n\t\t\"ccn3\": \"646\",\n\t\t\"cca3\": \"RWA\",\n\t\t\"cioc\": \"RWA\",\n\t\t\"currency\": [\"RWF\"],\n\t\t\"callingCode\": [\"250\"],\n\t\t\"capital\": \"Kigali\",\n\t\t\"altSpellings\": [\"RW\", \"Republic of Rwanda\", \"Repubulika y'u Rwanda\", \"R\\u00e9publique du Rwanda\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"kin\": \"Kinyarwanda\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Ruanda\", \"common\": \"Ruanda\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique rwandaise\", \"common\": \"Rwanda\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Ruandi\", \"common\": \"Ruanda\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Ruanda\", \"common\": \"Ruanda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30eb\\u30ef\\u30f3\\u30c0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30eb\\u30ef\\u30f3\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Rwanda\", \"common\": \"Rwanda\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Ruanda\", \"common\": \"Ruanda\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0420\\u0443\\u0430\\u043d\\u0434\\u0430\", \"common\": \"\\u0420\\u0443\\u0430\\u043d\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Rwanda\", \"common\": \"Ruanda\"},\n\t\t\t\"fin\": {\"official\": \"Ruandan tasavalta\", \"common\": \"Ruanda\"}\n\t\t},\n\t\t\"latlng\": [-2, 30],\n\t\t\"demonym\": \"Rwandan\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"BDI\", \"COD\", \"TZA\", \"UGA\"],\n\t\t\"area\": 26338\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saudi Arabia\",\n\t\t\t\"official\": \"Kingdom of Saudi Arabia\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sa\", \".\\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\"],\n\t\t\"cca2\": \"SA\",\n\t\t\"ccn3\": \"682\",\n\t\t\"cca3\": \"SAU\",\n\t\t\"cioc\": \"KSA\",\n\t\t\"currency\": [\"SAR\"],\n\t\t\"callingCode\": [\"966\"],\n\t\t\"capital\": \"Riyadh\",\n\t\t\"altSpellings\": [\"Saudi\", \"SA\", \"Kingdom of Saudi Arabia\", \"Al-Mamlakah al-\\u2018Arabiyyah as-Su\\u2018\\u016bdiyyah\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Saudi-Arabien\", \"common\": \"Saudi-Arabien\"},\n\t\t\t\"fra\": {\"official\": \"Royaume d'Arabie Saoudite\", \"common\": \"Arabie Saoudite\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Saudijska Arabija\", \"common\": \"Saudijska Arabija\"},\n\t\t\t\"ita\": {\"official\": \"Arabia Saudita\", \"common\": \"Arabia Saudita\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30a6\\u30b8\\u30a2\\u30e9\\u30d3\\u30a2\\u738b\\u56fd\", \"common\": \"\\u30b5\\u30a6\\u30b8\\u30a2\\u30e9\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk van Saoedi-Arabi\\u00eb\", \"common\": \"Saoedi-Arabi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Reino da Ar\\u00e1bia Saudita\", \"common\": \"Ar\\u00e1bia Saudita\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0421\\u0430\\u0443\\u0434\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u0410\\u0440\\u0430\\u0432\\u0438\\u044f\", \"common\": \"\\u0421\\u0430\\u0443\\u0434\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u0410\\u0440\\u0430\\u0432\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Arabia Saudita\", \"common\": \"Arabia Saud\\u00ed\"},\n\t\t\t\"fin\": {\"official\": \"Saudi-Arabian kuningaskunta\", \"common\": \"Saudi-Arabia\"}\n\t\t},\n\t\t\"latlng\": [25, 45],\n\t\t\"demonym\": \"Saudi Arabian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRQ\", \"JOR\", \"KWT\", \"OMN\", \"QAT\", \"ARE\", \"YEM\"],\n\t\t\"area\": 2149690\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Sudan\",\n\t\t\t\"official\": \"Republic of the Sudan\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of the Sudan\",\n\t\t\t\t\t\"common\": \"Sudan\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sd\"],\n\t\t\"cca2\": \"SD\",\n\t\t\"ccn3\": \"729\",\n\t\t\"cca3\": \"SDN\",\n\t\t\"cioc\": \"SUD\",\n\t\t\"currency\": [\"SDG\"],\n\t\t\"callingCode\": [\"249\"],\n\t\t\"capital\": \"Khartoum\",\n\t\t\"altSpellings\": [\"SD\", \"Republic of the Sudan\", \"Jumh\\u016br\\u012byat as-S\\u016bd\\u0101n\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Sudan\", \"common\": \"Sudan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Soudan\", \"common\": \"Soudan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Sudan\", \"common\": \"Sudan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Sudan\", \"common\": \"Sudan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30fc\\u30c0\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b9\\u30fc\\u30c0\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Soedan\", \"common\": \"Soedan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Sud\\u00e3o\", \"common\": \"Sud\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0443\\u0434\\u0430\\u043d\", \"common\": \"\\u0421\\u0443\\u0434\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Sud\\u00e1n\", \"common\": \"Sud\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Sudanin tasavalta\", \"common\": \"Sudan\"}\n\t\t},\n\t\t\"latlng\": [15, 30],\n\t\t\"demonym\": \"Sudanese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CAF\", \"TCD\", \"EGY\", \"ERI\", \"ETH\", \"LBY\", \"SSD\"],\n\t\t\"area\": 1886068\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Senegal\",\n\t\t\t\"official\": \"Republic of Senegal\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du S\\u00e9n\\u00e9gal\",\n\t\t\t\t\t\"common\": \"S\\u00e9n\\u00e9gal\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sn\"],\n\t\t\"cca2\": \"SN\",\n\t\t\"ccn3\": \"686\",\n\t\t\"cca3\": \"SEN\",\n\t\t\"cioc\": \"SEN\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"221\"],\n\t\t\"capital\": \"Dakar\",\n\t\t\"altSpellings\": [\"SN\", \"Republic of Senegal\", \"R\\u00e9publique du S\\u00e9n\\u00e9gal\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du S\\u00e9n\\u00e9gal\", \"common\": \"S\\u00e9n\\u00e9gal\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30cd\\u30ac\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bb\\u30cd\\u30ac\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0435\\u043d\\u0435\\u0433\\u0430\\u043b\", \"common\": \"\\u0421\\u0435\\u043d\\u0435\\u0433\\u0430\\u043b\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Senegal\", \"common\": \"Senegal\"},\n\t\t\t\"fin\": {\"official\": \"Senegalin tasavalta\", \"common\": \"Senegal\"}\n\t\t},\n\t\t\"latlng\": [14, -14],\n\t\t\"demonym\": \"Senegalese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GMB\", \"GIN\", \"GNB\", \"MLI\", \"MRT\"],\n\t\t\"area\": 196722\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Singapore\",\n\t\t\t\"official\": \"Republic of Singapore\",\n\t\t\t\"native\": {\n\t\t\t\t\"cmn\": {\n\t\t\t\t\t\"official\": \"\\u65b0\\u52a0\\u5761\\u5171\\u548c\\u56fd\",\n\t\t\t\t\t\"common\": \"\\u65b0\\u52a0\\u5761\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Singapore\",\n\t\t\t\t\t\"common\": \"Singapore\"\n\t\t\t\t},\n\t\t\t\t\"msa\": {\n\t\t\t\t\t\"official\": \"Republik Singapura\",\n\t\t\t\t\t\"common\": \"Singapura\"\n\t\t\t\t},\n\t\t\t\t\"tam\": {\n\t\t\t\t\t\"official\": \"\\u0b9a\\u0bbf\\u0b99\\u0bcd\\u0b95\\u0baa\\u0bcd\\u0baa\\u0bc2\\u0bb0\\u0bcd \\u0b95\\u0bc1\\u0b9f\\u0bbf\\u0baf\\u0bb0\\u0b9a\\u0bc1\",\n\t\t\t\t\t\"common\": \"\\u0b9a\\u0bbf\\u0b99\\u0bcd\\u0b95\\u0baa\\u0bcd\\u0baa\\u0bc2\\u0bb0\\u0bcd\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sg\", \".\\u65b0\\u52a0\\u5761\", \".\\u0b9a\\u0bbf\\u0b99\\u0bcd\\u0b95\\u0baa\\u0bcd\\u0baa\\u0bc2\\u0bb0\\u0bcd\"],\n\t\t\"cca2\": \"SG\",\n\t\t\"ccn3\": \"702\",\n\t\t\"cca3\": \"SGP\",\n\t\t\"cioc\": \"SIN\",\n\t\t\"currency\": [\"SGD\"],\n\t\t\"callingCode\": [\"65\"],\n\t\t\"capital\": \"Singapore\",\n\t\t\"altSpellings\": [\"SG\", \"Singapura\", \"Republik Singapura\", \"\\u65b0\\u52a0\\u5761\\u5171\\u548c\\u56fd\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"cmn\": \"Mandarin\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"msa\": \"Malay\",\n\t\t\t\"tam\": \"Tamil\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Singapur\", \"common\": \"Singapur\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Singapour\", \"common\": \"Singapour\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Singapur\", \"common\": \"Singapur\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Singapore\", \"common\": \"Singapore\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b7\\u30f3\\u30ac\\u30dd\\u30fc\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b7\\u30f3\\u30ac\\u30dd\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Singapore\", \"common\": \"Singapore\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Singapura\", \"common\": \"Singapura\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0438\\u043d\\u0433\\u0430\\u043f\\u0443\\u0440\", \"common\": \"\\u0421\\u0438\\u043d\\u0433\\u0430\\u043f\\u0443\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Singapur\", \"common\": \"Singapur\"},\n\t\t\t\"fin\": {\"official\": \"Singaporen tasavalta\", \"common\": \"Singapore\"}\n\t\t},\n\t\t\"latlng\": [1.36666666, 103.8],\n\t\t\"demonym\": \"Singaporean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 710\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"South Georgia\",\n\t\t\t\"official\": \"South Georgia and the South Sandwich Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"South Georgia and the South Sandwich Islands\",\n\t\t\t\t\t\"common\": \"South Georgia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".gs\"],\n\t\t\"cca2\": \"GS\",\n\t\t\"ccn3\": \"239\",\n\t\t\"cca3\": \"SGS\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"GBP\"],\n\t\t\"callingCode\": [\"500\"],\n\t\t\"capital\": \"King Edward Point\",\n\t\t\"altSpellings\": [\"GS\", \"South Georgia and the South Sandwich Islands\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"S\\u00fcdgeorgien und die S\\u00fcdlichen Sandwichinseln\", \"common\": \"S\\u00fcdgeorgien und die S\\u00fcdlichen Sandwichinseln\"},\n\t\t\t\"fra\": {\"official\": \"G\\u00e9orgie du Sud et les \\u00eeles Sandwich du Sud\", \"common\": \"G\\u00e9orgie du Sud-et-les \\u00celes Sandwich du Sud\"},\n\t\t\t\"hrv\": {\"official\": \"Ju\\u017ena D\\u017eord\\u017eija i Otoci Ju\\u017eni Sendvi\\u010d\", \"common\": \"Ju\\u017ena Georgija i oto\\u010dje Ju\\u017eni Sandwich\"},\n\t\t\t\"ita\": {\"official\": \"Georgia del Sud e isole Sandwich del Sud\", \"common\": \"Georgia del Sud e Isole Sandwich Meridionali\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30a6\\u30b9\\u30b8\\u30e7\\u30fc\\u30b8\\u30a2\\u00b7\\u30b5\\u30a6\\u30b9\\u30b5\\u30f3\\u30c9\\u30a6\\u30a3\\u30c3\\u30c1\\u8af8\\u5cf6\", \"common\": \"\\u30b5\\u30a6\\u30b9\\u30b8\\u30e7\\u30fc\\u30b8\\u30a2\\u30fb\\u30b5\\u30a6\\u30b9\\u30b5\\u30f3\\u30c9\\u30a6\\u30a3\\u30c3\\u30c1\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Zuid-Georgi\\u00eb en de Zuidelijke Sandwich-eilanden\", \"common\": \"Zuid-Georgia en Zuidelijke Sandwicheilanden\"},\n\t\t\t\"por\": {\"official\": \"Ge\\u00f3rgia do Sul e Sandwich do Sul\", \"common\": \"Ilhas Ge\\u00f3rgia do Sul e Sandwich do Sul\"},\n\t\t\t\"rus\": {\"official\": \"\\u042e\\u0436\\u043d\\u0430\\u044f \\u0413\\u0435\\u043e\\u0440\\u0433\\u0438\\u044f \\u0438 \\u042e\\u0436\\u043d\\u044b\\u0435 \\u0421\\u0430\\u043d\\u0434\\u0432\\u0438\\u0447\\u0435\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u042e\\u0436\\u043d\\u0430\\u044f \\u0413\\u0435\\u043e\\u0440\\u0433\\u0438\\u044f \\u0438 \\u042e\\u0436\\u043d\\u044b\\u0435 \\u0421\\u0430\\u043d\\u0434\\u0432\\u0438\\u0447\\u0435\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Georgia del Sur y las Islas Sandwich del Sur\", \"common\": \"Islas Georgias del Sur y Sandwich del Sur\"},\n\t\t\t\"fin\": {\"official\": \"Etel\\u00e4-Georgia ja Etel\\u00e4iset Sandwichsaaret\", \"common\": \"Etel\\u00e4-Georgia ja Etel\\u00e4iset Sandwichsaaret\"}\n\t\t},\n\t\t\"latlng\": [-54.5, -37],\n\t\t\"demonym\": \"South Georgian South Sandwich Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 3903\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Svalbard and Jan Mayen\",\n\t\t\t\"official\": \"Svalbard og Jan Mayen\",\n\t\t\t\"native\": {\n\t\t\t\t\"nor\": {\n\t\t\t\t\t\"official\": \"Svalbard og Jan Mayen\",\n\t\t\t\t\t\"common\": \"Svalbard og Jan Mayen\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sj\"],\n\t\t\"cca2\": \"SJ\",\n\t\t\"ccn3\": \"744\",\n\t\t\"cca3\": \"SJM\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"NOK\"],\n\t\t\"callingCode\": [\"4779\"],\n\t\t\"capital\": \"Longyearbyen\",\n\t\t\"altSpellings\": [\"SJ\", \"Svalbard and Jan Mayen Islands\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"nor\": \"Norwegian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Inselgruppe Spitzbergen\", \"common\": \"Spitzbergen\"},\n\t\t\t\"fra\": {\"official\": \"Jan Mayen Svalbard\", \"common\": \"Svalbard et Jan Mayen\"},\n\t\t\t\"hrv\": {\"official\": \"Svalbard og Jan Mayen\", \"common\": \"Svalbard i Jan Mayen\"},\n\t\t\t\"ita\": {\"official\": \"Svalbard og Jan Mayen\", \"common\": \"Svalbard e Jan Mayen\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30d0\\u30fc\\u30eb\\u30d0\\u30eb\\u8af8\\u5cf6OG\\u30e4\\u30f3\\u30de\\u30a4\\u30a8\\u30f3\", \"common\": \"\\u30b9\\u30f4\\u30a1\\u30fc\\u30eb\\u30d0\\u30eb\\u8af8\\u5cf6\\u304a\\u3088\\u3073\\u30e4\\u30f3\\u30de\\u30a4\\u30a8\\u30f3\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Svalbard og Jan Mayen\", \"common\": \"Svalbard en Jan Mayen\"},\n\t\t\t\"por\": {\"official\": \"Svalbard og Jan Mayen\", \"common\": \"Ilhas Svalbard e Jan Mayen\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0432\\u0430\\u043b\\u044c\\u0431\\u0430\\u0440\\u0434\\u0430 \\u043e\\u0433 \\u042f\\u043d-\\u041c\\u0430\\u0439\\u0435\\u043d\", \"common\": \"\\u0428\\u043f\\u0438\\u0446\\u0431\\u0435\\u0440\\u0433\\u0435\\u043d \\u0438 \\u042f\\u043d-\\u041c\\u0430\\u0439\\u0435\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Svalbard og Jan Mayen\", \"common\": \"Islas Svalbard y Jan Mayen\"},\n\t\t\t\"fin\": {\"official\": \"Huippuvuoret\", \"common\": \"Huippuvuoret\"}\n\t\t},\n\t\t\"latlng\": [78, 20],\n\t\t\"demonym\": \"Norwegian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": -1\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Solomon Islands\",\n\t\t\t\"official\": \"Solomon Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Solomon Islands\",\n\t\t\t\t\t\"common\": \"Solomon Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sb\"],\n\t\t\"cca2\": \"SB\",\n\t\t\"ccn3\": \"090\",\n\t\t\"cca3\": \"SLB\",\n\t\t\"cioc\": \"SOL\",\n\t\t\"currency\": [\"SBD\"],\n\t\t\"callingCode\": [\"677\"],\n\t\t\"capital\": \"Honiara\",\n\t\t\"altSpellings\": [\"SB\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Melanesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Salomon-Inseln\", \"common\": \"Salomonen\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Salomon\", \"common\": \"\\u00celes Salomon\"},\n\t\t\t\"hrv\": {\"official\": \"Solomonski Otoci\", \"common\": \"Solomonski Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Salomone\", \"common\": \"Isole Salomone\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bd\\u30ed\\u30e2\\u30f3\\u8af8\\u5cf6\", \"common\": \"\\u30bd\\u30ed\\u30e2\\u30f3\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Solomon eilanden\", \"common\": \"Salomonseilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Salom\\u00e3o\", \"common\": \"Ilhas Salom\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u043b\\u043e\\u043c\\u043e\\u043d\\u043e\\u0432\\u044b \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0421\\u043e\\u043b\\u043e\\u043c\\u043e\\u043d\\u043e\\u0432\\u044b \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"islas Salom\\u00f3n\", \"common\": \"Islas Salom\\u00f3n\"},\n\t\t\t\"fin\": {\"official\": \"Salomonsaaret\", \"common\": \"Salomonsaaret\"}\n\t\t},\n\t\t\"latlng\": [-8, 159],\n\t\t\"demonym\": \"Solomon Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 28896\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Sierra Leone\",\n\t\t\t\"official\": \"Republic of Sierra Leone\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Sierra Leone\",\n\t\t\t\t\t\"common\": \"Sierra Leone\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sl\"],\n\t\t\"cca2\": \"SL\",\n\t\t\"ccn3\": \"694\",\n\t\t\"cca3\": \"SLE\",\n\t\t\"cioc\": \"SLE\",\n\t\t\"currency\": [\"SLL\"],\n\t\t\"callingCode\": [\"232\"],\n\t\t\"capital\": \"Freetown\",\n\t\t\"altSpellings\": [\"SL\", \"Republic of Sierra Leone\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Sierra Leone\", \"common\": \"Sierra Leone\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Sierra Leone\", \"common\": \"Sierra Leone\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Sijera Leone\", \"common\": \"Sijera Leone\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica della Sierra Leone\", \"common\": \"Sierra Leone\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b7\\u30a8\\u30e9\\u30ec\\u30aa\\u30cd\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b7\\u30a8\\u30e9\\u30ec\\u30aa\\u30cd\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Sierra Leone\", \"common\": \"Sierra Leone\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Serra Leoa\", \"common\": \"Serra Leoa\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u044c\\u0435\\u0440\\u0440\\u0430-\\u041b\\u0435\\u043e\\u043d\\u0435\", \"common\": \"\\u0421\\u044c\\u0435\\u0440\\u0440\\u0430-\\u041b\\u0435\\u043e\\u043d\\u0435\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Sierra Leona\", \"common\": \"Sierra Leone\"},\n\t\t\t\"fin\": {\"official\": \"Sierra Leonen tasavalta\", \"common\": \"Sierra Leone\"}\n\t\t},\n\t\t\"latlng\": [8.5, -11.5],\n\t\t\"demonym\": \"Sierra Leonean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GIN\", \"LBR\"],\n\t\t\"area\": 71740\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"El Salvador\",\n\t\t\t\"official\": \"Republic of El Salvador\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica de El Salvador\",\n\t\t\t\t\t\"common\": \"El Salvador\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sv\"],\n\t\t\"cca2\": \"SV\",\n\t\t\"ccn3\": \"222\",\n\t\t\"cca3\": \"SLV\",\n\t\t\"cioc\": \"ESA\",\n\t\t\"currency\": [\"SVC\", \"USD\"],\n\t\t\"callingCode\": [\"503\"],\n\t\t\"capital\": \"San Salvador\",\n\t\t\"altSpellings\": [\"SV\", \"Republic of El Salvador\", \"Rep\\u00fablica de El Salvador\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Central America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"deu\": {\"official\": \"Republik El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Salvador\", \"common\": \"Salvador\"},\n\t\t\t\"hrv\": {\"official\": \"Republika El Salvador\", \"common\": \"Salvador\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a8\\u30eb\\u30b5\\u30eb\\u30d0\\u30c9\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a8\\u30eb\\u30b5\\u30eb\\u30d0\\u30c9\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u042d\\u043b\\u044c-\\u0421\\u0430\\u043b\\u044c\\u0432\\u0430\\u0434\\u043e\\u0440\", \"common\": \"\\u0421\\u0430\\u043b\\u044c\\u0432\\u0430\\u0434\\u043e\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de El Salvador\", \"common\": \"El Salvador\"},\n\t\t\t\"fin\": {\"official\": \"El Salvadorin tasavalta\", \"common\": \"El Salvador\"}\n\t\t},\n\t\t\"latlng\": [13.83333333, -88.91666666],\n\t\t\"demonym\": \"Salvadoran\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"GTM\", \"HND\"],\n\t\t\"area\": 21041\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"San Marino\",\n\t\t\t\"official\": \"Most Serene Republic of San Marino\",\n\t\t\t\"native\": {\n\t\t\t\t\"ita\": {\n\t\t\t\t\t\"official\": \"Serenissima Repubblica di San Marino\",\n\t\t\t\t\t\"common\": \"San Marino\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sm\"],\n\t\t\"cca2\": \"SM\",\n\t\t\"ccn3\": \"674\",\n\t\t\"cca3\": \"SMR\",\n\t\t\"cioc\": \"SMR\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"378\"],\n\t\t\"capital\": \"City of San Marino\",\n\t\t\"altSpellings\": [\"SM\", \"Republic of San Marino\", \"Repubblica di San Marino\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ita\": \"Italian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Saint-Marin\", \"common\": \"Saint-Marin\"},\n\t\t\t\"hrv\": {\"official\": \"Ve\\u0107ina Serene Republika San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"ita\": {\"official\": \"Serenissima Repubblica di San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30f3\\u30de\\u30ea\\u30ce\\u306e\\u307b\\u3068\\u3093\\u3069\\u30bb\\u30ea\\u30fc\\u30cc\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b5\\u30f3\\u30de\\u30ea\\u30ce\"},\n\t\t\t\"nld\": {\"official\": \"Meest Serene Republiek San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"por\": {\"official\": \"Seren\\u00edssima Rep\\u00fablica de San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u043e\\u043b\\u044c\\u0448\\u0438\\u043d\\u0441\\u0442\\u0432\\u043e Serene \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0430\\u043d-\\u041c\\u0430\\u0440\\u0438\\u043d\\u043e\", \"common\": \"\\u0421\\u0430\\u043d-\\u041c\\u0430\\u0440\\u0438\\u043d\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Seren\\u00edsima Rep\\u00fablica de San Marino\", \"common\": \"San Marino\"},\n\t\t\t\"fin\": {\"official\": \"San Marinon seesteinen tasavalta\", \"common\": \"San Marino\"}\n\t\t},\n\t\t\"latlng\": [43.76666666, 12.41666666],\n\t\t\"demonym\": \"Sammarinese\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ITA\"],\n\t\t\"area\": 61\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Somalia\",\n\t\t\t\"official\": \"Federal Republic of Somalia\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0635\\u0648\\u0645\\u0627\\u0644\\u200e\\u200e\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u0635\\u0648\\u0645\\u0627\\u0644\\u200e\\u200e\"\n\t\t\t\t},\n\t\t\t\t\"som\": {\n\t\t\t\t\t\"official\": \"Jamhuuriyadda Federaalka Soomaaliya\",\n\t\t\t\t\t\"common\": \"Soomaaliya\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".so\"],\n\t\t\"cca2\": \"SO\",\n\t\t\"ccn3\": \"706\",\n\t\t\"cca3\": \"SOM\",\n\t\t\"cioc\": \"SOM\",\n\t\t\"currency\": [\"SOS\"],\n\t\t\"callingCode\": [\"252\"],\n\t\t\"capital\": \"Mogadishu\",\n\t\t\"altSpellings\": [\"SO\", \"a\\u1e63-\\u1e62\\u016bm\\u0101l\", \"Federal Republic of Somalia\", \"Jamhuuriyadda Federaalka Soomaaliya\", \"Jumh\\u016briyyat a\\u1e63-\\u1e62\\u016bm\\u0101l al-Fider\\u0101liyya\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"som\": \"Somali\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Bundesrepublik Somalia\", \"common\": \"Somalia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique f\\u00e9d\\u00e9rale de Somalie\", \"common\": \"Somalie\"},\n\t\t\t\"hrv\": {\"official\": \"Savezna Republika Somaliji\", \"common\": \"Somalija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica federale di Somalia\", \"common\": \"Somalia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bd\\u30de\\u30ea\\u30a2\\u9023\\u90a6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bd\\u30de\\u30ea\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Federale Republiek Somali\\u00eb\", \"common\": \"Somali\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Federal da Som\\u00e1lia\", \"common\": \"Som\\u00e1lia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u043e\\u043c\\u0430\\u043b\\u0438\", \"common\": \"\\u0421\\u043e\\u043c\\u0430\\u043b\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Federal de Somalia\", \"common\": \"Somalia\"},\n\t\t\t\"fin\": {\"official\": \"Somalian liittotasavalta\", \"common\": \"Somalia\"}\n\t\t},\n\t\t\"latlng\": [10, 49],\n\t\t\"demonym\": \"Somali\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DJI\", \"ETH\", \"KEN\"],\n\t\t\"area\": 637657\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Pierre and Miquelon\",\n\t\t\t\"official\": \"Saint Pierre and Miquelon\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Collectivit\\u00e9 territoriale de Saint-Pierre-et-Miquelon\",\n\t\t\t\t\t\"common\": \"Saint-Pierre-et-Miquelon\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".pm\"],\n\t\t\"cca2\": \"PM\",\n\t\t\"ccn3\": \"666\",\n\t\t\"cca3\": \"SPM\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"508\"],\n\t\t\"capital\": \"Saint-Pierre\",\n\t\t\"altSpellings\": [\"PM\", \"Collectivit\\u00e9 territoriale de Saint-Pierre-et-Miquelon\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"St. Pierre und Miquelon\", \"common\": \"Saint-Pierre und Miquelon\"},\n\t\t\t\"fra\": {\"official\": \"Saint-Pierre-et-Miquelon\", \"common\": \"Saint-Pierre-et-Miquelon\"},\n\t\t\t\"hrv\": {\"official\": \"Saint Pierre i Miquelon\", \"common\": \"Sveti Petar i Mikelon\"},\n\t\t\t\"ita\": {\"official\": \"Saint Pierre e Miquelon\", \"common\": \"Saint-Pierre e Miquelon\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30f3\\u30d4\\u30a8\\u30fc\\u30eb\\u5cf6\\u00b7\\u30df\\u30af\\u30ed\\u30f3\\u5cf6\", \"common\": \"\\u30b5\\u30f3\\u30d4\\u30a8\\u30fc\\u30eb\\u5cf6\\u30fb\\u30df\\u30af\\u30ed\\u30f3\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Saint-Pierre en Miquelon\", \"common\": \"Saint Pierre en Miquelon\"},\n\t\t\t\"por\": {\"official\": \"Saint Pierre e Miquelon\", \"common\": \"Saint-Pierre e Miquelon\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0435\\u043d-\\u041f\\u044c\\u0435\\u0440 \\u0438 \\u041c\\u0438\\u043a\\u0435\\u043b\\u043e\\u043d\", \"common\": \"\\u0421\\u0435\\u043d-\\u041f\\u044c\\u0435\\u0440 \\u0438 \\u041c\\u0438\\u043a\\u0435\\u043b\\u043e\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"San Pedro y Miquel\\u00f3n\", \"common\": \"San Pedro y Miquel\\u00f3n\"},\n\t\t\t\"fin\": {\"official\": \"Saint-Pierre ja Miquelon\", \"common\": \"Saint-Pierre ja Miquelon\"}\n\t\t},\n\t\t\"latlng\": [46.83333333, -56.33333333],\n\t\t\"demonym\": \"French\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 242\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Serbia\",\n\t\t\t\"official\": \"Republic of Serbia\",\n\t\t\t\"native\": {\n\t\t\t\t\"srp\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0440\\u0431\\u0438\\u0458\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0421\\u0440\\u0431\\u0438\\u0458\\u0430\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".rs\", \".\\u0441\\u0440\\u0431\"],\n\t\t\"cca2\": \"RS\",\n\t\t\"ccn3\": \"688\",\n\t\t\"cca3\": \"SRB\",\n\t\t\"cioc\": \"SRB\",\n\t\t\"currency\": [\"RSD\"],\n\t\t\"callingCode\": [\"381\"],\n\t\t\"capital\": \"Belgrade\",\n\t\t\"altSpellings\": [\"RS\", \"Srbija\", \"Republic of Serbia\", \"\\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0440\\u0431\\u0438\\u0458\\u0430\", \"Republika Srbija\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"srp\": \"Serbian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Serbien\", \"common\": \"Serbien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Serbie\", \"common\": \"Serbie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Srbija\", \"common\": \"Srbija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Serbia\", \"common\": \"Serbia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30eb\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bb\\u30eb\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Servi\\u00eb\", \"common\": \"Servi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da S\\u00e9rvia\", \"common\": \"S\\u00e9rvia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0435\\u0440\\u0431\\u0438\\u044f\", \"common\": \"\\u0421\\u0435\\u0440\\u0431\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Serbia\", \"common\": \"Serbia\"},\n\t\t\t\"fin\": {\"official\": \"Serbian tasavalta\", \"common\": \"Serbia\"}\n\t\t},\n\t\t\"latlng\": [44, 21],\n\t\t\"demonym\": \"Serbian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"BIH\", \"BGR\", \"HRV\", \"HUN\", \"KOS\", \"MKD\", \"MNE\", \"ROU\"],\n\t\t\"area\": 88361\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"South Sudan\",\n\t\t\t\"official\": \"Republic of South Sudan\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of South Sudan\",\n\t\t\t\t\t\"common\": \"South Sudan\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ss\"],\n\t\t\"cca2\": \"SS\",\n\t\t\"ccn3\": \"728\",\n\t\t\"cca3\": \"SSD\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"SSP\"],\n\t\t\"callingCode\": [\"211\"],\n\t\t\"capital\": \"Juba\",\n\t\t\"altSpellings\": [\"SS\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik S\\u00fcdsudan\", \"common\": \"S\\u00fcdsudan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Soudan du Sud\", \"common\": \"Soudan du Sud\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Ju\\u017eni Sudan\", \"common\": \"Ju\\u017eni Sudan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Sudan del Sud\", \"common\": \"Sudan del sud\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5357\\u30b9\\u30fc\\u30c0\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u5357\\u30b9\\u30fc\\u30c0\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Zuid-Soedan\", \"common\": \"Zuid-Soedan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Sud\\u00e3o do Sul\", \"common\": \"Sud\\u00e3o do Sul\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u042e\\u0436\\u043d\\u044b\\u0439 \\u0421\\u0443\\u0434\\u0430\\u043d\", \"common\": \"\\u042e\\u0436\\u043d\\u044b\\u0439 \\u0421\\u0443\\u0434\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Sud\\u00e1n del Sur\", \"common\": \"Sud\\u00e1n del Sur\"},\n\t\t\t\"fin\": {\"official\": \"Etel\\u00e4-Sudanin tasavalta\", \"common\": \"Etel\\u00e4-Sudan\"}\n\t\t},\n\t\t\"latlng\": [7, 30],\n\t\t\"demonym\": \"South Sudanese\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CAF\", \"COD\", \"ETH\", \"KEN\", \"SDN\", \"UGA\"],\n\t\t\"area\": 619745\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n\t\t\t\"official\": \"Democratic Republic of S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Democr\\u00e1tica do S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\",\n\t\t\t\t\t\"common\": \"S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".st\"],\n\t\t\"cca2\": \"ST\",\n\t\t\"ccn3\": \"678\",\n\t\t\"cca3\": \"STP\",\n\t\t\"cioc\": \"STP\",\n\t\t\"currency\": [\"STD\"],\n\t\t\"callingCode\": [\"239\"],\n\t\t\"capital\": \"S\\u00e3o Tom\\u00e9\",\n\t\t\"altSpellings\": [\"ST\", \"Democratic Republic of S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\", \"Sao Tome and Principe\", \"Rep\\u00fablica Democr\\u00e1tica de S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratische Republik S\\u00e3o Tom\\u00e9 und Pr\\u00edncipe\", \"common\": \"S\\u00e3o Tom\\u00e9 und Pr\\u00edncipe\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique de S\\u00e3o Tom\\u00e9 et Pr\\u00edncipe\", \"common\": \"S\\u00e3o Tom\\u00e9 et Pr\\u00edncipe\"},\n\t\t\t\"hrv\": {\"official\": \"Demokratska Republika S\\u00e3o Tome i Principe\", \"common\": \"Sveti Toma i Princip\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica democratica di S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\", \"common\": \"S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30f3\\u30c8\\u30e1\\u00b7\\u30d7\\u30ea\\u30f3\\u30b7\\u30da\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b5\\u30f3\\u30c8\\u30e1\\u30fb\\u30d7\\u30ea\\u30f3\\u30b7\\u30da\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Republiek Sao Tom\\u00e9 en Principe\", \"common\": \"Sao Tom\\u00e9 en Principe\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica de S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\", \"common\": \"S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0430\\u043d-\\u0422\\u043e\\u043c\\u0435 \\u0438 \\u041f\\u0440\\u0438\\u043d\\u0441\\u0438\\u043f\\u0438\", \"common\": \"\\u0421\\u0430\\u043d-\\u0422\\u043e\\u043c\\u0435 \\u0438 \\u041f\\u0440\\u0438\\u043d\\u0441\\u0438\\u043f\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica de Santo Tom\\u00e9 y Pr\\u00edncipe\", \"common\": \"Santo Tom\\u00e9 y Pr\\u00edncipe\"},\n\t\t\t\"fin\": {\"official\": \"S\\u00e3o Tom\\u00e9 ja Pr\\u00edncipen demokraattinen tasavalta\", \"common\": \"S\\u00e3o T\\u00e9me ja Pr\\u00edncipe\"}\n\t\t},\n\t\t\"latlng\": [1, 7],\n\t\t\"demonym\": \"Sao Tomean\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 964\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Suriname\",\n\t\t\t\"official\": \"Republic of Suriname\",\n\t\t\t\"native\": {\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Republiek Suriname\",\n\t\t\t\t\t\"common\": \"Suriname\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sr\"],\n\t\t\"cca2\": \"SR\",\n\t\t\"ccn3\": \"740\",\n\t\t\"cca3\": \"SUR\",\n\t\t\"cioc\": \"SUR\",\n\t\t\"currency\": [\"SRD\"],\n\t\t\"callingCode\": [\"597\"],\n\t\t\"capital\": \"Paramaribo\",\n\t\t\"altSpellings\": [\"SR\", \"Sarnam\", \"Sranangron\", \"Republic of Suriname\", \"Republiek Suriname\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"nld\": \"Dutch\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Suriname\", \"common\": \"Suriname\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Suriname\", \"common\": \"Surinam\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Surinam\", \"common\": \"Surinam\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Suriname\", \"common\": \"Suriname\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30ea\\u30ca\\u30e0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b9\\u30ea\\u30ca\\u30e0\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Suriname\", \"common\": \"Suriname\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Suriname\", \"common\": \"Suriname\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0443\\u0440\\u0438\\u043d\\u0430\\u043c\", \"common\": \"\\u0421\\u0443\\u0440\\u0438\\u043d\\u0430\\u043c\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Suriname\", \"common\": \"Surinam\"},\n\t\t\t\"fin\": {\"official\": \"Surinamen tasavalta\", \"common\": \"Suriname\"}\n\t\t},\n\t\t\"latlng\": [4, -56],\n\t\t\"demonym\": \"Surinamer\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRA\", \"GUF\", \"GUY\"],\n\t\t\"area\": 163820\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Slovakia\",\n\t\t\t\"official\": \"Slovak Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"slk\": {\n\t\t\t\t\t\"official\": \"Slovensk\\u00e1 republika\",\n\t\t\t\t\t\"common\": \"Slovensko\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sk\"],\n\t\t\"cca2\": \"SK\",\n\t\t\"ccn3\": \"703\",\n\t\t\"cca3\": \"SVK\",\n\t\t\"cioc\": \"SVK\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"421\"],\n\t\t\"capital\": \"Bratislava\",\n\t\t\"altSpellings\": [\"SK\", \"Slovak Republic\", \"Slovensk\\u00e1 republika\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"slk\": \"Slovak\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Slowakische Republik\", \"common\": \"Slowakei\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique slovaque\", \"common\": \"Slovaquie\"},\n\t\t\t\"hrv\": {\"official\": \"slova\\u010dka\", \"common\": \"Slova\\u010dka\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica slovacca\", \"common\": \"Slovacchia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30ed\\u30d0\\u30ad\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b9\\u30ed\\u30d0\\u30ad\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Slowaakse Republiek\", \"common\": \"Slowakije\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Eslovaca\", \"common\": \"Eslov\\u00e1quia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043b\\u043e\\u0432\\u0430\\u0446\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0421\\u043b\\u043e\\u0432\\u0430\\u043a\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Eslovaca\", \"common\": \"Rep\\u00fablica Eslovaca\"},\n\t\t\t\"fin\": {\"official\": \"Slovakian tasavalta\", \"common\": \"Slovakia\"}\n\t\t},\n\t\t\"latlng\": [48.66666666, 19.5],\n\t\t\"demonym\": \"Slovak\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AUT\", \"CZE\", \"HUN\", \"POL\", \"UKR\"],\n\t\t\"area\": 49037\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Slovenia\",\n\t\t\t\"official\": \"Republic of Slovenia\",\n\t\t\t\"native\": {\n\t\t\t\t\"slv\": {\n\t\t\t\t\t\"official\": \"Republika Slovenija\",\n\t\t\t\t\t\"common\": \"Slovenija\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".si\"],\n\t\t\"cca2\": \"SI\",\n\t\t\"ccn3\": \"705\",\n\t\t\"cca3\": \"SVN\",\n\t\t\"cioc\": \"SLO\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"386\"],\n\t\t\"capital\": \"Ljubljana\",\n\t\t\"altSpellings\": [\"SI\", \"Republic of Slovenia\", \"Republika Slovenija\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"slv\": \"Slovene\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Slowenien\", \"common\": \"Slowenien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Slov\\u00e9nie\", \"common\": \"Slov\\u00e9nie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Slovenija\", \"common\": \"Slovenija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Slovenia\", \"common\": \"Slovenia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30ed\\u30d9\\u30cb\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b9\\u30ed\\u30d9\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Sloveni\\u00eb\", \"common\": \"Sloveni\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Eslov\\u00e9nia\", \"common\": \"Eslov\\u00e9nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u043b\\u043e\\u0432\\u0435\\u043d\\u0438\\u044f\", \"common\": \"\\u0421\\u043b\\u043e\\u0432\\u0435\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Eslovenia\", \"common\": \"Eslovenia\"},\n\t\t\t\"fin\": {\"official\": \"Slovenian tasavalta\", \"common\": \"Slovenia\"}\n\t\t},\n\t\t\"latlng\": [46.11666666, 14.81666666],\n\t\t\"demonym\": \"Slovene\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"AUT\", \"HRV\", \"ITA\", \"HUN\"],\n\t\t\"area\": 20273\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Sweden\",\n\t\t\t\"official\": \"Kingdom of Sweden\",\n\t\t\t\"native\": {\n\t\t\t\t\"swe\": {\n\t\t\t\t\t\"official\": \"Konungariket Sverige\",\n\t\t\t\t\t\"common\": \"Sverige\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".se\"],\n\t\t\"cca2\": \"SE\",\n\t\t\"ccn3\": \"752\",\n\t\t\"cca3\": \"SWE\",\n\t\t\"cioc\": \"SWE\",\n\t\t\"currency\": [\"SEK\"],\n\t\t\"callingCode\": [\"46\"],\n\t\t\"capital\": \"Stockholm\",\n\t\t\"altSpellings\": [\"SE\", \"Kingdom of Sweden\", \"Konungariket Sverige\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Northern Europe\",\n\t\t\"languages\": {\n\t\t\t\"swe\": \"Swedish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Schweden\", \"common\": \"Schweden\"},\n\t\t\t\"fra\": {\"official\": \"Royaume de Su\\u00e8de\", \"common\": \"Su\\u00e8de\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina \\u0160vedska\", \"common\": \"\\u0160vedska\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Svezia\", \"common\": \"Svezia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30a6\\u30a7\\u30fc\\u30c7\\u30f3\\u738b\\u56fd\", \"common\": \"\\u30b9\\u30a6\\u30a7\\u30fc\\u30c7\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Zweden\", \"common\": \"Zweden\"},\n\t\t\t\"por\": {\"official\": \"Reino da Su\\u00e9cia\", \"common\": \"Su\\u00e9cia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0428\\u0432\\u0435\\u0446\\u0438\\u044f\", \"common\": \"\\u0428\\u0432\\u0435\\u0446\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Suecia\", \"common\": \"Suecia\"},\n\t\t\t\"fin\": {\"official\": \"Ruotsin kuningaskunta\", \"common\": \"Ruotsi\"}\n\t\t},\n\t\t\"latlng\": [62, 15],\n\t\t\"demonym\": \"Swedish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"FIN\", \"NOR\"],\n\t\t\"area\": 450295\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Swaziland\",\n\t\t\t\"official\": \"Kingdom of Swaziland\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Kingdom of Swaziland\",\n\t\t\t\t\t\"common\": \"Swaziland\"\n\t\t\t\t},\n\t\t\t\t\"ssw\": {\n\t\t\t\t\t\"official\": \"Kingdom of Swaziland\",\n\t\t\t\t\t\"common\": \"Swaziland\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sz\"],\n\t\t\"cca2\": \"SZ\",\n\t\t\"ccn3\": \"748\",\n\t\t\"cca3\": \"SWZ\",\n\t\t\"cioc\": \"SWZ\",\n\t\t\"currency\": [\"SZL\"],\n\t\t\"callingCode\": [\"268\"],\n\t\t\"capital\": \"Lobamba\",\n\t\t\"altSpellings\": [\"SZ\", \"weSwatini\", \"Swatini\", \"Ngwane\", \"Kingdom of Swaziland\", \"Umbuso waseSwatini\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Southern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"ssw\": \"Swazi\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Swasiland\", \"common\": \"Swasiland\"},\n\t\t\t\"fra\": {\"official\": \"Royaume du Swaziland\", \"common\": \"Swaziland\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Svazi\", \"common\": \"Svazi\"},\n\t\t\t\"ita\": {\"official\": \"Regno dello Swaziland\", \"common\": \"Swaziland\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b9\\u30ef\\u30b8\\u30e9\\u30f3\\u30c9\\u738b\\u56fd\", \"common\": \"\\u30b9\\u30ef\\u30b8\\u30e9\\u30f3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Swaziland\", \"common\": \"Swaziland\"},\n\t\t\t\"por\": {\"official\": \"Reino da Suazil\\u00e2ndia\", \"common\": \"Suazil\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0421\\u0432\\u0430\\u0437\\u0438\\u043b\\u0435\\u043d\\u0434\", \"common\": \"\\u0421\\u0432\\u0430\\u0437\\u0438\\u043b\\u0435\\u043d\\u0434\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Swazilandia\", \"common\": \"Suazilandia\"},\n\t\t\t\"fin\": {\"official\": \"Swazimaan kuningaskunta\", \"common\": \"Swazimaa\"}\n\t\t},\n\t\t\"latlng\": [-26.5, 31.5],\n\t\t\"demonym\": \"Swazi\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"MOZ\", \"ZAF\"],\n\t\t\"area\": 17364\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Sint Maarten\",\n\t\t\t\"official\": \"Sint Maarten\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Sint Maarten\",\n\t\t\t\t\t\"common\": \"Sint Maarten\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Saint-Martin\",\n\t\t\t\t\t\"common\": \"Saint-Martin\"\n\t\t\t\t},\n\t\t\t\t\"nld\": {\n\t\t\t\t\t\"official\": \"Sint Maarten\",\n\t\t\t\t\t\"common\": \"Sint Maarten\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sx\"],\n\t\t\"cca2\": \"SX\",\n\t\t\"ccn3\": \"534\",\n\t\t\"cca3\": \"SXM\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"ANG\"],\n\t\t\"callingCode\": [\"1721\"],\n\t\t\"capital\": \"Philipsburg\",\n\t\t\"altSpellings\": [\"SX\", \"Sint Maarten (Dutch part)\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\",\n\t\t\t\"nld\": \"Dutch\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Sint Maarten\", \"common\": \"Sint Maarten\"},\n\t\t\t\"fra\": {\"official\": \"Sint Maarten\", \"common\": \"Saint-Martin\"},\n\t\t\t\"ita\": {\"official\": \"Sint Maarten\", \"common\": \"Sint Maarten\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b7\\u30f3\\u30c8\\u30de\\u30fc\\u30eb\\u30c6\\u30f3\\u5cf6\", \"common\": \"\\u30b7\\u30f3\\u30c8\\u30fb\\u30de\\u30fc\\u30eb\\u30c6\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Sint Maarten\", \"common\": \"Sint Maarten\"},\n\t\t\t\"por\": {\"official\": \"Sint Maarten\", \"common\": \"S\\u00e3o Martinho\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0438\\u043d\\u0442-\\u041c\\u0430\\u0430\\u0440\\u0442\\u0435\\u043d\", \"common\": \"\\u0421\\u0438\\u043d\\u0442-\\u041c\\u0430\\u0440\\u0442\\u0435\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Sint Maarten\", \"common\": \"Sint Maarten\"},\n\t\t\t\"fin\": {\"official\": \"Sint Maarten\", \"common\": \"Sint Maarten\"}\n\t\t},\n\t\t\"latlng\": [18.033333, -63.05],\n\t\t\"demonym\": \"St. Maartener\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MAF\"],\n\t\t\"area\": 34\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Seychelles\",\n\t\t\t\"official\": \"Republic of Seychelles\",\n\t\t\t\"native\": {\n\t\t\t\t\"crs\": {\n\t\t\t\t\t\"official\": \"Repiblik Sesel\",\n\t\t\t\t\t\"common\": \"Sesel\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Seychelles\",\n\t\t\t\t\t\"common\": \"Seychelles\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique des Seychelles\",\n\t\t\t\t\t\"common\": \"Seychelles\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sc\"],\n\t\t\"cca2\": \"SC\",\n\t\t\"ccn3\": \"690\",\n\t\t\"cca3\": \"SYC\",\n\t\t\"cioc\": \"SEY\",\n\t\t\"currency\": [\"SCR\"],\n\t\t\"callingCode\": [\"248\"],\n\t\t\"capital\": \"Victoria\",\n\t\t\"altSpellings\": [\"SC\", \"Republic of Seychelles\", \"Repiblik Sesel\", \"R\\u00e9publique des Seychelles\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"crs\": \"Seychellois Creole\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik der Seychellen\", \"common\": \"Seychellen\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique des Seychelles\", \"common\": \"Seychelles\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Sej\\u0161eli\", \"common\": \"Sej\\u0161eli\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica delle Seychelles\", \"common\": \"Seychelles\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30a4\\u30b7\\u30a7\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bb\\u30fc\\u30b7\\u30a7\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Republiek der Seychellen\", \"common\": \"Seychellen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica das Seychelles\", \"common\": \"Seicheles\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0421\\u0435\\u0439\\u0448\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0435 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0421\\u0435\\u0439\\u0448\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0435 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de las Seychelles\", \"common\": \"Seychelles\"},\n\t\t\t\"fin\": {\"official\": \"Seychellien tasavalta\", \"common\": \"Seychellit\"}\n\t\t},\n\t\t\"latlng\": [-4.58333333, 55.66666666],\n\t\t\"demonym\": \"Seychellois\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 452\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Syria\",\n\t\t\t\"official\": \"Syrian Arab Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0648\\u0631\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0633\\u0648\\u0631\\u064a\\u0627\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".sy\", \"\\u0633\\u0648\\u0631\\u064a\\u0627.\"],\n\t\t\"cca2\": \"SY\",\n\t\t\"ccn3\": \"760\",\n\t\t\"cca3\": \"SYR\",\n\t\t\"cioc\": \"SYR\",\n\t\t\"currency\": [\"SYP\"],\n\t\t\"callingCode\": [\"963\"],\n\t\t\"capital\": \"Damascus\",\n\t\t\"altSpellings\": [\"SY\", \"Syrian Arab Republic\", \"Al-Jumh\\u016br\\u012byah Al-\\u02bbArab\\u012byah As-S\\u016br\\u012byah\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Arabische Republik Syrien\", \"common\": \"Syrien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique arabe syrienne\", \"common\": \"Syrie\"},\n\t\t\t\"hrv\": {\"official\": \"Sirijska Arapska Republika\", \"common\": \"Sirija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica araba siriana\", \"common\": \"Siria\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b7\\u30ea\\u30a2\\u30a2\\u30e9\\u30d6\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b7\\u30ea\\u30a2\\u30fb\\u30a2\\u30e9\\u30d6\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Syrische Arabische Republiek\", \"common\": \"Syri\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica \\u00c1rabe S\\u00edria\", \"common\": \"S\\u00edria\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0438\\u0440\\u0438\\u0439\\u0441\\u043a\\u0430\\u044f \\u0410\\u0440\\u0430\\u0431\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0421\\u0438\\u0440\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica \\u00c1rabe Siria\", \"common\": \"Siria\"},\n\t\t\t\"fin\": {\"official\": \"Syyrian arabitasavalta\", \"common\": \"Syyria\"}\n\t\t},\n\t\t\"latlng\": [35, 38],\n\t\t\"demonym\": \"Syrian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IRQ\", \"ISR\", \"JOR\", \"LBN\", \"TUR\"],\n\t\t\"area\": 185180\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Turks and Caicos Islands\",\n\t\t\t\"official\": \"Turks and Caicos Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Turks and Caicos Islands\",\n\t\t\t\t\t\"common\": \"Turks and Caicos Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tc\"],\n\t\t\"cca2\": \"TC\",\n\t\t\"ccn3\": \"796\",\n\t\t\"cca3\": \"TCA\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1649\"],\n\t\t\"capital\": \"Cockburn Town\",\n\t\t\"altSpellings\": [\"TC\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Turks und Caicos Inseln\", \"common\": \"Turks-und Caicosinseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Turques et Ca\\u00efques\", \"common\": \"\\u00celes Turques-et-Ca\\u00efques\"},\n\t\t\t\"hrv\": {\"official\": \"Otoci Turks i Caicos\", \"common\": \"Otoci Turks i Caicos\"},\n\t\t\t\"ita\": {\"official\": \"Turks e Caicos\", \"common\": \"Isole Turks e Caicos\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bf\\u30fc\\u30af\\u30b9\\u00b7\\u30ab\\u30a4\\u30b3\\u30b9\\u8af8\\u5cf6\", \"common\": \"\\u30bf\\u30fc\\u30af\\u30b9\\u30fb\\u30ab\\u30a4\\u30b3\\u30b9\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Turks-en Caicoseilanden\", \"common\": \"Turks-en Caicoseilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Turks e Caicos\", \"common\": \"Ilhas Turks e Caicos\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u043a\\u0441 \\u0438 \\u041a\\u0430\\u0439\\u043a\\u043e\\u0441 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0422\\u0435\\u0440\\u043a\\u0441 \\u0438 \\u041a\\u0430\\u0439\\u043a\\u043e\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Islas Turcas y Caicos\", \"common\": \"Islas Turks y Caicos\"},\n\t\t\t\"fin\": {\"official\": \"Turks-ja Caicossaaret\", \"common\": \"Turks-ja Caicossaaret\"}\n\t\t},\n\t\t\"latlng\": [21.75, -71.58333333],\n\t\t\"demonym\": \"Turks and Caicos Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 948\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Chad\",\n\t\t\t\"official\": \"Republic of Chad\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u062a\\u0634\\u0627\\u062f\",\n\t\t\t\t\t\"common\": \"\\u062a\\u0634\\u0627\\u062f\\u200e\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique du Tchad\",\n\t\t\t\t\t\"common\": \"Tchad\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".td\"],\n\t\t\"cca2\": \"TD\",\n\t\t\"ccn3\": \"148\",\n\t\t\"cca3\": \"TCD\",\n\t\t\"cioc\": \"CHA\",\n\t\t\"currency\": [\"XAF\"],\n\t\t\"callingCode\": [\"235\"],\n\t\t\"capital\": \"N'Djamena\",\n\t\t\"altSpellings\": [\"TD\", \"Tchad\", \"Republic of Chad\", \"R\\u00e9publique du Tchad\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Middle Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"cym\": {\"official\": \"Republic of Chad\", \"common\": \"Tsiad\"},\n\t\t\t\"deu\": {\"official\": \"Republik Tschad\", \"common\": \"Tschad\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Tchad\", \"common\": \"Tchad\"},\n\t\t\t\"hrv\": {\"official\": \"\\u010cadu\", \"common\": \"\\u010cad\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Ciad\", \"common\": \"Ciad\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c1\\u30e3\\u30c9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c1\\u30e3\\u30c9\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Tsjaad\", \"common\": \"Tsjaad\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Chade\", \"common\": \"Chade\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0427\\u0430\\u0434\", \"common\": \"\\u0427\\u0430\\u0434\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Chad\", \"common\": \"Chad\"},\n\t\t\t\"fin\": {\"official\": \"T\\u0161adin tasavalta\", \"common\": \"T\\u0161ad\"}\n\t\t},\n\t\t\"latlng\": [15, 19],\n\t\t\"demonym\": \"Chadian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"CMR\", \"CAF\", \"LBY\", \"NER\", \"NGA\", \"SSD\"],\n\t\t\"area\": 1284000\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Togo\",\n\t\t\t\"official\": \"Togolese Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique togolaise\",\n\t\t\t\t\t\"common\": \"Togo\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tg\"],\n\t\t\"cca2\": \"TG\",\n\t\t\"ccn3\": \"768\",\n\t\t\"cca3\": \"TGO\",\n\t\t\"cioc\": \"TOG\",\n\t\t\"currency\": [\"XOF\"],\n\t\t\"callingCode\": [\"228\"],\n\t\t\"capital\": \"Lom\\u00e9\",\n\t\t\"altSpellings\": [\"TG\", \"Togolese\", \"Togolese Republic\", \"R\\u00e9publique Togolaise\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Western Africa\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Togo\", \"common\": \"Togo\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique togolaise\", \"common\": \"Togo\"},\n\t\t\t\"hrv\": {\"official\": \"Togolese Republika\", \"common\": \"Togo\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Togo\", \"common\": \"Togo\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30fc\\u30b4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c8\\u30fc\\u30b4\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Togo\", \"common\": \"Togo\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Togo\", \"common\": \"Togo\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u043e\\u0433\\u043e \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0422\\u043e\\u0433\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Togo\", \"common\": \"Togo\"},\n\t\t\t\"fin\": {\"official\": \"Togon tasavalta\", \"common\": \"Togo\"}\n\t\t},\n\t\t\"latlng\": [8, 1.16666666],\n\t\t\"demonym\": \"Togolese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BEN\", \"BFA\", \"GHA\"],\n\t\t\"area\": 56785\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Thailand\",\n\t\t\t\"official\": \"Kingdom of Thailand\",\n\t\t\t\"native\": {\n\t\t\t\t\"tha\": {\n\t\t\t\t\t\"official\": \"\\u0e23\\u0e32\\u0e0a\\u0e2d\\u0e32\\u0e13\\u0e32\\u0e08\\u0e31\\u0e01\\u0e23\\u0e44\\u0e17\\u0e22\",\n\t\t\t\t\t\"common\": \"\\u0e1b\\u0e23\\u0e30\\u0e40\\u0e17\\u0e28\\u0e44\\u0e17\\u0e22\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".th\", \".\\u0e44\\u0e17\\u0e22\"],\n\t\t\"cca2\": \"TH\",\n\t\t\"ccn3\": \"764\",\n\t\t\"cca3\": \"THA\",\n\t\t\"cioc\": \"THA\",\n\t\t\"currency\": [\"THB\"],\n\t\t\"callingCode\": [\"66\"],\n\t\t\"capital\": \"Bangkok\",\n\t\t\"altSpellings\": [\"TH\", \"Prathet\", \"Thai\", \"Kingdom of Thailand\", \"\\u0e23\\u0e32\\u0e0a\\u0e2d\\u0e32\\u0e13\\u0e32\\u0e08\\u0e31\\u0e01\\u0e23\\u0e44\\u0e17\\u0e22\", \"Ratcha Anachak Thai\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"tha\": \"Thai\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Thailand\", \"common\": \"Thailand\"},\n\t\t\t\"fra\": {\"official\": \"Royaume de Tha\\u00eflande\", \"common\": \"Tha\\u00eflande\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Tajland\", \"common\": \"Tajland\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Thailandia\", \"common\": \"Tailandia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bf\\u30a4\\u738b\\u56fd\", \"common\": \"\\u30bf\\u30a4\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Thailand\", \"common\": \"Thailand\"},\n\t\t\t\"por\": {\"official\": \"Reino da Tail\\u00e2ndia\", \"common\": \"Tail\\u00e2ndia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0422\\u0430\\u0438\\u043b\\u0430\\u043d\\u0434\", \"common\": \"\\u0422\\u0430\\u0438\\u043b\\u0430\\u043d\\u0434\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Tailandia\", \"common\": \"Tailandia\"},\n\t\t\t\"fin\": {\"official\": \"Thaimaan kuningaskunta\", \"common\": \"Thaimaa\"}\n\t\t},\n\t\t\"latlng\": [15, 100],\n\t\t\"demonym\": \"Thai\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"MMR\", \"KHM\", \"LAO\", \"MYS\"],\n\t\t\"area\": 513120\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tajikistan\",\n\t\t\t\"official\": \"Republic of Tajikistan\",\n\t\t\t\"native\": {\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0430\\u0434\\u0436\\u0438\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\",\n\t\t\t\t\t\"common\": \"\\u0422\\u0430\\u0434\\u0436\\u0438\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\"\n\t\t\t\t},\n\t\t\t\t\"tgk\": {\n\t\t\t\t\t\"official\": \"\\u04b6\\u0443\\u043c\\u04b3\\u0443\\u0440\\u0438\\u0438 \\u0422\\u043e\\u04b7\\u0438\\u043a\\u0438\\u0441\\u0442\\u043e\\u043d\",\n\t\t\t\t\t\"common\": \"\\u0422\\u043e\\u04b7\\u0438\\u043a\\u0438\\u0441\\u0442\\u043e\\u043d\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tj\"],\n\t\t\"cca2\": \"TJ\",\n\t\t\"ccn3\": \"762\",\n\t\t\"cca3\": \"TJK\",\n\t\t\"cioc\": \"TJK\",\n\t\t\"currency\": [\"TJS\"],\n\t\t\"callingCode\": [\"992\"],\n\t\t\"capital\": \"Dushanbe\",\n\t\t\"altSpellings\": [\"TJ\", \"To\\u00e7ikiston\", \"Republic of Tajikistan\", \"\\u04b6\\u0443\\u043c\\u04b3\\u0443\\u0440\\u0438\\u0438 \\u0422\\u043e\\u04b7\\u0438\\u043a\\u0438\\u0441\\u0442\\u043e\\u043d\", \"\\u00c7umhuriyi To\\u00e7ikiston\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Central Asia\",\n\t\t\"languages\": {\n\t\t\t\"rus\": \"Russian\",\n\t\t\t\"tgk\": \"Tajik\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Tadschikistan\", \"common\": \"Tadschikistan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Tadjikistan\", \"common\": \"Tadjikistan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Tad\\u017eikistan\", \"common\": \"Ta\\u0111ikistan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Tajikistan\", \"common\": \"Tagikistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bf\\u30b8\\u30ad\\u30b9\\u30bf\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bf\\u30b8\\u30ad\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Tadzjikistan\", \"common\": \"Tadzjikistan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Tajiquist\\u00e3o\", \"common\": \"Tajiquist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0430\\u0434\\u0436\\u0438\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u0422\\u0430\\u0434\\u0436\\u0438\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Tayikist\\u00e1n\", \"common\": \"Tayikist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Tad\\u017eikistanin tasavalta\", \"common\": \"Tad\\u017eikistan\"}\n\t\t},\n\t\t\"latlng\": [39, 71],\n\t\t\"demonym\": \"Tadzhik\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AFG\", \"CHN\", \"KGZ\", \"UZB\"],\n\t\t\"area\": 143100\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tokelau\",\n\t\t\t\"official\": \"Tokelau\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Tokelau\",\n\t\t\t\t\t\"common\": \"Tokelau\"\n\t\t\t\t},\n\t\t\t\t\"smo\": {\n\t\t\t\t\t\"official\": \"Tokelau\",\n\t\t\t\t\t\"common\": \"Tokelau\"\n\t\t\t\t},\n\t\t\t\t\"tkl\": {\n\t\t\t\t\t\"official\": \"Tokelau\",\n\t\t\t\t\t\"common\": \"Tokelau\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tk\"],\n\t\t\"cca2\": \"TK\",\n\t\t\"ccn3\": \"772\",\n\t\t\"cca3\": \"TKL\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"NZD\"],\n\t\t\"callingCode\": [\"690\"],\n\t\t\"capital\": \"Fakaofo\",\n\t\t\"altSpellings\": [\"TK\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"smo\": \"Samoan\",\n\t\t\t\"tkl\": \"Tokelauan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Tokelau\", \"common\": \"Tokelau\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Tokelau\", \"common\": \"Tokelau\"},\n\t\t\t\"hrv\": {\"official\": \"Tokelau\", \"common\": \"Tokelau\"},\n\t\t\t\"ita\": {\"official\": \"Tokelau\", \"common\": \"Isole Tokelau\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30b1\\u30e9\\u30a6\\u8af8\\u5cf6\", \"common\": \"\\u30c8\\u30b1\\u30e9\\u30a6\"},\n\t\t\t\"nld\": {\"official\": \"Tokelau\", \"common\": \"Tokelau\"},\n\t\t\t\"por\": {\"official\": \"Tokelau\", \"common\": \"Tokelau\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u043e\\u043a\\u0435\\u043b\\u0430\\u0443\", \"common\": \"\\u0422\\u043e\\u043a\\u0435\\u043b\\u0430\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Tokelau\", \"common\": \"Islas Tokelau\"},\n\t\t\t\"fin\": {\"official\": \"Tokelau\", \"common\": \"Tokelau\"}\n\t\t},\n\t\t\"latlng\": [-9, -172],\n\t\t\"demonym\": \"Tokelauan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 12\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Turkmenistan\",\n\t\t\t\"official\": \"Turkmenistan\",\n\t\t\t\"native\": {\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0422\\u0443\\u0440\\u043a\\u043c\\u0435\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\",\n\t\t\t\t\t\"common\": \"\\u0422\\u0443\\u0440\\u043a\\u043c\\u0435\\u043d\\u0438\\u044f\"\n\t\t\t\t},\n\t\t\t\t\"tuk\": {\n\t\t\t\t\t\"official\": \"T\\u00fcrkmenistan\",\n\t\t\t\t\t\"common\": \"T\\u00fcrkmenistan\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tm\"],\n\t\t\"cca2\": \"TM\",\n\t\t\"ccn3\": \"795\",\n\t\t\"cca3\": \"TKM\",\n\t\t\"cioc\": \"TKM\",\n\t\t\"currency\": [\"TMT\"],\n\t\t\"callingCode\": [\"993\"],\n\t\t\"capital\": \"Ashgabat\",\n\t\t\"altSpellings\": [\"TM\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Central Asia\",\n\t\t\"languages\": {\n\t\t\t\"rus\": \"Russian\",\n\t\t\t\"tuk\": \"Turkmen\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Turkmenistan\", \"common\": \"Turkmenistan\"},\n\t\t\t\"fra\": {\"official\": \"Turkm\\u00e9nistan\", \"common\": \"Turkm\\u00e9nistan\"},\n\t\t\t\"hrv\": {\"official\": \"Turkmenistan\", \"common\": \"Turkmenistan\"},\n\t\t\t\"ita\": {\"official\": \"Turkmenistan\", \"common\": \"Turkmenistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30eb\\u30af\\u30e1\\u30cb\\u30b9\\u30bf\\u30f3\", \"common\": \"\\u30c8\\u30eb\\u30af\\u30e1\\u30cb\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Turkmenistan\", \"common\": \"Turkmenistan\"},\n\t\t\t\"por\": {\"official\": \"Turcomenist\\u00e3o\", \"common\": \"Turquemenist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0443\\u0440\\u043a\\u043c\\u0435\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u0422\\u0443\\u0440\\u043a\\u043c\\u0435\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Turkmenist\\u00e1n\", \"common\": \"Turkmenist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Turkmenistan\", \"common\": \"Turkmenistan\"}\n\t\t},\n\t\t\"latlng\": [40, 60],\n\t\t\"demonym\": \"Turkmen\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AFG\", \"IRN\", \"KAZ\", \"UZB\"],\n\t\t\"area\": 488100\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Timor-Leste\",\n\t\t\t\"official\": \"Democratic Republic of Timor-Leste\",\n\t\t\t\"native\": {\n\t\t\t\t\"por\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Democr\\u00e1tica de Timor-Leste\",\n\t\t\t\t\t\"common\": \"Timor-Leste\"\n\t\t\t\t},\n\t\t\t\t\"tet\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablika Demokr\\u00e1tika Tim\\u00f3r-Leste\",\n\t\t\t\t\t\"common\": \"Tim\\u00f3r-Leste\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tl\"],\n\t\t\"cca2\": \"TL\",\n\t\t\"ccn3\": \"626\",\n\t\t\"cca3\": \"TLS\",\n\t\t\"cioc\": \"TLS\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"670\"],\n\t\t\"capital\": \"Dili\",\n\t\t\"altSpellings\": [\"TL\", \"East Timor\", \"Democratic Republic of Timor-Leste\", \"Rep\\u00fablica Democr\\u00e1tica de Timor-Leste\", \"Rep\\u00fablika Demokr\\u00e1tika Tim\\u00f3r-Leste\", \"Tim\\u00f3r Lorosa'e\", \"Timor Lorosae\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"por\": \"Portuguese\",\n\t\t\t\"tet\": \"Tetum\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Demokratische Republik Timor-Leste\", \"common\": \"Timor-Leste\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d\\u00e9mocratique du Timor oriental\", \"common\": \"Timor oriental\"},\n\t\t\t\"hrv\": {\"official\": \"Demokratska Republika Timor-Leste\", \"common\": \"Isto\\u010dni Timor\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Democratica di Timor Est\", \"common\": \"Timor Est\"},\n\t\t\t\"jpn\": {\"official\": \"\\u6771\\u30c6\\u30a3\\u30e2\\u30fc\\u30eb\\u6c11\\u4e3b\\u5171\\u548c\\u56fd\", \"common\": \"\\u6771\\u30c6\\u30a3\\u30e2\\u30fc\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Democratische Republiek Oost-Timor\", \"common\": \"Oost-Timor\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica de Timor-Leste\", \"common\": \"Timor-Leste\"},\n\t\t\t\"rus\": {\"official\": \"\\u0414\\u0435\\u043c\\u043e\\u043a\\u0440\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0438\\u043c\\u043e\\u0440 -\\u041b\\u0435\\u0448\\u0442\\u0438\", \"common\": \"\\u0412\\u043e\\u0441\\u0442\\u043e\\u0447\\u043d\\u044b\\u0439 \\u0422\\u0438\\u043c\\u043e\\u0440\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Democr\\u00e1tica de Timor-Leste\", \"common\": \"Timor Oriental\"},\n\t\t\t\"fin\": {\"official\": \"It\\u00e4-Timorin demokraattinen tasavalta\", \"common\": \"It\\u00e4-Timor\"}\n\t\t},\n\t\t\"latlng\": [-8.83333333, 125.91666666],\n\t\t\"demonym\": \"East Timorese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"IDN\"],\n\t\t\"area\": 14874\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tonga\",\n\t\t\t\"official\": \"Kingdom of Tonga\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Kingdom of Tonga\",\n\t\t\t\t\t\"common\": \"Tonga\"\n\t\t\t\t},\n\t\t\t\t\"ton\": {\n\t\t\t\t\t\"official\": \"Kingdom of Tonga\",\n\t\t\t\t\t\"common\": \"Tonga\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".to\"],\n\t\t\"cca2\": \"TO\",\n\t\t\"ccn3\": \"776\",\n\t\t\"cca3\": \"TON\",\n\t\t\"cioc\": \"TGA\",\n\t\t\"currency\": [\"TOP\"],\n\t\t\"callingCode\": [\"676\"],\n\t\t\"capital\": \"Nuku'alofa\",\n\t\t\"altSpellings\": [\"TO\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"ton\": \"Tongan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"K\\u00f6nigreich Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"fra\": {\"official\": \"Royaume des Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"hrv\": {\"official\": \"Kraljevina Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"ita\": {\"official\": \"Regno di Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30f3\\u30ac\\u738b\\u56fd\", \"common\": \"\\u30c8\\u30f3\\u30ac\"},\n\t\t\t\"nld\": {\"official\": \"Koninkrijk Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"por\": {\"official\": \"Reino de Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u043e\\u0440\\u043e\\u043b\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e \\u0422\\u043e\\u043d\\u0433\\u0430\", \"common\": \"\\u0422\\u043e\\u043d\\u0433\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Reino de Tonga\", \"common\": \"Tonga\"},\n\t\t\t\"fin\": {\"official\": \"Tongan kuningaskunta\", \"common\": \"Tonga\"}\n\t\t},\n\t\t\"latlng\": [-20, -175],\n\t\t\"demonym\": \"Tongan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 747\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Trinidad and Tobago\",\n\t\t\t\"official\": \"Republic of Trinidad and Tobago\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Trinidad and Tobago\",\n\t\t\t\t\t\"common\": \"Trinidad and Tobago\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tt\"],\n\t\t\"cca2\": \"TT\",\n\t\t\"ccn3\": \"780\",\n\t\t\"cca3\": \"TTO\",\n\t\t\"cioc\": \"TTO\",\n\t\t\"currency\": [\"TTD\"],\n\t\t\"callingCode\": [\"1868\"],\n\t\t\"capital\": \"Port of Spain\",\n\t\t\"altSpellings\": [\"TT\", \"Republic of Trinidad and Tobago\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Trinidad und Tobago\", \"common\": \"Trinidad und Tobago\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Trinit\\u00e9-et-Tobago\", \"common\": \"Trinit\\u00e9-et-Tobago\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Trinidad i Tobago\", \"common\": \"Trinidad i Tobago\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Trinidad e Tobago\", \"common\": \"Trinidad e Tobago\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30ea\\u30cb\\u30c0\\u30fc\\u30c9\\u00b7\\u30c8\\u30d0\\u30b4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c8\\u30ea\\u30cb\\u30c0\\u30fc\\u30c9\\u30fb\\u30c8\\u30d0\\u30b4\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Trinidad en Tobago\", \"common\": \"Trinidad en Tobago\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Trinidad e Tobago\", \"common\": \"Trinidade e Tobago\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0440\\u0438\\u043d\\u0438\\u0434\\u0430\\u0434 \\u0438 \\u0422\\u043e\\u0431\\u0430\\u0433\\u043e\", \"common\": \"\\u0422\\u0440\\u0438\\u043d\\u0438\\u0434\\u0430\\u0434 \\u0438 \\u0422\\u043e\\u0431\\u0430\\u0433\\u043e\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Trinidad y Tobago\", \"common\": \"Trinidad y Tobago\"},\n\t\t\t\"fin\": {\"official\": \"Trinidadin ja Tobagon tasavalta\", \"common\": \"Trinidad ja Tobago\"}\n\t\t},\n\t\t\"latlng\": [11, -61],\n\t\t\"demonym\": \"Trinidadian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 5130\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tunisia\",\n\t\t\t\"official\": \"Tunisian Republic\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u062a\\u0648\\u0646\\u0633\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u062a\\u0648\\u0646\\u0633\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tn\"],\n\t\t\"cca2\": \"TN\",\n\t\t\"ccn3\": \"788\",\n\t\t\"cca3\": \"TUN\",\n\t\t\"cioc\": \"TUN\",\n\t\t\"currency\": [\"TND\"],\n\t\t\"callingCode\": [\"216\"],\n\t\t\"capital\": \"Tunis\",\n\t\t\"altSpellings\": [\"TN\", \"Republic of Tunisia\", \"al-Jumh\\u016briyyah at-T\\u016bnisiyyah\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Northern Africa\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Tunesische Republik\", \"common\": \"Tunesien\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique tunisienne\", \"common\": \"Tunisie\"},\n\t\t\t\"hrv\": {\"official\": \"Tuniski Republika\", \"common\": \"Tunis\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica tunisina\", \"common\": \"Tunisia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c1\\u30e5\\u30cb\\u30b8\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c1\\u30e5\\u30cb\\u30b8\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Tunesi\\u00eb\", \"common\": \"Tunesi\\u00eb\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Tun\\u00edsia\", \"common\": \"Tun\\u00edsia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0443\\u043d\\u0438\\u0441\\u0441\\u043a\\u043e\\u0439 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0438\", \"common\": \"\\u0422\\u0443\\u043d\\u0438\\u0441\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de T\\u00fanez\", \"common\": \"T\\u00fanez\"},\n\t\t\t\"fin\": {\"official\": \"Tunisian tasavalta\", \"common\": \"Tunisia\"}\n\t\t},\n\t\t\"latlng\": [34, 9],\n\t\t\"demonym\": \"Tunisian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"DZA\", \"LBY\"],\n\t\t\"area\": 163610\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Turkey\",\n\t\t\t\"official\": \"Republic of Turkey\",\n\t\t\t\"native\": {\n\t\t\t\t\"tur\": {\n\t\t\t\t\t\"official\": \"T\\u00fcrkiye Cumhuriyeti\",\n\t\t\t\t\t\"common\": \"T\\u00fcrkiye\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tr\"],\n\t\t\"cca2\": \"TR\",\n\t\t\"ccn3\": \"792\",\n\t\t\"cca3\": \"TUR\",\n\t\t\"cioc\": \"TUR\",\n\t\t\"currency\": [\"TRY\"],\n\t\t\"callingCode\": [\"90\"],\n\t\t\"capital\": \"Ankara\",\n\t\t\"altSpellings\": [\"TR\", \"Turkiye\", \"Republic of Turkey\", \"T\\u00fcrkiye Cumhuriyeti\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"tur\": \"Turkish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik T\\u00fcrkei\", \"common\": \"T\\u00fcrkei\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Turquie\", \"common\": \"Turquie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Turska\", \"common\": \"Turska\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Turchia\", \"common\": \"Turchia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c8\\u30eb\\u30b3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30c8\\u30eb\\u30b3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Turkije\", \"common\": \"Turkije\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Turquia\", \"common\": \"Turquia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0443\\u0440\\u0446\\u0438\\u0438\", \"common\": \"\\u0422\\u0443\\u0440\\u0446\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Turqu\\u00eda\", \"common\": \"Turqu\\u00eda\"},\n\t\t\t\"fin\": {\"official\": \"Turkin tasavalta\", \"common\": \"Turkki\"}\n\t\t},\n\t\t\"latlng\": [39, 35],\n\t\t\"demonym\": \"Turkish\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ARM\", \"AZE\", \"BGR\", \"GEO\", \"GRC\", \"IRN\", \"IRQ\", \"SYR\"],\n\t\t\"area\": 783562\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tuvalu\",\n\t\t\t\"official\": \"Tuvalu\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Tuvalu\",\n\t\t\t\t\t\"common\": \"Tuvalu\"\n\t\t\t\t},\n\t\t\t\t\"tvl\": {\n\t\t\t\t\t\"official\": \"Tuvalu\",\n\t\t\t\t\t\"common\": \"Tuvalu\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tv\"],\n\t\t\"cca2\": \"TV\",\n\t\t\"ccn3\": \"798\",\n\t\t\"cca3\": \"TUV\",\n\t\t\"cioc\": \"TUV\",\n\t\t\"currency\": [\"AUD\"],\n\t\t\"callingCode\": [\"688\"],\n\t\t\"capital\": \"Funafuti\",\n\t\t\"altSpellings\": [\"TV\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"tvl\": \"Tuvaluan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"fra\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"hrv\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"ita\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30c4\\u30d0\\u30eb\", \"common\": \"\\u30c4\\u30d0\\u30eb\"},\n\t\t\t\"nld\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"por\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0443\\u0432\\u0430\\u043b\\u0443\", \"common\": \"\\u0422\\u0443\\u0432\\u0430\\u043b\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"},\n\t\t\t\"fin\": {\"official\": \"Tuvalu\", \"common\": \"Tuvalu\"}\n\t\t},\n\t\t\"latlng\": [-8, 178],\n\t\t\"demonym\": \"Tuvaluan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 26\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Taiwan\",\n\t\t\t\"official\": \"Republic of China (Taiwan)\",\n\t\t\t\"native\": {\n\t\t\t\t\"cmn\": {\n\t\t\t\t\t\"official\": \"\\u4e2d\\u534e\\u6c11\\u56fd\",\n\t\t\t\t\t\"common\": \"\\u81fa\\u7063\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tw\", \".\\u53f0\\u6e7e\", \".\\u53f0\\u7063\"],\n\t\t\"cca2\": \"TW\",\n\t\t\"ccn3\": \"158\",\n\t\t\"cca3\": \"TWN\",\n\t\t\"cioc\": \"TPE\",\n\t\t\"currency\": [\"TWD\"],\n\t\t\"callingCode\": [\"886\"],\n\t\t\"capital\": \"Taipei\",\n\t\t\"altSpellings\": [\"TW\", \"T\\u00e1iw\\u0101n\", \"Republic of China\", \"\\u4e2d\\u83ef\\u6c11\\u570b\", \"Zh\\u014dnghu\\u00e1 M\\u00edngu\\u00f3\", \"Chinese Taipei for IOC\", \"Taiwan, Province of China\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"cmn\": \"Mandarin\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik China (Taiwan)\", \"common\": \"Taiwan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Chine (Ta\\u00efwan)\", \"common\": \"Ta\\u00efwan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Kina\", \"common\": \"Tajvan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica cinese (Taiwan)\", \"common\": \"Taiwan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u4e2d\\u83ef\\u6c11\\u56fd\", \"common\": \"\\u53f0\\u6e7e\\uff08\\u53f0\\u6e7e\\u7701/\\u4e2d\\u83ef\\u6c11\\u56fd\\uff09\"},\n\t\t\t\"nld\": {\"official\": \"Republiek China (Taiwan)\", \"common\": \"Taiwan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da China\", \"common\": \"Ilha Formosa\"},\n\t\t\t\"rus\": {\"official\": \"\\u041a\\u0438\\u0442\\u0430\\u0439\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0422\\u0430\\u0439\\u0432\\u0430\\u043d\\u044c\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de China en Taiw\\u00e1n\", \"common\": \"Taiw\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Kiinan tasavalta\", \"common\": \"Taiwan\"}\n\t\t},\n\t\t\"latlng\": [23.5, 121],\n\t\t\"demonym\": \"Taiwanese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 36193\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Tanzania\",\n\t\t\t\"official\": \"United Republic of Tanzania\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"United Republic of Tanzania\",\n\t\t\t\t\t\"common\": \"Tanzania\"\n\t\t\t\t},\n\t\t\t\t\"swa\": {\n\t\t\t\t\t\"official\": \"Jamhuri ya Muungano wa Tanzania\",\n\t\t\t\t\t\"common\": \"Tanzania\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".tz\"],\n\t\t\"cca2\": \"TZ\",\n\t\t\"ccn3\": \"834\",\n\t\t\"cca3\": \"TZA\",\n\t\t\"cioc\": \"TAN\",\n\t\t\"currency\": [\"TZS\"],\n\t\t\"callingCode\": [\"255\"],\n\t\t\"capital\": \"Dodoma\",\n\t\t\"altSpellings\": [\"TZ\", \"Tanzania, United Republic of\", \"United Republic of Tanzania\", \"Jamhuri ya Muungano wa Tanzania\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"swa\": \"Swahili\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vereinigte Republik Tansania\", \"common\": \"Tansania\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique -Unie de Tanzanie\", \"common\": \"Tanzanie\"},\n\t\t\t\"hrv\": {\"official\": \"Ujedinjena Republika Tanzanija\", \"common\": \"Tanzanija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Unita di Tanzania\", \"common\": \"Tanzania\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bf\\u30f3\\u30b6\\u30cb\\u30a2\\u9023\\u5408\\u5171\\u548c\\u56fd\", \"common\": \"\\u30bf\\u30f3\\u30b6\\u30cb\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Verenigde Republiek Tanzania\", \"common\": \"Tanzania\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Unida da Tanz\\u00e2nia\", \"common\": \"Tanz\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u041e\\u0431\\u044a\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0422\\u0430\\u043d\\u0437\\u0430\\u043d\\u0438\\u044f\", \"common\": \"\\u0422\\u0430\\u043d\\u0437\\u0430\\u043d\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Unida de Tanzania\", \"common\": \"Tanzania\"},\n\t\t\t\"fin\": {\"official\": \"Tansanian yhdistynyt tasavalta\", \"common\": \"Tansania\"}\n\t\t},\n\t\t\"latlng\": [-6, 35],\n\t\t\"demonym\": \"Tanzanian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BDI\", \"COD\", \"KEN\", \"MWI\", \"MOZ\", \"RWA\", \"UGA\", \"ZMB\"],\n\t\t\"area\": 945087\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Uganda\",\n\t\t\t\"official\": \"Republic of Uganda\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Uganda\",\n\t\t\t\t\t\"common\": \"Uganda\"\n\t\t\t\t},\n\t\t\t\t\"swa\": {\n\t\t\t\t\t\"official\": \"Republic of Uganda\",\n\t\t\t\t\t\"common\": \"Uganda\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ug\"],\n\t\t\"cca2\": \"UG\",\n\t\t\"ccn3\": \"800\",\n\t\t\"cca3\": \"UGA\",\n\t\t\"cioc\": \"UGA\",\n\t\t\"currency\": [\"UGX\"],\n\t\t\"callingCode\": [\"256\"],\n\t\t\"capital\": \"Kampala\",\n\t\t\"altSpellings\": [\"UG\", \"Republic of Uganda\", \"Jamhuri ya Uganda\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"swa\": \"Swahili\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Uganda\", \"common\": \"Uganda\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de l'Ouganda\", \"common\": \"Ouganda\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Uganda\", \"common\": \"Uganda\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Uganda\", \"common\": \"Uganda\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a6\\u30ac\\u30f3\\u30c0\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a6\\u30ac\\u30f3\\u30c0\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Uganda\", \"common\": \"Oeganda\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Uganda\", \"common\": \"Uganda\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0423\\u0433\\u0430\\u043d\\u0434\\u0430\", \"common\": \"\\u0423\\u0433\\u0430\\u043d\\u0434\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Uganda\", \"common\": \"Uganda\"},\n\t\t\t\"fin\": {\"official\": \"Ugandan tasavalta\", \"common\": \"Uganda\"}\n\t\t},\n\t\t\"latlng\": [1, 32],\n\t\t\"demonym\": \"Ugandan\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"COD\", \"KEN\", \"RWA\", \"SSD\", \"TZA\"],\n\t\t\"area\": 241550\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Ukraine\",\n\t\t\t\"official\": \"Ukraine\",\n\t\t\t\"native\": {\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0423\\u043a\\u0440\\u0430\\u0438\\u043d\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0423\\u043a\\u0440\\u0430\\u0438\\u043d\\u0430\"\n\t\t\t\t},\n\t\t\t\t\"ukr\": {\n\t\t\t\t\t\"official\": \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0430\",\n\t\t\t\t\t\"common\": \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0430\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ua\", \".\\u0443\\u043a\\u0440\"],\n\t\t\"cca2\": \"UA\",\n\t\t\"ccn3\": \"804\",\n\t\t\"cca3\": \"UKR\",\n\t\t\"cioc\": \"UKR\",\n\t\t\"currency\": [\"UAH\"],\n\t\t\"callingCode\": [\"380\"],\n\t\t\"capital\": \"Kiev\",\n\t\t\"altSpellings\": [\"UA\", \"Ukrayina\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Eastern Europe\",\n\t\t\"languages\": {\n\t\t\t\"rus\": \"Russian\",\n\t\t\t\"ukr\": \"Ukrainian\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Ukraine\", \"common\": \"Ukraine\"},\n\t\t\t\"fra\": {\"official\": \"Ukraine\", \"common\": \"Ukraine\"},\n\t\t\t\"hrv\": {\"official\": \"Ukrajina\", \"common\": \"Ukrajina\"},\n\t\t\t\"ita\": {\"official\": \"Ucraina\", \"common\": \"Ucraina\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a6\\u30af\\u30e9\\u30a4\\u30ca\", \"common\": \"\\u30a6\\u30af\\u30e9\\u30a4\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Oekra\\u00efne\", \"common\": \"Oekra\\u00efne\"},\n\t\t\t\"por\": {\"official\": \"Ucr\\u00e2nia\", \"common\": \"Ucr\\u00e2nia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0423\\u043a\\u0440\\u0430\\u0438\\u043d\\u0430\", \"common\": \"\\u0423\\u043a\\u0440\\u0430\\u0438\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Ucrania\", \"common\": \"Ucrania\"},\n\t\t\t\"fin\": {\"official\": \"Ukraina\", \"common\": \"Ukraina\"}\n\t\t},\n\t\t\"latlng\": [49, 32],\n\t\t\"demonym\": \"Ukrainian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BLR\", \"HUN\", \"MDA\", \"POL\", \"ROU\", \"RUS\", \"SVK\"],\n\t\t\"area\": 603500\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"United States Minor Outlying Islands\",\n\t\t\t\"official\": \"United States Minor Outlying Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"United States Minor Outlying Islands\",\n\t\t\t\t\t\"common\": \"United States Minor Outlying Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".us\"],\n\t\t\"cca2\": \"UM\",\n\t\t\"ccn3\": \"581\",\n\t\t\"cca3\": \"UMI\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [],\n\t\t\"capital\": \"\",\n\t\t\"altSpellings\": [\"UM\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"USA, kleinere ausgelagerte Inseln\", \"common\": \"Kleinere Inselbesitzungen der Vereinigten Staaten\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes mineures \\u00e9loign\\u00e9es des \\u00c9tats-Unis\", \"common\": \"\\u00celes mineures \\u00e9loign\\u00e9es des \\u00c9tats-Unis\"},\n\t\t\t\"hrv\": {\"official\": \"Mali udaljeni otoci SAD-a\", \"common\": \"Mali udaljeni otoci SAD-a\"},\n\t\t\t\"ita\": {\"official\": \"Stati Uniti Isole Minori\", \"common\": \"Isole minori esterne degli Stati Uniti d'America\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30e1\\u30ea\\u30ab\\u5408\\u8846\\u56fd\\u5916\\u8af8\\u5cf6\", \"common\": \"\\u5408\\u8846\\u56fd\\u9818\\u6709\\u5c0f\\u96e2\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Kleine afgelegen eilanden van de Verenigde Staten\", \"common\": \"Kleine afgelegen eilanden van de Verenigde Staten\"},\n\t\t\t\"por\": {\"official\": \"Estados Unidos Ilhas Menores Distantes\", \"common\": \"Ilhas Menores Distantes dos Estados Unidos\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u043c\\u0430\\u043b\\u044b\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u0421\\u0428\\u0410\", \"common\": \"\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u043c\\u0430\\u043b\\u044b\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u0421\\u0428\\u0410\"},\n\t\t\t\"spa\": {\"official\": \"Estados Unidos Islas menores alejadas de\", \"common\": \"Islas Ultramarinas Menores de Estados Unidos\"},\n\t\t\t\"fin\": {\"official\": \"Yhdysvaltain asumattomat saaret\", \"common\": \"Yhdysvaltain asumattomat saaret\"}\n\t\t},\n\t\t\"latlng\": [],\n\t\t\"demonym\": \"American\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 34.2\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Uruguay\",\n\t\t\t\"official\": \"Oriental Republic of Uruguay\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Oriental del Uruguay\",\n\t\t\t\t\t\"common\": \"Uruguay\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".uy\"],\n\t\t\"cca2\": \"UY\",\n\t\t\"ccn3\": \"858\",\n\t\t\"cca3\": \"URY\",\n\t\t\"cioc\": \"URU\",\n\t\t\"currency\": [\"UYI\", \"UYU\"],\n\t\t\"callingCode\": [\"598\"],\n\t\t\"capital\": \"Montevideo\",\n\t\t\"altSpellings\": [\"UY\", \"Oriental Republic of Uruguay\", \"Rep\\u00fablica Oriental del Uruguay\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik \\u00d6stlich des Uruguay\", \"common\": \"Uruguay\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique orientale de l'Uruguay\", \"common\": \"Uruguay\"},\n\t\t\t\"hrv\": {\"official\": \"Orijentalna Republika Urugvaj\", \"common\": \"Urugvaj\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Orientale dell'Uruguay\", \"common\": \"Uruguay\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a6\\u30eb\\u30b0\\u30a2\\u30a4\\u6771\\u65b9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a6\\u30eb\\u30b0\\u30a2\\u30a4\"},\n\t\t\t\"nld\": {\"official\": \"Oosterse Republiek Uruguay\", \"common\": \"Uruguay\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Oriental do Uruguai\", \"common\": \"Uruguai\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u043e\\u0441\\u0442\\u043e\\u0447\\u043d\\u043e\\u0439 \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0438 \\u0423\\u0440\\u0443\\u0433\\u0432\\u0430\\u0439\", \"common\": \"\\u0423\\u0440\\u0443\\u0433\\u0432\\u0430\\u0439\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Oriental del Uruguay\", \"common\": \"Uruguay\"},\n\t\t\t\"fin\": {\"official\": \"Uruguayn it\\u00e4inen tasavalta\", \"common\": \"Uruguay\"}\n\t\t},\n\t\t\"latlng\": [-33, -56],\n\t\t\"demonym\": \"Uruguayan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"ARG\", \"BRA\"],\n\t\t\"area\": 181034\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"United States\",\n\t\t\t\"official\": \"United States of America\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"United States of America\",\n\t\t\t\t\t\"common\": \"United States\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".us\"],\n\t\t\"cca2\": \"US\",\n\t\t\"ccn3\": \"840\",\n\t\t\"cca3\": \"USA\",\n\t\t\"cioc\": \"USA\",\n\t\t\"currency\": [\"USD\", \"USN\", \"USS\"],\n\t\t\"callingCode\": [\"1\"],\n\t\t\"capital\": \"Washington D.C.\",\n\t\t\"altSpellings\": [\"US\", \"USA\", \"United States of America\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Northern America\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vereinigte Staaten von Amerika\", \"common\": \"Vereinigte Staaten von Amerika\"},\n\t\t\t\"fra\": {\"official\": \"Les \\u00e9tats-unis d'Am\\u00e9rique\", \"common\": \"\\u00c9tats-Unis\"},\n\t\t\t\"hrv\": {\"official\": \"Sjedinjene Dr\\u017eave Amerike\", \"common\": \"Sjedinjene Ameri\\u010dke Dr\\u017eave\"},\n\t\t\t\"ita\": {\"official\": \"Stati Uniti d'America\", \"common\": \"Stati Uniti d'America\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a2\\u30e1\\u30ea\\u30ab\\u5408\\u8846\\u56fd\", \"common\": \"\\u30a2\\u30e1\\u30ea\\u30ab\\u5408\\u8846\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Verenigde Staten van Amerika\", \"common\": \"Verenigde Staten\"},\n\t\t\t\"por\": {\"official\": \"Estados Unidos da Am\\u00e9rica\", \"common\": \"Estados Unidos\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0428\\u0442\\u0430\\u0442\\u044b \\u0410\\u043c\\u0435\\u0440\\u0438\\u043a\\u0438\", \"common\": \"\\u0421\\u043e\\u0435\\u0434\\u0438\\u043d\\u0451\\u043d\\u043d\\u044b\\u0435 \\u0428\\u0442\\u0430\\u0442\\u044b \\u0410\\u043c\\u0435\\u0440\\u0438\\u043a\\u0438\"},\n\t\t\t\"spa\": {\"official\": \"Estados Unidos de Am\\u00e9rica\", \"common\": \"Estados Unidos\"},\n\t\t\t\"fin\": {\"official\": \"Amerikan yhdysvallat\", \"common\": \"Yhdysvallat\"}\n\t\t},\n\t\t\"latlng\": [38, -97],\n\t\t\"demonym\": \"American\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"CAN\", \"MEX\"],\n\t\t\"area\": 9372610\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Uzbekistan\",\n\t\t\t\"official\": \"Republic of Uzbekistan\",\n\t\t\t\"native\": {\n\t\t\t\t\"rus\": {\n\t\t\t\t\t\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0423\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\",\n\t\t\t\t\t\"common\": \"\\u0423\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\"\n\t\t\t\t},\n\t\t\t\t\"uzb\": {\n\t\t\t\t\t\"official\": \"O'zbekiston Respublikasi\",\n\t\t\t\t\t\"common\": \"O\\u2018zbekiston\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".uz\"],\n\t\t\"cca2\": \"UZ\",\n\t\t\"ccn3\": \"860\",\n\t\t\"cca3\": \"UZB\",\n\t\t\"cioc\": \"UZB\",\n\t\t\"currency\": [\"UZS\"],\n\t\t\"callingCode\": [\"998\"],\n\t\t\"capital\": \"Tashkent\",\n\t\t\"altSpellings\": [\"UZ\", \"Republic of Uzbekistan\", \"O\\u2018zbekiston Respublikasi\", \"\\u040e\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u043e\\u043d \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\\u0441\\u0438\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Central Asia\",\n\t\t\"languages\": {\n\t\t\t\"rus\": \"Russian\",\n\t\t\t\"uzb\": \"Uzbek\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Usbekistan\", \"common\": \"Usbekistan\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Ouzb\\u00e9kistan\", \"common\": \"Ouzb\\u00e9kistan\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Uzbekistan\", \"common\": \"Uzbekistan\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Uzbekistan\", \"common\": \"Uzbekistan\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a6\\u30ba\\u30d9\\u30ad\\u30b9\\u30bf\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a6\\u30ba\\u30d9\\u30ad\\u30b9\\u30bf\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Oezbekistan\", \"common\": \"Oezbekistan\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Usbequist\\u00e3o\", \"common\": \"Uzbequist\\u00e3o\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0423\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\", \"common\": \"\\u0423\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Uzbekist\\u00e1n\", \"common\": \"Uzbekist\\u00e1n\"},\n\t\t\t\"fin\": {\"official\": \"Uzbekistanin tasavalta\", \"common\": \"Uzbekistan\"}\n\t\t},\n\t\t\"latlng\": [41, 64],\n\t\t\"demonym\": \"Uzbekistani\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AFG\", \"KAZ\", \"KGZ\", \"TJK\", \"TKM\"],\n\t\t\"area\": 447400\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Vatican City\",\n\t\t\t\"official\": \"Vatican City State\",\n\t\t\t\"native\": {\n\t\t\t\t\"ita\": {\n\t\t\t\t\t\"official\": \"Stato della Citt\\u00e0 del Vaticano\",\n\t\t\t\t\t\"common\": \"Vaticano\"\n\t\t\t\t},\n\t\t\t\t\"lat\": {\n\t\t\t\t\t\"official\": \"Status Civitatis Vatican\\u00e6\",\n\t\t\t\t\t\"common\": \"Vatican\\u00e6\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".va\"],\n\t\t\"cca2\": \"VA\",\n\t\t\"ccn3\": \"336\",\n\t\t\"cca3\": \"VAT\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"EUR\"],\n\t\t\"callingCode\": [\"3906698\", \"379\"],\n\t\t\"capital\": \"Vatican City\",\n\t\t\"altSpellings\": [\"VA\", \"Holy See (Vatican City State)\", \"Vatican City State\", \"Stato della Citt\\u00e0 del Vaticano\"],\n\t\t\"region\": \"Europe\",\n\t\t\"subregion\": \"Southern Europe\",\n\t\t\"languages\": {\n\t\t\t\"ita\": \"Italian\",\n\t\t\t\"lat\": \"Latin\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Staat Vatikanstadt\", \"common\": \"Vatikanstadt\"},\n\t\t\t\"fra\": {\"official\": \"Cit\\u00e9 du Vatican\", \"common\": \"Cit\\u00e9 du Vatican\"},\n\t\t\t\"hrv\": {\"official\": \"Vatikan\", \"common\": \"Vatikan\"},\n\t\t\t\"ita\": {\"official\": \"Citt\\u00e0 del Vaticano\", \"common\": \"Citt\\u00e0 del Vaticano\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30c1\\u30ab\\u30f3\\u5e02\\u56fd\\u306e\\u72b6\\u614b\", \"common\": \"\\u30d0\\u30c1\\u30ab\\u30f3\\u5e02\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Vaticaanstad\", \"common\": \"Vaticaanstad\"},\n\t\t\t\"por\": {\"official\": \"Cidade do Vaticano\", \"common\": \"Cidade do Vaticano\"},\n\t\t\t\"rus\": {\"official\": \"\\u0413\\u043e\\u0440\\u043e\\u0434-\\u0433\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u0412\\u0430\\u0442\\u0438\\u043a\\u0430\\u043d\", \"common\": \"\\u0412\\u0430\\u0442\\u0438\\u043a\\u0430\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Ciudad del Vaticano\", \"common\": \"Ciudad del Vaticano\"},\n\t\t\t\"fin\": {\"official\": \"Vatikaanin kaupunkivaltio\", \"common\": \"Vatikaani\"}\n\t\t},\n\t\t\"latlng\": [41.9, 12.45],\n\t\t\"demonym\": \"Italian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"ITA\"],\n\t\t\"area\": 0.44\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Saint Vincent and the Grenadines\",\n\t\t\t\"official\": \"Saint Vincent and the Grenadines\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Saint Vincent and the Grenadines\",\n\t\t\t\t\t\"common\": \"Saint Vincent and the Grenadines\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".vc\"],\n\t\t\"cca2\": \"VC\",\n\t\t\"ccn3\": \"670\",\n\t\t\"cca3\": \"VCT\",\n\t\t\"cioc\": \"VIN\",\n\t\t\"currency\": [\"XCD\"],\n\t\t\"callingCode\": [\"1784\"],\n\t\t\"capital\": \"Kingstown\",\n\t\t\"altSpellings\": [\"VC\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"St. Vincent und die Grenadinen\", \"common\": \"Saint Vincent und die Grenadinen\"},\n\t\t\t\"fra\": {\"official\": \"Saint-Vincent-et-les Grenadines\", \"common\": \"Saint-Vincent-et-les-Grenadines\"},\n\t\t\t\"hrv\": {\"official\": \"Sveti Vincent i Grenadini\", \"common\": \"Sveti Vincent i Grenadini\"},\n\t\t\t\"ita\": {\"official\": \"Saint Vincent e Grenadine\", \"common\": \"Saint Vincent e Grenadine\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30bb\\u30f3\\u30c8\\u30d3\\u30f3\\u30bb\\u30f3\\u30c8\\u304a\\u3088\\u3073\\u30b0\\u30ec\\u30ca\\u30c7\\u30a3\\u30fc\\u30f3\\u8af8\\u5cf6\", \"common\": \"\\u30bb\\u30f3\\u30c8\\u30d3\\u30f3\\u30bb\\u30f3\\u30c8\\u304a\\u3088\\u3073\\u30b0\\u30ec\\u30ca\\u30c7\\u30a3\\u30fc\\u30f3\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Saint Vincent en de Grenadines\", \"common\": \"Saint Vincent en de Grenadines\"},\n\t\t\t\"por\": {\"official\": \"S\\u00e3o Vicente e Granadinas\", \"common\": \"S\\u00e3o Vincente e Granadinas\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u0435\\u043d\\u0442-\\u0412\\u0438\\u043d\\u0441\\u0435\\u043d\\u0442 \\u0438 \\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0438\\u043d\\u044b\", \"common\": \"\\u0421\\u0435\\u043d\\u0442-\\u0412\\u0438\\u043d\\u0441\\u0435\\u043d\\u0442 \\u0438 \\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0438\\u043d\\u044b\"},\n\t\t\t\"spa\": {\"official\": \"San Vicente y las Granadinas\", \"common\": \"San Vicente y Granadinas\"},\n\t\t\t\"fin\": {\"official\": \"Saint Vincent ja Grenadiinit\", \"common\": \"Saint Vincent ja Grenadiinit\"}\n\t\t},\n\t\t\"latlng\": [13.25, -61.2],\n\t\t\"demonym\": \"Saint Vincentian\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 389\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Venezuela\",\n\t\t\t\"official\": \"Bolivarian Republic of Venezuela\",\n\t\t\t\"native\": {\n\t\t\t\t\"spa\": {\n\t\t\t\t\t\"official\": \"Rep\\u00fablica Bolivariana de Venezuela\",\n\t\t\t\t\t\"common\": \"Venezuela\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ve\"],\n\t\t\"cca2\": \"VE\",\n\t\t\"ccn3\": \"862\",\n\t\t\"cca3\": \"VEN\",\n\t\t\"cioc\": \"VEN\",\n\t\t\"currency\": [\"VEF\"],\n\t\t\"callingCode\": [\"58\"],\n\t\t\"capital\": \"Caracas\",\n\t\t\"altSpellings\": [\"VE\", \"Bolivarian Republic of Venezuela\", \"Venezuela, Bolivarian Republic of\", \"Rep\\u00fablica Bolivariana de Venezuela\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"South America\",\n\t\t\"languages\": {\n\t\t\t\"spa\": \"Spanish\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Bolivarische Republik Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique bolivarienne du Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"hrv\": {\"official\": \"BOLIVARIJANSKA Republika Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica Bolivariana del Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30cd\\u30ba\\u30a8\\u30e9\\u00b7\\u30dc\\u30ea\\u30d0\\u30eb\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d9\\u30cd\\u30ba\\u30a8\\u30e9\\u30fb\\u30dc\\u30ea\\u30d0\\u30eb\\u5171\\u548c\\u56fd\"},\n\t\t\t\"nld\": {\"official\": \"Bolivariaanse Republiek Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Bolivariana da Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"rus\": {\"official\": \"\\u0411\\u043e\\u043b\\u0438\\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0412\\u0435\\u043d\\u0435\\u0441\\u0443\\u044d\\u043b\\u0430\", \"common\": \"\\u0412\\u0435\\u043d\\u0435\\u0441\\u0443\\u044d\\u043b\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Bolivariana de Venezuela\", \"common\": \"Venezuela\"},\n\t\t\t\"fin\": {\"official\": \"Venezuelan bolivariaainen tasavalta\", \"common\": \"Venezuela\"}\n\t\t},\n\t\t\"latlng\": [8, -66],\n\t\t\"demonym\": \"Venezuelan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BRA\", \"COL\", \"GUY\"],\n\t\t\"area\": 916445\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"British Virgin Islands\",\n\t\t\t\"official\": \"Virgin Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Virgin Islands\",\n\t\t\t\t\t\"common\": \"British Virgin Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".vg\"],\n\t\t\"cca2\": \"VG\",\n\t\t\"ccn3\": \"092\",\n\t\t\"cca3\": \"VGB\",\n\t\t\"cioc\": \"IVB\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1284\"],\n\t\t\"capital\": \"Road Town\",\n\t\t\"altSpellings\": [\"VG\", \"Virgin Islands, British\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Jungferninseln\", \"common\": \"Britische Jungferninseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00eeles Vierges\", \"common\": \"\\u00celes Vierges britanniques\"},\n\t\t\t\"hrv\": {\"official\": \"Djevi\\u010danski Otoci\", \"common\": \"Britanski Djevi\\u010danski Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Vergini\", \"common\": \"Isole Vergini Britanniche\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30fc\\u30b8\\u30f3\\u8af8\\u5cf6\", \"common\": \"\\u30a4\\u30ae\\u30ea\\u30b9\\u9818\\u30f4\\u30a1\\u30fc\\u30b8\\u30f3\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Maagdeneilanden\", \"common\": \"Britse Maagdeneilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Virgens\", \"common\": \"Ilhas Virgens\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u0438\\u0440\\u0433\\u0438\\u043d\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0411\\u0440\\u0438\\u0442\\u0430\\u043d\\u0441\\u043a\\u0438\\u0435 \\u0412\\u0438\\u0440\\u0433\\u0438\\u043d\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas V\\u00edrgenes\", \"common\": \"Islas V\\u00edrgenes del Reino Unido\"},\n\t\t\t\"fin\": {\"official\": \"Brittil\\u00e4iset Neitsytsaaret\", \"common\": \"Neitsytsaaret\"}\n\t\t},\n\t\t\"latlng\": [18.431383, -64.62305],\n\t\t\"demonym\": \"Virgin Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 151\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"United States Virgin Islands\",\n\t\t\t\"official\": \"Virgin Islands of the United States\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Virgin Islands of the United States\",\n\t\t\t\t\t\"common\": \"United States Virgin Islands\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".vi\"],\n\t\t\"cca2\": \"VI\",\n\t\t\"ccn3\": \"850\",\n\t\t\"cca3\": \"VIR\",\n\t\t\"cioc\": \"ISV\",\n\t\t\"currency\": [\"USD\"],\n\t\t\"callingCode\": [\"1340\"],\n\t\t\"capital\": \"Charlotte Amalie\",\n\t\t\"altSpellings\": [\"VI\", \"Virgin Islands, U.S.\"],\n\t\t\"region\": \"Americas\",\n\t\t\"subregion\": \"Caribbean\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Jungferninseln der Vereinigten Staaten\", \"common\": \"Amerikanische Jungferninseln\"},\n\t\t\t\"fra\": {\"official\": \"\\u00celes Vierges des \\u00c9tats-Unis\", \"common\": \"\\u00celes Vierges des \\u00c9tats-Unis\"},\n\t\t\t\"hrv\": {\"official\": \"Djevi\\u010danski Otoci SAD\", \"common\": \"Ameri\\u010dki Djevi\\u010danski Otoci\"},\n\t\t\t\"ita\": {\"official\": \"Isole Vergini degli Stati Uniti\", \"common\": \"Isole Vergini americane\"},\n\t\t\t\"jpn\": {\"official\": \"\\u7c73\\u56fd\\u306e\\u30d0\\u30fc\\u30b8\\u30f3\\u8af8\\u5cf6\", \"common\": \"\\u30a2\\u30e1\\u30ea\\u30ab\\u9818\\u30f4\\u30a1\\u30fc\\u30b8\\u30f3\\u8af8\\u5cf6\"},\n\t\t\t\"nld\": {\"official\": \"Maagdeneilanden van de Verenigde Staten\", \"common\": \"Amerikaanse Maagdeneilanden\"},\n\t\t\t\"por\": {\"official\": \"Ilhas Virgens dos Estados Unidos\", \"common\": \"Ilhas Virgens dos Estados Unidos\"},\n\t\t\t\"rus\": {\"official\": \"\\u0412\\u0438\\u0440\\u0433\\u0438\\u043d\\u0441\\u043a\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430 \\u0421\\u043e\\u0435\\u0434\\u0438\\u043d\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0428\\u0442\\u0430\\u0442\\u043e\\u0432\", \"common\": \"\\u0412\\u0438\\u0440\\u0433\\u0438\\u043d\\u0441\\u043a\\u0438\\u0435 \\u041e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Islas V\\u00edrgenes de los Estados Unidos\", \"common\": \"Islas V\\u00edrgenes de los Estados Unidos\"},\n\t\t\t\"fin\": {\"official\": \"Yhdysvaltain Neitsytsaaret\", \"common\": \"Neitsytsaaret\"}\n\t\t},\n\t\t\"latlng\": [18.35, -64.933333],\n\t\t\"demonym\": \"Virgin Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 347\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Vietnam\",\n\t\t\t\"official\": \"Socialist Republic of Vietnam\",\n\t\t\t\"native\": {\n\t\t\t\t\"vie\": {\n\t\t\t\t\t\"official\": \"C\\u1ed9ng h\\u00f2a x\\u00e3 h\\u1ed9i ch\\u1ee7 ngh\\u0129a Vi\\u1ec7t Nam\",\n\t\t\t\t\t\"common\": \"Vi\\u1ec7t Nam\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".vn\"],\n\t\t\"cca2\": \"VN\",\n\t\t\"ccn3\": \"704\",\n\t\t\"cca3\": \"VNM\",\n\t\t\"cioc\": \"VIE\",\n\t\t\"currency\": [\"VND\"],\n\t\t\"callingCode\": [\"84\"],\n\t\t\"capital\": \"Hanoi\",\n\t\t\"altSpellings\": [\"VN\", \"Socialist Republic of Vietnam\", \"C\\u1ed9ng h\\u00f2a X\\u00e3 h\\u1ed9i ch\\u1ee7 ngh\\u0129a Vi\\u1ec7t Nam\", \"Viet Nam\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"South-Eastern Asia\",\n\t\t\"languages\": {\n\t\t\t\"vie\": \"Vietnamese\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Sozialistische Republik Vietnam\", \"common\": \"Vietnam\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique socialiste du Vi\\u00eat Nam\", \"common\": \"Vi\\u00eat Nam\"},\n\t\t\t\"hrv\": {\"official\": \"Socijalisti\\u010dka Republika Vijetnam\", \"common\": \"Vijetnam\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica socialista del Vietnam\", \"common\": \"Vietnam\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d9\\u30c8\\u30ca\\u30e0\\u793e\\u4f1a\\u4e3b\\u7fa9\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d9\\u30c8\\u30ca\\u30e0\"},\n\t\t\t\"nld\": {\"official\": \"Socialistische Republiek Vietnam\", \"common\": \"Vietnam\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica Socialista do Vietname\", \"common\": \"Vietname\"},\n\t\t\t\"rus\": {\"official\": \"\\u0421\\u043e\\u0446\\u0438\\u0430\\u043b\\u0438\\u0441\\u0442\\u0438\\u0447\\u0435\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0412\\u044c\\u0435\\u0442\\u043d\\u0430\\u043c\", \"common\": \"\\u0412\\u044c\\u0435\\u0442\\u043d\\u0430\\u043c\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica Socialista de Vietnam\", \"common\": \"Vietnam\"},\n\t\t\t\"fin\": {\"official\": \"Vietnamin sosialistinen tasavalta\", \"common\": \"Vietnam\"}\n\t\t},\n\t\t\"latlng\": [16.16666666, 107.83333333],\n\t\t\"demonym\": \"Vietnamese\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"KHM\", \"CHN\", \"LAO\"],\n\t\t\"area\": 331212\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Vanuatu\",\n\t\t\t\"official\": \"Republic of Vanuatu\",\n\t\t\t\"native\": {\n\t\t\t\t\"bis\": {\n\t\t\t\t\t\"official\": \"Ripablik blong Vanuatu\",\n\t\t\t\t\t\"common\": \"Vanuatu\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Vanuatu\",\n\t\t\t\t\t\"common\": \"Vanuatu\"\n\t\t\t\t},\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"R\\u00e9publique de Vanuatu\",\n\t\t\t\t\t\"common\": \"Vanuatu\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".vu\"],\n\t\t\"cca2\": \"VU\",\n\t\t\"ccn3\": \"548\",\n\t\t\"cca3\": \"VUT\",\n\t\t\"cioc\": \"VAN\",\n\t\t\"currency\": [\"VUV\"],\n\t\t\"callingCode\": [\"678\"],\n\t\t\"capital\": \"Port Vila\",\n\t\t\"altSpellings\": [\"VU\", \"Republic of Vanuatu\", \"Ripablik blong Vanuatu\", \"R\\u00e9publique de Vanuatu\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Melanesia\",\n\t\t\"languages\": {\n\t\t\t\"bis\": \"Bislama\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30d0\\u30cc\\u30a2\\u30c4\\u5171\\u548c\\u56fd\", \"common\": \"\\u30d0\\u30cc\\u30a2\\u30c4\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica de Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0412\\u0430\\u043d\\u0443\\u0430\\u0442\\u0443\", \"common\": \"\\u0412\\u0430\\u043d\\u0443\\u0430\\u0442\\u0443\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Vanuatu\", \"common\": \"Vanuatu\"},\n\t\t\t\"fin\": {\"official\": \"Vanuatun tasavalta\", \"common\": \"Vanuatu\"}\n\t\t},\n\t\t\"latlng\": [-16, 167],\n\t\t\"demonym\": \"Ni-Vanuatu\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 12189\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Wallis and Futuna\",\n\t\t\t\"official\": \"Territory of the Wallis and Futuna Islands\",\n\t\t\t\"native\": {\n\t\t\t\t\"fra\": {\n\t\t\t\t\t\"official\": \"Territoire des \\u00eeles Wallis et Futuna\",\n\t\t\t\t\t\"common\": \"Wallis et Futuna\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".wf\"],\n\t\t\"cca2\": \"WF\",\n\t\t\"ccn3\": \"876\",\n\t\t\"cca3\": \"WLF\",\n\t\t\"cioc\": \"\",\n\t\t\"currency\": [\"XPF\"],\n\t\t\"callingCode\": [\"681\"],\n\t\t\"capital\": \"Mata-Utu\",\n\t\t\"altSpellings\": [\"WF\", \"Territory of the Wallis and Futuna Islands\", \"Territoire des \\u00eeles Wallis et Futuna\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"fra\": \"French\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Gebiet der Wallis und Futuna\", \"common\": \"Wallis und Futuna\"},\n\t\t\t\"fra\": {\"official\": \"Territoire des \\u00eeles Wallis et Futuna\", \"common\": \"Wallis-et-Futuna\"},\n\t\t\t\"hrv\": {\"official\": \"Teritoriju Wallis i Futuna\", \"common\": \"Wallis i Fortuna\"},\n\t\t\t\"ita\": {\"official\": \"Territorio delle Isole Wallis e Futuna\", \"common\": \"Wallis e Futuna\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a6\\u30a9\\u30ea\\u30b9\\u00b7\\u30d5\\u30c4\\u30ca\\u8af8\\u5cf6\\u306e\\u9818\\u571f\", \"common\": \"\\u30a6\\u30a9\\u30ea\\u30b9\\u30fb\\u30d5\\u30c4\\u30ca\"},\n\t\t\t\"nld\": {\"official\": \"Grondgebied van de Wallis en Futuna\", \"common\": \"Wallis en Futuna\"},\n\t\t\t\"por\": {\"official\": \"Territ\\u00f3rio das Ilhas Wallis e Futuna\", \"common\": \"Wallis e Futuna\"},\n\t\t\t\"rus\": {\"official\": \"\\u0422\\u0435\\u0440\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u044f \\u0423\\u043e\\u043b\\u043b\\u0438\\u0441 \\u0438 \\u0424\\u0443\\u0442\\u0443\\u043d\\u0430 \\u043e\\u0441\\u0442\\u0440\\u043e\\u0432\\u0430\", \"common\": \"\\u0423\\u043e\\u043b\\u043b\\u0438\\u0441 \\u0438 \\u0424\\u0443\\u0442\\u0443\\u043d\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Territorio de las Islas Wallis y Futuna\", \"common\": \"Wallis y Futuna\"},\n\t\t\t\"fin\": {\"official\": \"Wallisin ja Futunan yhteis\\u00f6\", \"common\": \"Wallis ja Futuna\"}\n\t\t},\n\t\t\"latlng\": [-13.3, -176.2],\n\t\t\"demonym\": \"Wallis and Futuna Islander\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 142\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Samoa\",\n\t\t\t\"official\": \"Independent State of Samoa\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Independent State of Samoa\",\n\t\t\t\t\t\"common\": \"Samoa\"\n\t\t\t\t},\n\t\t\t\t\"smo\": {\n\t\t\t\t\t\"official\": \"Malo Sa\\u02bboloto Tuto\\u02bbatasi o S\\u0101moa\",\n\t\t\t\t\t\"common\": \"S\\u0101moa\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ws\"],\n\t\t\"cca2\": \"WS\",\n\t\t\"ccn3\": \"882\",\n\t\t\"cca3\": \"WSM\",\n\t\t\"cioc\": \"SAM\",\n\t\t\"currency\": [\"WST\"],\n\t\t\"callingCode\": [\"685\"],\n\t\t\"capital\": \"Apia\",\n\t\t\"altSpellings\": [\"WS\", \"Independent State of Samoa\", \"Malo Sa\\u02bboloto Tuto\\u02bbatasi o S\\u0101moa\"],\n\t\t\"region\": \"Oceania\",\n\t\t\"subregion\": \"Polynesia\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\",\n\t\t\t\"smo\": \"Samoan\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Unabh\\u00e4ngige Staat Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"fra\": {\"official\": \"Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"hrv\": {\"official\": \"Nezavisna Dr\\u017eava Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"ita\": {\"official\": \"Stato indipendente di Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b5\\u30e2\\u30a2\\u72ec\\u7acb\\u56fd\", \"common\": \"\\u30b5\\u30e2\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Onafhankelijke Staat Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"por\": {\"official\": \"Estado Independente de Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"rus\": {\"official\": \"\\u041d\\u0435\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e\\u0435 \\u0413\\u043e\\u0441\\u0443\\u0434\\u0430\\u0440\\u0441\\u0442\\u0432\\u043e \\u0421\\u0430\\u043c\\u043e\\u0430\", \"common\": \"\\u0421\\u0430\\u043c\\u043e\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Estado Independiente de Samoa\", \"common\": \"Samoa\"},\n\t\t\t\"fin\": {\"official\": \"Samoan itsen\\u00e4inen valtio\", \"common\": \"Samoa\"}\n\t\t},\n\t\t\"latlng\": [-13.58333333, -172.33333333],\n\t\t\"demonym\": \"Samoan\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [],\n\t\t\"area\": 2842\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Yemen\",\n\t\t\t\"official\": \"Republic of Yemen\",\n\t\t\t\"native\": {\n\t\t\t\t\"ara\": {\n\t\t\t\t\t\"official\": \"\\u0627\\u0644\\u062c\\u0645\\u0647\\u0648\\u0631\\u064a\\u0629 \\u0627\\u0644\\u064a\\u0645\\u0646\\u064a\\u0629\",\n\t\t\t\t\t\"common\": \"\\u0627\\u0644\\u064a\\u064e\\u0645\\u064e\\u0646\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".ye\"],\n\t\t\"cca2\": \"YE\",\n\t\t\"ccn3\": \"887\",\n\t\t\"cca3\": \"YEM\",\n\t\t\"cioc\": \"YEM\",\n\t\t\"currency\": [\"YER\"],\n\t\t\"callingCode\": [\"967\"],\n\t\t\"capital\": \"Sana'a\",\n\t\t\"altSpellings\": [\"YE\", \"Yemeni Republic\", \"al-Jumh\\u016briyyah al-Yamaniyyah\"],\n\t\t\"region\": \"Asia\",\n\t\t\"subregion\": \"Western Asia\",\n\t\t\"languages\": {\n\t\t\t\"ara\": \"Arabic\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Jemen\", \"common\": \"Jemen\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Y\\u00e9men\", \"common\": \"Y\\u00e9men\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Jemen\", \"common\": \"Jemen\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dello Yemen\", \"common\": \"Yemen\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30a4\\u30a8\\u30e1\\u30f3\\u5171\\u548c\\u56fd\", \"common\": \"\\u30a4\\u30a8\\u30e1\\u30f3\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Jemen\", \"common\": \"Jemen\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do I\\u00eamen\", \"common\": \"I\\u00e9men\"},\n\t\t\t\"rus\": {\"official\": \"\\u0419\\u0435\\u043c\\u0435\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u0419\\u0435\\u043c\\u0435\\u043d\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Yemen\", \"common\": \"Yemen\"},\n\t\t\t\"fin\": {\"official\": \"Jemenin tasavalta\", \"common\": \"Jemen\"}\n\t\t},\n\t\t\"latlng\": [15, 48],\n\t\t\"demonym\": \"Yemeni\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"OMN\", \"SAU\"],\n\t\t\"area\": 527968\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"South Africa\",\n\t\t\t\"official\": \"Republic of South Africa\",\n\t\t\t\"native\": {\n\t\t\t\t\"afr\": {\n\t\t\t\t\t\"official\": \"Republiek van Suid-Afrika\",\n\t\t\t\t\t\"common\": \"South Africa\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of South Africa\",\n\t\t\t\t\t\"common\": \"South Africa\"\n\t\t\t\t},\n\t\t\t\t\"nbl\": {\n\t\t\t\t\t\"official\": \"IRiphabliki yeSewula Afrika\",\n\t\t\t\t\t\"common\": \"Sewula Afrika\"\n\t\t\t\t},\n\t\t\t\t\"nso\": {\n\t\t\t\t\t\"official\": \"Rephaboliki ya Afrika-Borwa \",\n\t\t\t\t\t\"common\": \"Afrika-Borwa\"\n\t\t\t\t},\n\t\t\t\t\"sot\": {\n\t\t\t\t\t\"official\": \"Rephaboliki ya Afrika Borwa\",\n\t\t\t\t\t\"common\": \"Afrika Borwa\"\n\t\t\t\t},\n\t\t\t\t\"ssw\": {\n\t\t\t\t\t\"official\": \"IRiphabhulikhi yeNingizimu Afrika\",\n\t\t\t\t\t\"common\": \"Ningizimu Afrika\"\n\t\t\t\t},\n\t\t\t\t\"tsn\": {\n\t\t\t\t\t\"official\": \"Rephaboliki ya Aforika Borwa\",\n\t\t\t\t\t\"common\": \"Aforika Borwa\"\n\t\t\t\t},\n\t\t\t\t\"tso\": {\n\t\t\t\t\t\"official\": \"Riphabliki ra Afrika Dzonga\",\n\t\t\t\t\t\"common\": \"Afrika Dzonga\"\n\t\t\t\t},\n\t\t\t\t\"ven\": {\n\t\t\t\t\t\"official\": \"Riphabu\\u1e3diki ya Afurika Tshipembe\",\n\t\t\t\t\t\"common\": \"Afurika Tshipembe\"\n\t\t\t\t},\n\t\t\t\t\"xho\": {\n\t\t\t\t\t\"official\": \"IRiphabliki yaseMzantsi Afrika\",\n\t\t\t\t\t\"common\": \"Mzantsi Afrika\"\n\t\t\t\t},\n\t\t\t\t\"zul\": {\n\t\t\t\t\t\"official\": \"IRiphabliki yaseNingizimu Afrika\",\n\t\t\t\t\t\"common\": \"Ningizimu Afrika\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".za\"],\n\t\t\"cca2\": \"ZA\",\n\t\t\"ccn3\": \"710\",\n\t\t\"cca3\": \"ZAF\",\n\t\t\"cioc\": \"RSA\",\n\t\t\"currency\": [\"ZAR\"],\n\t\t\"callingCode\": [\"27\"],\n\t\t\"capital\": \"Pretoria\",\n\t\t\"altSpellings\": [\"ZA\", \"RSA\", \"Suid-Afrika\", \"Republic of South Africa\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Southern Africa\",\n\t\t\"languages\": {\n\t\t\t\"afr\": \"Afrikaans\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"nbl\": \"Southern Ndebele\",\n\t\t\t\"nso\": \"Northern Sotho\",\n\t\t\t\"sot\": \"Southern Sotho\",\n\t\t\t\"ssw\": \"Swazi\",\n\t\t\t\"tsn\": \"Tswana\",\n\t\t\t\"tso\": \"Tsonga\",\n\t\t\t\"ven\": \"Venda\",\n\t\t\t\"xho\": \"Xhosa\",\n\t\t\t\"zul\": \"Zulu\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik S\\u00fcdafrika\", \"common\": \"Republik S\\u00fcdafrika\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique d'Afrique du Sud\", \"common\": \"Afrique du Sud\"},\n\t\t\t\"hrv\": {\"official\": \"Ju\\u017enoafri\\u010dka Republika\", \"common\": \"Ju\\u017enoafri\\u010dka Republika\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica del Sud Africa\", \"common\": \"Sud Africa\"},\n\t\t\t\"jpn\": {\"official\": \"\\u5357\\u30a2\\u30d5\\u30ea\\u30ab\\u5171\\u548c\\u56fd\", \"common\": \"\\u5357\\u30a2\\u30d5\\u30ea\\u30ab\"},\n\t\t\t\"nld\": {\"official\": \"Zuid -Afrika\", \"common\": \"Zuid-Afrika\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da \\u00c1frica do Sul\", \"common\": \"\\u00c1frica do Sul\"},\n\t\t\t\"rus\": {\"official\": \"\\u042e\\u0436\\u043d\\u043e-\\u0410\\u0444\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\", \"common\": \"\\u042e\\u0436\\u043d\\u043e-\\u0410\\u0444\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Sud\\u00e1frica\", \"common\": \"Rep\\u00fablica de Sud\\u00e1frica\"},\n\t\t\t\"fin\": {\"official\": \"Etel\\u00e4-Afrikan tasavalta\", \"common\": \"Etel\\u00e4-Afrikka\"}\n\t\t},\n\t\t\"latlng\": [-29, 24],\n\t\t\"demonym\": \"South African\",\n\t\t\"landlocked\": false,\n\t\t\"borders\": [\"BWA\", \"LSO\", \"MOZ\", \"NAM\", \"SWZ\", \"ZWE\"],\n\t\t\"area\": 1221037\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Zambia\",\n\t\t\t\"official\": \"Republic of Zambia\",\n\t\t\t\"native\": {\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Zambia\",\n\t\t\t\t\t\"common\": \"Zambia\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".zm\"],\n\t\t\"cca2\": \"ZM\",\n\t\t\"ccn3\": \"894\",\n\t\t\"cca3\": \"ZMB\",\n\t\t\"cioc\": \"ZAM\",\n\t\t\"currency\": [\"ZMW\"],\n\t\t\"callingCode\": [\"260\"],\n\t\t\"capital\": \"Lusaka\",\n\t\t\"altSpellings\": [\"ZM\", \"Republic of Zambia\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"eng\": \"English\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Sambia\", \"common\": \"Sambia\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique de Zambie\", \"common\": \"Zambie\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Zambija\", \"common\": \"Zambija\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica di Zambia\", \"common\": \"Zambia\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b6\\u30f3\\u30d3\\u30a2\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b6\\u30f3\\u30d3\\u30a2\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Zambia\", \"common\": \"Zambia\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica da Z\\u00e2mbia\", \"common\": \"Z\\u00e2mbia\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0417\\u0430\\u043c\\u0431\\u0438\\u044f\", \"common\": \"\\u0417\\u0430\\u043c\\u0431\\u0438\\u044f\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Zambia\", \"common\": \"Zambia\"},\n\t\t\t\"fin\": {\"official\": \"Sambian tasavalta\", \"common\": \"Sambia\"}\n\t\t},\n\t\t\"latlng\": [-15, 30],\n\t\t\"demonym\": \"Zambian\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"AGO\", \"BWA\", \"COD\", \"MWI\", \"MOZ\", \"NAM\", \"TZA\", \"ZWE\"],\n\t\t\"area\": 752612\n\t},\n\t{\n\t\t\"name\": {\n\t\t\t\"common\": \"Zimbabwe\",\n\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\"native\": {\n\t\t\t\t\"bwg\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"eng\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"kck\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"khi\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"ndc\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"nde\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"nya\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"sna\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"sot\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"toi\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"tsn\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"tso\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"ven\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"xho\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t},\n\t\t\t\t\"zib\": {\n\t\t\t\t\t\"official\": \"Republic of Zimbabwe\",\n\t\t\t\t\t\"common\": \"Zimbabwe\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tld\": [\".zw\"],\n\t\t\"cca2\": \"ZW\",\n\t\t\"ccn3\": \"716\",\n\t\t\"cca3\": \"ZWE\",\n\t\t\"cioc\": \"ZIM\",\n\t\t\"currency\": [\"ZWL\"],\n\t\t\"callingCode\": [\"263\"],\n\t\t\"capital\": \"Harare\",\n\t\t\"altSpellings\": [\"ZW\", \"Republic of Zimbabwe\"],\n\t\t\"region\": \"Africa\",\n\t\t\"subregion\": \"Eastern Africa\",\n\t\t\"languages\": {\n\t\t\t\"bwg\": \"Chibarwe\",\n\t\t\t\"eng\": \"English\",\n\t\t\t\"kck\": \"Kalanga\",\n\t\t\t\"khi\": \"Khoisan\",\n\t\t\t\"ndc\": \"Ndau\",\n\t\t\t\"nde\": \"Northern Ndebele\",\n\t\t\t\"nya\": \"Chewa\",\n\t\t\t\"sna\": \"Shona\",\n\t\t\t\"sot\": \"Sotho\",\n\t\t\t\"toi\": \"Tonga\",\n\t\t\t\"tsn\": \"Tswana\",\n\t\t\t\"tso\": \"Tsonga\",\n\t\t\t\"ven\": \"Venda\",\n\t\t\t\"xho\": \"Xhosa\",\n\t\t\t\"zib\": \"Zimbabwean Sign Language\"\n\t\t},\n\t\t\"translations\": {\n\t\t\t\"deu\": {\"official\": \"Republik Simbabwe\", \"common\": \"Simbabwe\"},\n\t\t\t\"fra\": {\"official\": \"R\\u00e9publique du Zimbabwe\", \"common\": \"Zimbabwe\"},\n\t\t\t\"hrv\": {\"official\": \"Republika Zimbabve\", \"common\": \"Zimbabve\"},\n\t\t\t\"ita\": {\"official\": \"Repubblica dello Zimbabwe\", \"common\": \"Zimbabwe\"},\n\t\t\t\"jpn\": {\"official\": \"\\u30b8\\u30f3\\u30d0\\u30d6\\u30a8\\u5171\\u548c\\u56fd\", \"common\": \"\\u30b8\\u30f3\\u30d0\\u30d6\\u30a8\"},\n\t\t\t\"nld\": {\"official\": \"Republiek Zimbabwe\", \"common\": \"Zimbabwe\"},\n\t\t\t\"por\": {\"official\": \"Rep\\u00fablica do Zimbabwe\", \"common\": \"Zimbabwe\"},\n\t\t\t\"rus\": {\"official\": \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u0417\\u0438\\u043c\\u0431\\u0430\\u0431\\u0432\\u0435\", \"common\": \"\\u0417\\u0438\\u043c\\u0431\\u0430\\u0431\\u0432\\u0435\"},\n\t\t\t\"spa\": {\"official\": \"Rep\\u00fablica de Zimbabue\", \"common\": \"Zimbabue\"},\n\t\t\t\"fin\": {\"official\": \"Zimbabwen tasavalta\", \"common\": \"Zimbabwe\"}\n\t\t},\n\t\t\"latlng\": [-20, 30],\n\t\t\"demonym\": \"Zimbabwean\",\n\t\t\"landlocked\": true,\n\t\t\"borders\": [\"BWA\", \"MOZ\", \"ZAF\", \"ZMB\"],\n\t\t\"area\": 390757\n\t}\n]\n"

/***/ }
/******/ ]);